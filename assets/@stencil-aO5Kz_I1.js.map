{"version":3,"file":"@stencil-aO5Kz_I1.js","sources":["../../node_modules/@stencil/core/internal/app-data/index.js","../../node_modules/@stencil/core/internal/client/index.js"],"sourcesContent":["// src/app-data/index.ts\nvar BUILD = {\n  allRenderFn: false,\n  cmpDidLoad: true,\n  cmpDidUnload: false,\n  cmpDidUpdate: true,\n  cmpDidRender: true,\n  cmpWillLoad: true,\n  cmpWillUpdate: true,\n  cmpWillRender: true,\n  connectedCallback: true,\n  disconnectedCallback: true,\n  element: true,\n  event: true,\n  hasRenderFn: true,\n  lifecycle: true,\n  hostListener: true,\n  hostListenerTargetWindow: true,\n  hostListenerTargetDocument: true,\n  hostListenerTargetBody: true,\n  hostListenerTargetParent: false,\n  hostListenerTarget: true,\n  member: true,\n  method: true,\n  mode: true,\n  observeAttribute: true,\n  prop: true,\n  propMutable: true,\n  reflect: true,\n  scoped: true,\n  shadowDom: true,\n  slot: true,\n  cssAnnotations: true,\n  state: true,\n  style: true,\n  formAssociated: false,\n  svg: true,\n  updatable: true,\n  vdomAttribute: true,\n  vdomXlink: true,\n  vdomClass: true,\n  vdomFunctional: true,\n  vdomKey: true,\n  vdomListener: true,\n  vdomRef: true,\n  vdomPropOrAttr: true,\n  vdomRender: true,\n  vdomStyle: true,\n  vdomText: true,\n  watchCallback: true,\n  taskQueue: true,\n  hotModuleReplacement: false,\n  isDebug: false,\n  isDev: false,\n  isTesting: false,\n  hydrateServerSide: false,\n  hydrateClientSide: false,\n  lifecycleDOMEvents: false,\n  lazyLoad: false,\n  profile: false,\n  slotRelocation: true,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  appendChildSlotFix: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  cloneNodeFix: false,\n  hydratedAttribute: false,\n  hydratedClass: true,\n  // TODO(STENCIL-1305): remove this option\n  scriptDataOpts: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  scopedSlotTextContentFix: false,\n  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n  shadowDomShim: false,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  slotChildNodesFix: false,\n  invisiblePrehydration: true,\n  propBoolean: true,\n  propNumber: true,\n  propString: true,\n  constructableCSS: true,\n  cmpShouldUpdate: true,\n  devTools: false,\n  shadowDelegatesFocus: true,\n  initializeNextTick: false,\n  asyncLoading: true,\n  asyncQueue: false,\n  transformTagName: false,\n  attachStyles: true,\n  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior\n  experimentalSlotFixes: false\n};\nvar Env = {};\nvar NAMESPACE = (\n  /* default */\n  \"app\"\n);\nexport {\n  BUILD,\n  Env,\n  NAMESPACE\n};\n","/*\n Stencil Client Platform v4.25.3 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/es2022-rewire-class-members.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/es2022-rewire-class-members.ts\nvar reWireGetterSetter = (instance, hostRef) => {\n  var _a;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n  members.map(([memberName, [memberFlags]]) => {\n    if ((BUILD2.state || BUILD2.prop) && (memberFlags & 31 /* Prop */ || memberFlags & 32 /* State */)) {\n      const ogValue = instance[memberName];\n      const ogDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(instance), memberName);\n      Object.defineProperty(instance, memberName, {\n        get() {\n          return ogDescriptor.get.call(this);\n        },\n        set(newValue) {\n          ogDescriptor.set.call(this, newValue);\n        },\n        configurable: true,\n        enumerable: true\n      });\n      instance[memberName] = hostRef.$instanceValues$.has(memberName) ? hostRef.$instanceValues$.get(memberName) : ogValue;\n    }\n  });\n};\n\n// src/client/client-host-ref.ts\nvar hostRefs = BUILD3.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar deleteHostRef = (ref) => hostRefs.delete(ref);\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => {\n  hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n  if (BUILD3.modernPropertyDecls && (BUILD3.state || BUILD3.prop)) {\n    reWireGetterSetter(lazyInstance, hostRef);\n  }\n};\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD3.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD3.method && BUILD3.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD3.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  const ref = hostRefs.set(hostElement, hostRef);\n  if (!BUILD3.lazyLoad && BUILD3.modernPropertyDecls && (BUILD3.state || BUILD3.prop)) {\n    reWireGetterSetter(hostElement, hostRef);\n  }\n  return ref;\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD4.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD5.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD5.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD5.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then(\n    (importedModule) => {\n      if (!BUILD5.hotModuleReplacement) {\n        cmpModules.set(bundleId, importedModule);\n      }\n      return importedModule[exportName];\n    },\n    (e) => {\n      consoleError(e, hostRef.$hostElement$);\n    }\n  );\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar COMMENT_NODE_ID = \"c\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar STENCIL_DOC_DATA = \"_stencilDocData\";\nvar DEFAULT_DOC_DATA = {\n  hostIds: 0,\n  rootLevelIds: 0,\n  staticComponents: /* @__PURE__ */ new Set()\n};\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/client/client-window.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = BUILD6.shadowDom;\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD6.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD7.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD7.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD29, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null && v !== void 0;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD12 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/slot-polyfill-utils.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.__childNodes || elm.childNodes;\n  if (elm.tagName && elm.tagName.includes(\"-\") && elm[\"s-cr\"] && elm.tagName !== \"SLOT-FB\") {\n    getHostSlotNodes(childNodes, elm.tagName).forEach((slotNode) => {\n      var _a;\n      if (slotNode.nodeType === 1 /* ElementNode */ && slotNode.tagName === \"SLOT-FB\") {\n        if ((_a = getHostSlotChildNodes(slotNode, slotNode[\"s-sn\"], false)) == null ? void 0 : _a.length) {\n          slotNode.hidden = true;\n        } else {\n          slotNode.hidden = false;\n        }\n      }\n    });\n  }\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */ && (childNode.__childNodes || childNode.childNodes).length) {\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar getSlottedChildNodes = (childNodes) => {\n  const result = [];\n  for (let i2 = 0; i2 < childNodes.length; i2++) {\n    const slottedNode = childNodes[i2][\"s-nr\"] || void 0;\n    if (slottedNode && slottedNode.isConnected) {\n      result.push(slottedNode);\n    }\n  }\n  return result;\n};\nfunction getHostSlotNodes(childNodes, hostName, slotName) {\n  let i2 = 0;\n  let slottedNodes = [];\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-hn\"] === hostName && (slotName === void 0 || childNode[\"s-sn\"] === slotName)) {\n      slottedNodes.push(childNode);\n      if (typeof slotName !== \"undefined\") return slottedNodes;\n    }\n    slottedNodes = [...slottedNodes, ...getHostSlotNodes(childNode.childNodes, hostName, slotName)];\n  }\n  return slottedNodes;\n}\nvar getHostSlotChildNodes = (node, slotName, includeSlot = true) => {\n  const childNodes = [];\n  if (includeSlot && node[\"s-sr\"] || !node[\"s-sr\"]) childNodes.push(node);\n  while ((node = node.nextSibling) && node[\"s-sn\"] === slotName) {\n    childNodes.push(node);\n  }\n  return childNodes;\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar addSlotRelocateNode = (newChild, slotNode, prepend, position) => {\n  let slottedNodeLocation;\n  if (newChild[\"s-ol\"] && newChild[\"s-ol\"].isConnected) {\n    slottedNodeLocation = newChild[\"s-ol\"];\n  } else {\n    slottedNodeLocation = document.createTextNode(\"\");\n    slottedNodeLocation[\"s-nr\"] = newChild;\n  }\n  if (!slotNode[\"s-cr\"] || !slotNode[\"s-cr\"].parentNode) return;\n  const parent = slotNode[\"s-cr\"].parentNode;\n  const appendMethod = prepend ? parent.__prepend || parent.prepend : parent.__appendChild || parent.appendChild;\n  if (typeof position !== \"undefined\") {\n    if (BUILD8.hydrateClientSide) {\n      slottedNodeLocation[\"s-oo\"] = position;\n      const childNodes = parent.__childNodes || parent.childNodes;\n      const slotRelocateNodes = [slottedNodeLocation];\n      childNodes.forEach((n) => {\n        if (n[\"s-nr\"]) slotRelocateNodes.push(n);\n      });\n      slotRelocateNodes.sort((a, b) => {\n        if (!a[\"s-oo\"] || a[\"s-oo\"] < b[\"s-oo\"]) return -1;\n        else if (!b[\"s-oo\"] || b[\"s-oo\"] < a[\"s-oo\"]) return 1;\n        return 0;\n      });\n      slotRelocateNodes.forEach((n) => appendMethod.call(parent, n));\n    }\n  } else {\n    appendMethod.call(parent, slottedNodeLocation);\n  }\n  newChild[\"s-ol\"] = slottedNodeLocation;\n  newChild[\"s-sh\"] = slotNode[\"s-hn\"];\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\n\n// src/runtime/dom-extras.ts\nvar patchPseudoShadowDom = (hostElementPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchInsertBefore(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD9.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD9.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      const childNodes = this.__childNodes || this.childNodes;\n      for (; i2 < childNodes.length; i2++) {\n        slotted = childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD9.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNodes(this.__childNodes || this.childNodes, this.tagName, slotName)[0];\n    if (slotNode) {\n      addSlotRelocateNode(newChild, slotNode);\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const parent = intrnlCall(appendAfter, \"parentNode\");\n      let insertedNode;\n      if (parent.__insertBefore) {\n        insertedNode = parent.__insertBefore(newChild, appendAfter.nextSibling);\n      } else {\n        insertedNode = parent.insertBefore(newChild, appendAfter.nextSibling);\n      }\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNodes(childNodes, this.tagName, toRemove[\"s-sn\"]);\n      if (slotNode && toRemove.isConnected) {\n        toRemove.remove();\n        updateFallbackSlotVisibility(this);\n        return;\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  HostElementPrototype.__prepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNodes(childNodes, this.tagName, slotName)[0];\n      if (slotNode) {\n        addSlotRelocateNode(newChild, slotNode, true);\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        const parent = intrnlCall(appendAfter, \"parentNode\");\n        if (parent.__insertBefore) {\n          return parent.__insertBefore(newChild, intrnlCall(appendAfter, \"nextSibling\"));\n        } else {\n          return parent.insertBefore(newChild, intrnlCall(appendAfter, \"nextSibling\"));\n        }\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return HostElementPrototype.__prepend(newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.__append = HostElementPrototype.append;\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchInsertBefore = (HostElementPrototype) => {\n  const eleProto = HostElementPrototype;\n  if (eleProto.__insertBefore) return;\n  eleProto.__insertBefore = HostElementPrototype.insertBefore;\n  HostElementPrototype.insertBefore = function(newChild, currentChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNodes(this.__childNodes, this.tagName, slotName)[0];\n    const slottedNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n    if (slotNode) {\n      let found = false;\n      slottedNodes.forEach((childNode) => {\n        if (childNode === currentChild || currentChild === null) {\n          found = true;\n          if (currentChild === null || slotName !== currentChild[\"s-sn\"]) {\n            this.appendChild(newChild);\n            return;\n          }\n          if (slotName === currentChild[\"s-sn\"]) {\n            addSlotRelocateNode(newChild, slotNode);\n            const parent = intrnlCall(currentChild, \"parentNode\");\n            if (parent.__insertBefore) {\n              parent.__insertBefore(newChild, currentChild);\n            } else {\n              parent.insertBefore(newChild, currentChild);\n            }\n          }\n          return;\n        }\n      });\n      if (found) return newChild;\n    }\n    return this.__insertBefore(newChild, currentChild);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  patchHostOriginalAccessor(\"textContent\", hostElementPrototype);\n  Object.defineProperty(hostElementPrototype, \"textContent\", {\n    get: function() {\n      let text = \"\";\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => text += node.textContent || \"\");\n      return text;\n    },\n    set: function(value) {\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => {\n        if (node[\"s-ol\"]) node[\"s-ol\"].remove();\n        node.remove();\n      });\n      this.insertAdjacentHTML(\"beforeend\", value);\n    }\n  });\n};\nvar patchChildSlotNodes = (elm) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  patchHostOriginalAccessor(\"children\", elm);\n  Object.defineProperty(elm, \"children\", {\n    get() {\n      return this.childNodes.filter((n) => n.nodeType === 1);\n    }\n  });\n  Object.defineProperty(elm, \"childElementCount\", {\n    get() {\n      return this.children.length;\n    }\n  });\n  patchHostOriginalAccessor(\"firstChild\", elm);\n  Object.defineProperty(elm, \"firstChild\", {\n    get() {\n      return this.childNodes[0];\n    }\n  });\n  patchHostOriginalAccessor(\"lastChild\", elm);\n  Object.defineProperty(elm, \"lastChild\", {\n    get() {\n      return this.childNodes[this.childNodes.length - 1];\n    }\n  });\n  patchHostOriginalAccessor(\"childNodes\", elm);\n  Object.defineProperty(elm, \"childNodes\", {\n    get() {\n      const result = new FakeNodeList();\n      result.push(...getSlottedChildNodes(this.__childNodes));\n      return result;\n    }\n  });\n};\nvar patchSlottedNode = (node) => {\n  if (!node || node.__nextSibling || !globalThis.Node) return;\n  patchNextSibling(node);\n  patchPreviousSibling(node);\n  patchParentNode(node);\n  if (node.nodeType === Node.ELEMENT_NODE) {\n    patchNextElementSibling(node);\n    patchPreviousElementSibling(node);\n  }\n};\nvar patchNextSibling = (node) => {\n  if (!node || node.__nextSibling) return;\n  patchHostOriginalAccessor(\"nextSibling\", node);\n  Object.defineProperty(node, \"nextSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.childNodes;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index + 1];\n      }\n      return this.__nextSibling;\n    }\n  });\n};\nvar patchNextElementSibling = (element) => {\n  if (!element || element.__nextElementSibling) return;\n  patchHostOriginalAccessor(\"nextElementSibling\", element);\n  Object.defineProperty(element, \"nextElementSibling\", {\n    get: function() {\n      var _a;\n      const parentEles = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.children;\n      const index = parentEles == null ? void 0 : parentEles.indexOf(this);\n      if (parentEles && index > -1) {\n        return parentEles[index + 1];\n      }\n      return this.__nextElementSibling;\n    }\n  });\n};\nvar patchPreviousSibling = (node) => {\n  if (!node || node.__previousSibling) return;\n  patchHostOriginalAccessor(\"previousSibling\", node);\n  Object.defineProperty(node, \"previousSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.childNodes;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index - 1];\n      }\n      return this.__previousSibling;\n    }\n  });\n};\nvar patchPreviousElementSibling = (element) => {\n  if (!element || element.__previousElementSibling) return;\n  patchHostOriginalAccessor(\"previousElementSibling\", element);\n  Object.defineProperty(element, \"previousElementSibling\", {\n    get: function() {\n      var _a;\n      const parentNodes = (_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode.children;\n      const index = parentNodes == null ? void 0 : parentNodes.indexOf(this);\n      if (parentNodes && index > -1) {\n        return parentNodes[index - 1];\n      }\n      return this.__previousElementSibling;\n    }\n  });\n};\nvar patchParentNode = (node) => {\n  if (!node || node.__parentNode) return;\n  patchHostOriginalAccessor(\"parentNode\", node);\n  Object.defineProperty(node, \"parentNode\", {\n    get: function() {\n      var _a;\n      return ((_a = this[\"s-ol\"]) == null ? void 0 : _a.parentNode) || this.__parentNode;\n    },\n    set: function(value) {\n      this.__parentNode = value;\n    }\n  });\n};\nvar validElementPatches = [\"children\", \"nextElementSibling\", \"previousElementSibling\"];\nvar validNodesPatches = [\n  \"childNodes\",\n  \"firstChild\",\n  \"lastChild\",\n  \"nextSibling\",\n  \"previousSibling\",\n  \"textContent\",\n  \"parentNode\"\n];\nfunction patchHostOriginalAccessor(accessorName, node) {\n  let accessor;\n  if (validElementPatches.includes(accessorName)) {\n    accessor = Object.getOwnPropertyDescriptor(Element.prototype, accessorName);\n  } else if (validNodesPatches.includes(accessorName)) {\n    accessor = Object.getOwnPropertyDescriptor(Node.prototype, accessorName);\n  }\n  if (!accessor) {\n    accessor = Object.getOwnPropertyDescriptor(node, accessorName);\n  }\n  if (accessor) Object.defineProperty(node, \"__\" + accessorName, accessor);\n}\nfunction intrnlCall(node, method) {\n  if (\"__\" + method in node) {\n    return node[\"__\" + method];\n  } else {\n    return node[method];\n  }\n}\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD10.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD10.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD10.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD11.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD11.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD11.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD11.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD11.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD11.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD11.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD11.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD11.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD11.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD11.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD11.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const slottedNodes = [];\n  const shadowRootNodes = BUILD12.shadowDom && shadowRoot ? [] : null;\n  const vnode = newVNode(tagName, null);\n  vnode.$elm$ = hostElm;\n  let scopeId2;\n  if (BUILD12.scoped) {\n    const cmpMeta = hostRef.$cmpMeta$;\n    if (cmpMeta && cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */ && hostElm[\"s-sc\"]) {\n      scopeId2 = hostElm[\"s-sc\"];\n      hostElm.classList.add(scopeId2 + \"-h\");\n    } else if (hostElm[\"s-sc\"]) {\n      delete hostElm[\"s-sc\"];\n    }\n  }\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  hostRef.$vnode$ = clientHydrate(\n    vnode,\n    childRenderNodes,\n    slotNodes,\n    shadowRootNodes,\n    hostElm,\n    hostElm,\n    hostId,\n    slottedNodes\n  );\n  let crIndex = 0;\n  const crLength = childRenderNodes.length;\n  let childRenderNode;\n  for (crIndex; crIndex < crLength; crIndex++) {\n    childRenderNode = childRenderNodes[crIndex];\n    const orgLocationId = childRenderNode.$hostId$ + \".\" + childRenderNode.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = childRenderNode.$elm$;\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName.toUpperCase();\n      if (childRenderNode.$tag$ === \"slot\") {\n        node[\"s-cr\"] = hostElm[\"s-cr\"];\n      }\n    }\n    if (childRenderNode.$tag$ === \"slot\") {\n      childRenderNode.$name$ = childRenderNode.$elm$[\"s-sn\"] || childRenderNode.$elm$[\"name\"] || null;\n      if (childRenderNode.$children$) {\n        childRenderNode.$flags$ |= 2 /* isSlotFallback */;\n        if (!childRenderNode.$elm$.childNodes.length) {\n          childRenderNode.$children$.forEach((c) => {\n            childRenderNode.$elm$.appendChild(c.$elm$);\n          });\n        }\n      } else {\n        childRenderNode.$flags$ |= 1 /* isSlotReference */;\n      }\n    }\n    if (orgLocationNode && orgLocationNode.isConnected) {\n      if (shadowRoot && orgLocationNode[\"s-en\"] === \"\") {\n        orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n      }\n      orgLocationNode.parentNode.removeChild(orgLocationNode);\n      if (!shadowRoot) {\n        node[\"s-oo\"] = parseInt(childRenderNode.$nodeId$);\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  }\n  const hosts = [];\n  const snLen = slottedNodes.length;\n  let snIndex = 0;\n  let slotGroup;\n  let snGroupIdx;\n  let snGroupLen;\n  let slottedItem;\n  for (snIndex; snIndex < snLen; snIndex++) {\n    slotGroup = slottedNodes[snIndex];\n    if (!slotGroup || !slotGroup.length) continue;\n    snGroupLen = slotGroup.length;\n    snGroupIdx = 0;\n    for (snGroupIdx; snGroupIdx < snGroupLen; snGroupIdx++) {\n      slottedItem = slotGroup[snGroupIdx];\n      if (!hosts[slottedItem.hostId]) {\n        hosts[slottedItem.hostId] = plt.$orgLocNodes$.get(slottedItem.hostId);\n      }\n      if (!hosts[slottedItem.hostId]) continue;\n      const hostEle = hosts[slottedItem.hostId];\n      if (!hostEle.shadowRoot || !shadowRoot) {\n        slottedItem.slot[\"s-cr\"] = hostEle[\"s-cr\"];\n        if (!slottedItem.slot[\"s-cr\"] && hostEle.shadowRoot) {\n          slottedItem.slot[\"s-cr\"] = hostEle;\n        } else {\n          slottedItem.slot[\"s-cr\"] = (hostEle.__childNodes || hostEle.childNodes)[0];\n        }\n        addSlotRelocateNode(slottedItem.node, slottedItem.slot, false, slottedItem.node[\"s-oo\"]);\n        if (BUILD12.experimentalSlotFixes) {\n          patchSlottedNode(slottedItem.node);\n        }\n      }\n      if (hostEle.shadowRoot && slottedItem.node.parentElement !== hostEle) {\n        hostEle.appendChild(slottedItem.node);\n      }\n    }\n  }\n  if (BUILD12.scoped && scopeId2 && slotNodes.length) {\n    slotNodes.forEach((slot) => {\n      slot.$elm$.parentElement.classList.add(scopeId2 + \"-s\");\n    });\n  }\n  if (BUILD12.shadowDom && shadowRoot) {\n    let rnIdex = 0;\n    const rnLen = shadowRootNodes.length;\n    for (rnIdex; rnIdex < rnLen; rnIdex++) {\n      shadowRoot.appendChild(shadowRootNodes[rnIdex]);\n    }\n  }\n  hostRef.$hostElement$ = hostElm;\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId, slottedNodes = []) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  const scopeId2 = hostElm[\"s-sc\"];\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = createSimpleVNode({\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          // If we don't add the initial classes to the VNode, the first `vdom-render.ts` patch\n          // won't try to reconcile them. Classes set on the node will be blown away.\n          $attrs$: { class: node.className || \"\" }\n        });\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        if (BUILD12.scoped && scopeId2) {\n          node[\"s-si\"] = scopeId2;\n          childVNode.$attrs$.class += \" \" + scopeId2;\n        }\n        const slotName = childVNode.$elm$.getAttribute(\"s-sn\");\n        if (typeof slotName === \"string\") {\n          if (childVNode.$tag$ === \"slot-fb\") {\n            addSlot(\n              slotName,\n              childIdSplt[2],\n              childVNode,\n              node,\n              parentVNode,\n              childRenderNodes,\n              slotNodes,\n              shadowRootNodes,\n              slottedNodes\n            );\n            if (BUILD12.scoped && scopeId2) {\n              node.classList.add(scopeId2);\n            }\n          }\n          childVNode.$elm$[\"s-sn\"] = slotName;\n          childVNode.$elm$.removeAttribute(\"s-sn\");\n        }\n        if (childVNode.$index$ !== void 0) {\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        }\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId,\n          slottedNodes\n        );\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = nonShadowNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        nonShadowNodes[i2],\n        hostId,\n        slottedNodes\n      );\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = createSimpleVNode({\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4] || \"0\",\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      });\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (hostId === childVNode.$hostId$) {\n            if (!parentVNode.$children$) {\n              parentVNode.$children$ = [];\n            }\n            parentVNode.$children$[childVNode.$index$] = childVNode;\n          }\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childNodeType === COMMENT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 8 /* CommentNode */) {\n          childRenderNodes.push(childVNode);\n          node.remove();\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          const slotName = node[\"s-sn\"] = childIdSplt[5] || \"\";\n          addSlot(\n            slotName,\n            childIdSplt[2],\n            childVNode,\n            node,\n            parentVNode,\n            childRenderNodes,\n            slotNodes,\n            shadowRootNodes,\n            slottedNodes\n          );\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD12.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD12.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n  return parentVNode;\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    const componentId = node[HYDRATE_ID] || node.getAttribute(HYDRATE_ID);\n    if (componentId) {\n      orgLocNodes.set(componentId, node);\n    }\n    let i2 = 0;\n    if (node.shadowRoot) {\n      for (; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = 0; i2 < nonShadowNodes.length; i2++) {\n      initializeDocumentHydrate(nonShadowNodes[i2], orgLocNodes);\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\nvar createSimpleVNode = (vnode) => {\n  const defaultVNode = {\n    $flags$: 0,\n    $hostId$: null,\n    $nodeId$: null,\n    $depth$: null,\n    $index$: \"0\",\n    $elm$: null,\n    $attrs$: null,\n    $children$: null,\n    $key$: null,\n    $name$: null,\n    $tag$: null,\n    $text$: null\n  };\n  return { ...defaultVNode, ...vnode };\n};\nfunction addSlot(slotName, slotId, childVNode, node, parentVNode, childRenderNodes, slotNodes, shadowRootNodes, slottedNodes) {\n  node[\"s-sr\"] = true;\n  childVNode.$name$ = slotName || null;\n  childVNode.$tag$ = \"slot\";\n  const parentNodeId = (parentVNode == null ? void 0 : parentVNode.$elm$) ? parentVNode.$elm$[\"s-id\"] || parentVNode.$elm$.getAttribute(\"s-id\") : \"\";\n  if (BUILD12.shadowDom && shadowRootNodes) {\n    const slot = childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n    if (childVNode.$name$) {\n      childVNode.$elm$.setAttribute(\"name\", slotName);\n    }\n    if (parentNodeId && parentNodeId !== childVNode.$hostId$) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    } else {\n      node.parentNode.insertBefore(childVNode.$elm$, node);\n    }\n    addSlottedNodes(slottedNodes, slotId, slotName, node, childVNode.$hostId$);\n    node.remove();\n    if (childVNode.$depth$ === \"0\") {\n      shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n    }\n  } else {\n    const slot = childVNode.$elm$;\n    const shouldMove = parentNodeId && parentNodeId !== childVNode.$hostId$ && parentVNode.$elm$.shadowRoot;\n    addSlottedNodes(slottedNodes, slotId, slotName, node, shouldMove ? parentNodeId : childVNode.$hostId$);\n    if (shouldMove) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    }\n    childRenderNodes.push(childVNode);\n  }\n  slotNodes.push(childVNode);\n  if (!parentVNode.$children$) {\n    parentVNode.$children$ = [];\n  }\n  parentVNode.$children$[childVNode.$index$] = childVNode;\n}\nvar addSlottedNodes = (slottedNodes, slotNodeId, slotName, slotNode, hostId) => {\n  let slottedNode = slotNode.nextSibling;\n  slottedNodes[slotNodeId] = slottedNodes[slotNodeId] || [];\n  while (slottedNode && ((slottedNode[\"getAttribute\"] && slottedNode.getAttribute(\"slot\") || slottedNode[\"s-sn\"]) === slotName || slotName === \"\" && !slottedNode[\"s-sn\"] && (slottedNode.nodeType === 8 /* CommentNode */ && slottedNode.nodeValue.indexOf(\".\") !== 1 || slottedNode.nodeType === 3 /* TextNode */))) {\n    slottedNode[\"s-sn\"] = slotName;\n    slottedNodes[slotNodeId].push({ slot: slotNode, node: slottedNode, hostId });\n    slottedNode = slottedNode.nextSibling;\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD13.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD13.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD13.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD20, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD14.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD15.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD16.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD16.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = document.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`) || doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if ((BUILD16.hydrateServerSide || BUILD16.hotModuleReplacement) && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          if (!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */)) {\n            if (styleContainerNode.nodeName === \"HEAD\") {\n              const preconnectLinks = styleContainerNode.querySelectorAll(\"link[rel=preconnect]\");\n              const referenceNode2 = preconnectLinks.length > 0 ? preconnectLinks[preconnectLinks.length - 1].nextSibling : styleContainerNode.querySelector(\"style\");\n              styleContainerNode.insertBefore(\n                styleElm,\n                (referenceNode2 == null ? void 0 : referenceNode2.parentNode) === styleContainerNode ? referenceNode2 : null\n              );\n            } else if (\"host\" in styleContainerNode) {\n              if (supportsConstructableStylesheets) {\n                const stylesheet = new CSSStyleSheet();\n                stylesheet.replaceSync(style);\n                styleContainerNode.adoptedStyleSheets = [stylesheet, ...styleContainerNode.adoptedStyleSheets];\n              } else {\n                const existingStyleContainer = styleContainerNode.querySelector(\"style\");\n                if (existingStyleContainer) {\n                  existingStyleContainer.innerHTML = style + existingStyleContainer.innerHTML;\n                } else {\n                  styleContainerNode.prepend(styleElm);\n                }\n              }\n            } else {\n              styleContainerNode.append(styleElm);\n            }\n          }\n          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */ && styleContainerNode.nodeName !== \"HEAD\") {\n            styleContainerNode.insertBefore(styleElm, null);\n          }\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD16.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD16.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD16.shadowDom || BUILD16.scoped) && BUILD16.cssAnnotations && flags & 10 /* needsScopedEncapsulation */ && flags & 2 /* scopedCssEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD16.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags, initialRender) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD17.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      let newClasses = parseClassList(newValue);\n      if (BUILD17.hydrateClientSide && elm[\"s-si\"] && initialRender) {\n        newClasses.push(elm[\"s-si\"]);\n        oldClasses.forEach((c) => {\n          if (c.startsWith(elm[\"s-si\"])) newClasses.push(c);\n        });\n        newClasses = [...new Set(newClasses)];\n        classList.add(...newClasses);\n      } else {\n        classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n        classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n      }\n    } else if (BUILD17.vdomStyle && memberName === \"style\") {\n      if (BUILD17.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD17.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD17.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD17.vdomKey && memberName === \"key\") {\n    } else if (BUILD17.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD17.vdomListener && (BUILD17.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD17.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              if (typeof elm.__lookupSetter__(memberName) === \"function\") {\n                elm[memberName] = n;\n              } else {\n                elm.setAttribute(memberName, n);\n              }\n            }\n          } else if (elm[memberName] !== newValue) {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD17.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD17.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD17.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => {\n  if (typeof value === \"object\" && value && \"baseVal\" in value) {\n    value = value.baseVal;\n  }\n  if (!value || typeof value !== \"string\") {\n    return [];\n  }\n  return value.split(parseClassListRegex);\n};\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2, isInitialRender) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || {};\n  const newVnodeAttrs = newVnode.$attrs$ || {};\n  if (BUILD18.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(\n          elm,\n          memberName,\n          oldVnodeAttrs[memberName],\n          void 0,\n          isSvgMode2,\n          newVnode.$flags$,\n          isInitialRender\n        );\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(\n      elm,\n      memberName,\n      oldVnodeAttrs[memberName],\n      newVnodeAttrs[memberName],\n      isSvgMode2,\n      newVnode.$flags$,\n      isInitialRender\n    );\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD19.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD19.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD19.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD19.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD19.isDebug || BUILD19.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD19.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD19.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      !useNativeShadowDom && BUILD19.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      !useNativeShadowDom && BUILD19.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD19.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD19.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if (BUILD19.scoped && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD19.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD19.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD19.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n      if (BUILD19.scoped) {\n        addRemoveSlotScopedClass(contentRef, elm, newParentVNode.$elm$, oldParentVNode == null ? void 0 : oldParentVNode.$elm$);\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.__childNodes || host.childNodes).find(\n      (ref) => ref[\"s-cr\"]\n    );\n    const childNodeArray = Array.from(\n      parentElm.__childNodes || parentElm.childNodes\n    );\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.__childNodes || parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD19.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(referenceNode(childNode).parentNode, childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD19.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD19.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD19.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD19.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD19.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD19.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD19.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD19.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD19.slotRelocation) {\n          insertBefore(\n            referenceNode(oldStartVnode.$elm$).parentNode,\n            node,\n            referenceNode(oldStartVnode.$elm$)\n          );\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD19.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD19.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD19.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    if (isInitialRender && !leftVNode.$key$ && rightVNode.$key$) {\n      leftVNode.$key$ = rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => node && node[\"s-ol\"] || node;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD19.vdomText || text === null) {\n    if (BUILD19.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD19.vdomAttribute || BUILD19.reflect) {\n      if (BUILD19.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD19.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode, isInitialRender);\n      }\n    }\n    if (BUILD19.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD19.updatable && BUILD19.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (\n      // don't do this on initial render as it can cause non-hydrated content to be removed\n      !isInitialRender && BUILD19.updatable && oldChildren !== null\n    ) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD19.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD19.vdomText && BUILD19.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD19.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  const children = elm.__childNodes || elm.childNodes;\n  for (const childNode of children) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.__childNodes || node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD19.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD19.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  if (BUILD19.scoped && typeof newNode[\"s-sn\"] === \"string\" && !!newNode[\"s-sr\"] && !!newNode[\"s-cr\"]) {\n    addRemoveSlotScopedClass(newNode[\"s-cr\"], newNode, parent, newNode.parentElement);\n  } else if (BUILD19.experimentalSlotFixes && typeof newNode[\"s-sn\"] === \"string\") {\n    if (parent.getRootNode().nodeType !== 11 /* DOCUMENT_FRAGMENT_NODE */) {\n      patchParentNode(newNode);\n    }\n    return parent.insertBefore(newNode, reference);\n  }\n  if (BUILD19.experimentalSlotFixes && parent.__insertBefore) {\n    return parent.__insertBefore(newNode, reference);\n  } else {\n    return parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  }\n};\nfunction addRemoveSlotScopedClass(reference, slotNode, newParent, oldParent) {\n  var _a, _b;\n  let scopeId2;\n  if (reference && typeof slotNode[\"s-sn\"] === \"string\" && !!slotNode[\"s-sr\"] && reference.parentNode && reference.parentNode[\"s-sc\"] && (scopeId2 = slotNode[\"s-si\"] || reference.parentNode[\"s-sc\"])) {\n    const scopeName = slotNode[\"s-sn\"];\n    const hostName = slotNode[\"s-hn\"];\n    (_a = newParent.classList) == null ? void 0 : _a.add(scopeId2 + \"-s\");\n    if (oldParent && ((_b = oldParent.classList) == null ? void 0 : _b.contains(scopeId2 + \"-s\"))) {\n      let child = (oldParent.__childNodes || oldParent.childNodes)[0];\n      let found = false;\n      while (child) {\n        if (child[\"s-sn\"] !== scopeName && child[\"s-hn\"] === hostName && !!child[\"s-sr\"]) {\n          found = true;\n          break;\n        }\n        child = child.nextSibling;\n      }\n      if (!found) oldParent.classList.remove(scopeId2 + \"-s\");\n    }\n  }\n}\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD19.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD19.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD19.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD19.scoped || BUILD19.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD19.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD19.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD19.isDebug || BUILD19.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD19.hydrateServerSide && (!BUILD19.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */)) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === (refNode.__parentNode || refNode.parentNode)) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          const parent = nodeToRelocate.__parentNode || nodeToRelocate.parentNode;\n          const nextSibling = nodeToRelocate.__nextSibling || nodeToRelocate.nextSibling;\n          if (!insertBeforeNode && parentNodeRef !== parent || nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD19.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */ && nodeToRelocate.tagName !== \"SLOT-FB\") {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD19.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    const children = rootVnode.$elm$.__childNodes || rootVnode.$elm$.childNodes;\n    for (const childNode of children) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD20.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    const index = ancestorComponent[\"s-p\"].push(\n      new Promise(\n        (r) => hostRef.$onRenderResolve$ = () => {\n          ancestorComponent[\"s-p\"].splice(index - 1, 1);\n          r();\n        }\n      )\n    );\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD20.taskQueue && BUILD20.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD20.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD20.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD20.lazyLoad && BUILD20.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event, elm));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD20.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\", void 0, elm);\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD20.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\", void 0, elm);\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD20.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\", void 0, elm));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {\n  console.error(err2);\n  fn();\n}) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD20.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD20.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD20.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD20.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD20.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD20.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD20.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD20.allRenderFn ? true : false;\n  const lazyLoad = BUILD20.lazyLoad ? true : false;\n  const taskQueue = BUILD20.taskQueue ? true : false;\n  const updatable = BUILD20.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD20.hasRenderFn || BUILD20.reflect) {\n      if (BUILD20.vdomRender || BUILD20.reflect) {\n        if (BUILD20.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD20.cmpDidRender) {\n    if (BUILD20.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\", void 0, elm);\n    if (BUILD20.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD20.asyncLoading && BUILD20.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD20.cmpDidLoad) {\n      if (BUILD20.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\", void 0, elm);\n      if (BUILD20.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD20.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD20.cmpDidUpdate) {\n      if (BUILD20.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\", void 0, elm);\n      if (BUILD20.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD20.method && BUILD20.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD20.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD20.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD20.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD20.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg, elm) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD20.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD20.hydratedClass ? elm.classList.add((_a = BUILD20.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD20.hydratedAttribute ? elm.setAttribute((_b = BUILD20.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD21.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD21.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD21.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD21.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD21.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD21.lazyLoad || instance) {\n      if (BUILD21.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD21.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD21.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a, _b;\n  const prototype = Cstr.prototype;\n  if (BUILD22.isTesting) {\n    if (prototype.__stencilAugmented) {\n      return;\n    }\n    prototype.__stencilAugmented = true;\n  }\n  if (BUILD22.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => {\n      const originalFormAssociatedCallback = prototype[cbName];\n      Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const instance = BUILD22.lazyLoad ? hostRef.$lazyInstance$ : this;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((asyncInstance) => {\n              const cb = asyncInstance[cbName];\n              typeof cb === \"function\" && cb.call(asyncInstance, ...args);\n            });\n          } else {\n            const cb = BUILD22.lazyLoad ? instance[cbName] : originalFormAssociatedCallback;\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      });\n    });\n  }\n  if (BUILD22.member && cmpMeta.$members$ || BUILD22.watchCallback && (cmpMeta.$watchers$ || Cstr.watchers)) {\n    if (BUILD22.watchCallback && Cstr.watchers && !cmpMeta.$watchers$) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD22.prop || BUILD22.state) && (memberFlags & 31 /* Prop */ || (!BUILD22.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        const { get: origGetter, set: origSetter } = Object.getOwnPropertyDescriptor(prototype, memberName) || {};\n        if (origGetter) cmpMeta.$members$[memberName][0] |= 2048 /* Getter */;\n        if (origSetter) cmpMeta.$members$[memberName][0] |= 4096 /* Setter */;\n        if (flags & 1 /* isElementConstructor */ || !origGetter) {\n          Object.defineProperty(prototype, memberName, {\n            get() {\n              if (BUILD22.lazyLoad) {\n                if ((cmpMeta.$members$[memberName][0] & 2048 /* Getter */) === 0) {\n                  return getValue(this, memberName);\n                }\n                const ref = getHostRef(this);\n                const instance = ref ? ref.$lazyInstance$ : prototype;\n                if (!instance) return;\n                return instance[memberName];\n              }\n              if (!BUILD22.lazyLoad) {\n                return origGetter ? origGetter.apply(this) : getValue(this, memberName);\n              }\n            },\n            configurable: true,\n            enumerable: true\n          });\n        }\n        Object.defineProperty(prototype, memberName, {\n          set(newValue) {\n            const ref = getHostRef(this);\n            if (BUILD22.isDev) {\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // if the class has a setter, then the Element can update instance values, so ignore\n                (cmpMeta.$members$[memberName][0] & 4096 /* Setter */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            if (origSetter) {\n              const currentValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];\n              if (typeof currentValue === \"undefined\" && ref.$instanceValues$.get(memberName)) {\n                newValue = ref.$instanceValues$.get(memberName);\n              } else if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                ref.$instanceValues$.set(memberName, currentValue);\n              }\n              origSetter.apply(this, [parsePropertyValue(newValue, memberFlags)]);\n              newValue = memberFlags & 32 /* State */ ? this[memberName] : ref.$hostElement$[memberName];\n              setValue(this, memberName, newValue, cmpMeta);\n              return;\n            }\n            if (!BUILD22.lazyLoad) {\n              setValue(this, memberName, newValue, cmpMeta);\n              return;\n            }\n            if (BUILD22.lazyLoad) {\n              if ((flags & 1 /* isElementConstructor */) === 0 || (cmpMeta.$members$[memberName][0] & 4096 /* Setter */) === 0) {\n                setValue(this, memberName, newValue, cmpMeta);\n                if (flags & 1 /* isElementConstructor */ && !ref.$lazyInstance$) {\n                  ref.$onReadyPromise$.then(() => {\n                    if (cmpMeta.$members$[memberName][0] & 4096 /* Setter */ && ref.$lazyInstance$[memberName] !== ref.$instanceValues$.get(memberName)) {\n                      ref.$lazyInstance$[memberName] = newValue;\n                    }\n                  });\n                }\n                return;\n              }\n              const setterSetVal = () => {\n                const currentValue = ref.$lazyInstance$[memberName];\n                if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                  ref.$instanceValues$.set(memberName, currentValue);\n                }\n                ref.$lazyInstance$[memberName] = parsePropertyValue(newValue, memberFlags);\n                setValue(this, memberName, ref.$lazyInstance$[memberName], cmpMeta);\n              };\n              if (ref.$lazyInstance$) {\n                setterSetVal();\n              } else {\n                ref.$onReadyPromise$.then(() => setterSetVal());\n              }\n            }\n          }\n        });\n      } else if (BUILD22.lazyLoad && BUILD22.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD22.observeAttribute && (!BUILD22.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName) && BUILD22.lazyLoad) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && // cast type to number to avoid TS compiler issues\n          this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD22.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD22.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          const propDesc = Object.getOwnPropertyDescriptor(prototype, propName);\n          newValue = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n          if (newValue !== this[propName] && (!propDesc.get || !!propDesc.set)) {\n            this[propName] = newValue;\n          }\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD22.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if (BUILD23.lazyLoad && bundleId) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD23.member && !Cstr.isProxied) {\n        if (BUILD23.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD23.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e, elm);\n      }\n      if (BUILD23.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD23.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$, elm);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD23.style && Cstr && Cstr.style) {\n      let style;\n      if (typeof Cstr.style === \"string\") {\n        style = Cstr.style;\n      } else if (BUILD23.mode && typeof Cstr.style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = Cstr.style[hostRef.$modeName$];\n        }\n        if (BUILD23.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD23.hydrateServerSide && BUILD23.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD23.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD23.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance, elm) => {\n  if (BUILD23.lazyLoad && BUILD23.connectedCallback) {\n    safeCall(instance, \"connectedCallback\", void 0, elm);\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD24.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD24.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD24.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD24.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          } else if (BUILD24.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            const scopeId2 = getScopeId(cmpMeta, BUILD24.mode ? elm.getAttribute(\"s-mode\") : void 0);\n            elm[\"s-sc\"] = scopeId2;\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD24.slotRelocation && !hostId) {\n        if (BUILD24.hydrateServerSide || (BUILD24.slot || BUILD24.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD24.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD24.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD24.prop && !BUILD24.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD24.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$, elm);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$, elm));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD24.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance, elm) => {\n  if (BUILD25.lazyLoad && BUILD25.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\", void 0, elm || instance);\n  }\n  if (BUILD25.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\", void 0, elm || instance);\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD25.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD25.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$, elm);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$, elm));\n    }\n  }\n  if (rootAppliedStyles.has(elm)) {\n    rootAppliedStyles.delete(elm);\n  }\n  if (elm.shadowRoot && rootAppliedStyles.has(elm.shadowRoot)) {\n    rootAppliedStyles.delete(elm.shadowRoot);\n  }\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD26.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD26.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD26.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD26.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD26.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD26.experimentalSlotFixes) {\n    if (BUILD26.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype);\n    }\n  } else {\n    if (BUILD26.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype);\n    }\n    if (BUILD26.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD26.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD26.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __hasHostListenerAttached: false,\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      if (!this.__hasHostListenerAttached) {\n        const hostRef = getHostRef(this);\n        addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n        this.__hasHostListenerAttached = true;\n      }\n      connectedCallback(this);\n      if (BUILD26.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD26.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n      plt.raf(() => {\n        var _a;\n        const hostRef = getHostRef(this);\n        if (((_a = hostRef == null ? void 0 : hostRef.$vnode$) == null ? void 0 : _a.$elm$) instanceof Node && !hostRef.$vnode$.$elm$.isConnected) {\n          delete hostRef.$vnode$;\n        }\n        if (this instanceof Node && !this.isConnected) {\n          deleteHostRef(this);\n        }\n      });\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (!this.shadowRoot) {\n          if (BUILD26.shadowDelegatesFocus) {\n            this.attachShadow({\n              mode: \"open\",\n              delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n            });\n          } else {\n            this.attachShadow({ mode: \"open\" });\n          }\n        } else {\n          if (this.shadowRoot.mode !== \"open\") {\n            throw new Error(\n              `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`\n            );\n          }\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD26.style && BUILD26.mode && !BUILD26.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD27 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD27.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  let appLoadFallback;\n  let isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD27.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD27.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD27.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD27.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD27.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD27.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD27.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD27.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          this.hasRegisteredEventListeners = false;\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD27.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (!self.shadowRoot) {\n                if (BUILD27.shadowDelegatesFocus) {\n                  self.attachShadow({\n                    mode: \"open\",\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                  });\n                } else {\n                  self.attachShadow({ mode: \"open\" });\n                }\n              } else {\n                if (self.shadowRoot.mode !== \"open\") {\n                  throw new Error(\n                    `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`\n                  );\n                }\n              }\n            } else if (!BUILD27.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          const hostRef = getHostRef(this);\n          if (!this.hasRegisteredEventListeners) {\n            this.hasRegisteredEventListeners = true;\n            addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n          }\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n          plt.raf(() => {\n            var _a3;\n            const hostRef = getHostRef(this);\n            const i2 = deferredConnectedCallbacks.findIndex((host) => host === this);\n            if (i2 > -1) {\n              deferredConnectedCallbacks.splice(i2, 1);\n            }\n            if (((_a3 = hostRef == null ? void 0 : hostRef.$vnode$) == null ? void 0 : _a3.$elm$) instanceof Node && !hostRef.$vnode$.$elm$.isConnected) {\n              delete hostRef.$vnode$.$elm$;\n            }\n          });\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD27.experimentalSlotFixes) {\n        if (BUILD27.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype);\n        }\n      } else {\n        if (BUILD27.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype);\n        }\n        if (BUILD27.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD27.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD27.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD27.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD27.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD27.invisiblePrehydration && (BUILD27.hydratedClass || BUILD27.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD27.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD28 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD28.hostListener && listeners) {\n    if (BUILD28.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD28.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD28.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD28.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD28.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD28.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD28.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = STENCIL_DOC_DATA in doc2 ? doc2[STENCIL_DOC_DATA] : { ...DEFAULT_DOC_DATA };\n    docData.staticComponents = new Set(staticComponents);\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n            if (typeof nodeRef[\"s-sn\"] === \"string\" && !nodeRef.getAttribute(\"slot\")) {\n              nodeRef.setAttribute(\"s-sn\", nodeRef[\"s-sn\"]);\n            }\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          } else if (nodeRef.nodeType === 8 /* CommentNode */) {\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${COMMENT_NODE_ID}.${childId}`;\n            nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  var _a;\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];\n    childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    if (typeof childElm[\"s-sn\"] === \"string\" && !childElm.getAttribute(\"slot\")) {\n      childElm.setAttribute(\"s-sn\", childElm[\"s-sn\"]);\n    }\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\nexport {\n  BUILD29 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  deleteHostRef,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"names":["BUILD","NAMESPACE","__defProp","__export","target","all","name","Build","SVG_NS","HTML_NS","reWireGetterSetter","instance","hostRef","_a","cmpMeta","memberName","memberFlags","ogValue","ogDescriptor","newValue","hostRefs","deleteHostRef","ref","getHostRef","registerHost","hostElement","BUILD3","isMemberInElement","elm","consoleError","el","styles","modeResolutionChain","HYDRATED_STYLE_ID","SLOT_FB_CSS","XLINK_NS","win","doc","H","plt","h2","eventName","listener","opts","setPlatformHelpers","helpers","supportsListenerOptions","supportsListenerOptions2","e","promiseResolve","v","supportsConstructableStylesheets","queuePending","queueDomReads","queueDomWrites","queueTask","queue","write","cb","nextTick","flush","consume","i2","readTask","writeTask","getAssetPath","path","assetUrl","isDef","isComplexType","o","queryNonceMetaTagContent","doc2","_b","_c","result_exports","err","map","ok","unwrap","unwrapErr","value","result","fn","val","newVal","updateFallbackSlotVisibility","childNodes","getHostSlotNodes","slotNode","getHostSlotChildNodes","childNode","hostName","slotName","slottedNodes","node","includeSlot","isNodeLocatedInSlot","nodeToRelocate","createTime","fnName","tagName","h","nodeName","vnodeData","children","child","key","simple","lastSimple","vNodeChildren","walk","c","newVNode","classData","k","vdomFnUtils","vnode","tag","text","Host","isHost","convertToPublic","convertToPrivate","computeMode","m","setMode","handler","getMode","parsePropertyValue","propValue","propType","getElement","createEvent","flags","detail","emitEvent","ev","rootAppliedStyles","registerStyle","scopeId2","cssText","allowCS","style","addStyle","styleContainerNode","mode","getScopeId","appliedStyles","styleElm","nonce","preconnectLinks","referenceNode2","stylesheet","existingStyleContainer","attachStyles","endAttachStyles","cmp","setAccessor","oldValue","isSvg","initialRender","isProp","ln","classList","oldClasses","parseClassList","newClasses","prop","capture","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","isComplex","n","xlink","parseClassListRegex","updateElement","oldVnode","newVnode","isSvgMode2","isInitialRender","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","newVNode2","oldVNode","BUILD19","putBackInOriginalLocation","addRemoveSlotScopedClass","parentElm","recursive","oldSlotChildNodes","insertBefore","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","relocateNodeData","r","relocateNode","vNode","parent","newNode","reference","newParent","oldParent","scopeName","found","renderVdom","renderFnResults","isInitialLoad","_d","_e","hostElm","rootVnode","propName","attribute","relocateData","orgLocationNode","slotRefNode","parentNodeRef","insertBeforeNode","refNode","nextSibling","attachToAncestor","ancestorComponent","scheduleUpdate","dispatchHooks","endSchedule","maybePromise","safeCall","enqueue","updateComponent","isPromisey","err2","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","renderingRef","BUILD20","endPostUpdate","addHydratedFlag","appDidLoad","forceUpdate","isConnected","who","method","arg","getValue","setValue","oldVal","areBothNaN","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","members","origGetter","origSetter","currentValue","attrNameToPropName","attrName","_a2","BUILD22","flags2","entry","callbackName","propDesc","_","initializeComponent","hmrVersionId","cmpTag","endRegisterStyles","schedule","fireConnectedCallback","connectedCallback","endConnected","addHostEventListeners","setContentReference","contentRefElm","disconnectedCallback","rmListener","proxyCustomElement","compactMeta","originalConnectedCallback","originalDisconnectedCallback","listeners","attachParentListeners","getHostListenerTarget","hostListenerProxy","hostListenerOpts","methodName","BUILD28"],"mappings":"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","x_google_ignoreList":[0,1]}