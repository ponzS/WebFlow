{"version":3,"file":"@intlify-legacy-CHjRpHHf.js","sources":["../../node_modules/@intlify/core-base/dist/core-base.mjs","../../node_modules/@intlify/message-compiler/dist/message-compiler.mjs","../../node_modules/@intlify/shared/dist/shared.mjs"],"sourcesContent":["/*!\n  * core-base v11.1.0\n  * (c) 2025 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, baseCompile as baseCompile$1, COMPILE_ERROR_CODES_EXTEND_POINT, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = resolveBody(ast);\n    if (body == null) {\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n    }\n    const type = resolveType(body);\n    if (type === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = resolveCases(plural);\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n    return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n    return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n    const static_ = resolveStatic(node);\n    if (static_ != null) {\n        return ctx.type === 'text'\n            ? static_\n            : ctx.normalize([static_]);\n    }\n    else {\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n    return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n    return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n    const type = resolveType(node);\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            return resolveValue$1(node, type);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            return resolveValue$1(node, type);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            if (hasOwn(named, 'k') && named.k) {\n                return ctx.interpolate(ctx.named(named.k));\n            }\n            if (hasOwn(named, 'key') && named.key) {\n                return ctx.interpolate(ctx.named(named.key));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\n                return ctx.interpolate(ctx.list(list.i));\n            }\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\n                return ctx.interpolate(ctx.list(list.index));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = resolveLinkedModifier(linked);\n            const key = resolveLinkedKey(linked);\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            return resolveValue$1(node, type);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            return resolveValue$1(node, type);\n        }\n        default:\n            throw new Error(`unhandled node on format message part: ${type}`);\n    }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n    return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n    const resolved = resolveProps(node, PROPS_VALUE);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(type);\n    }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n    return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n    const resolved = resolveProps(node, PROPS_KEY);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n    }\n}\nfunction resolveProps(node, props, defaultValue) {\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (hasOwn(node, prop) && node[prop] != null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return node[prop];\n        }\n    }\n    return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n    return new Error(`unhandled node type: ${type}`);\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n    compileCache = create();\n}\nfunction isMessageAST(val) {\n    return (isObject(val) &&\n        resolveType(val) === 0 &&\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\n}\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n    if ((!__INTLIFY_DROP_MESSAGE_COMPILER__) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit('i18n:init', {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = \n/* #__PURE__*/ createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT, // 17\n    INVALID_DATE_ARGUMENT: 18,\n    INVALID_ISO_DATE_ARGUMENT: 19,\n    NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n    NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: 1,\n    FALLBACK_TO_TRANSLATE: 2,\n    CANNOT_FORMAT_NUMBER: 3,\n    FALLBACK_TO_NUMBER_FORMAT: 4,\n    CANNOT_FORMAT_DATE: 5,\n    FALLBACK_TO_DATE_FORMAT: 6,\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '11.1.0';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : createResources(_locale);\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : createResources(_locale)\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : createResources(_locale)\n        ;\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || create();\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\nconst createResources = (locale) => ({ [locale]: create() });\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit('missing', {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || create();\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key, useLinked) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key, !!useLinked)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key, true)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n    };\n    return ctx;\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : null;\n    const enableDefaultMsg = fallbackFormat ||\n        (defaultMsgOrKey != null &&\n            (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey)));\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || create()\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = create();\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || create();\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit('message-resolve', {\n                    type: 'message-resolve',\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-compilation', {\n                type: 'message-compilation',\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-evaluation', {\n                type: 'message-evaluation',\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = create();\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit('compile-error', {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key, useLinked) => {\n        let val = resolveValue(message, key);\n        // fallback\n        if (val == null && (fallbackContext || useLinked)) {\n            const [, , message] = resolveMessageFormat(fallbackContext || context, // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n            key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n","/*!\n  * message-compiler v11.1.0\n  * (c) 2025 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { format, assign, join, isString } from '@intlify/shared';\n\nconst LOCATION_STUB = {\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createPosition(line, column, offset) {\n    return { line, column, offset };\n}\nfunction createLocation(start, end, source) {\n    const loc = { start, end };\n    if (source != null) {\n        loc.source = source;\n    }\n    return loc;\n}\n\nconst CompileErrorCodes = {\n    // tokenizer error codes\n    EXPECTED_TOKEN: 1,\n    INVALID_TOKEN_IN_PLACEHOLDER: 2,\n    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,\n    UNKNOWN_ESCAPE_SEQUENCE: 4,\n    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,\n    UNBALANCED_CLOSING_BRACE: 6,\n    UNTERMINATED_CLOSING_BRACE: 7,\n    EMPTY_PLACEHOLDER: 8,\n    NOT_ALLOW_NEST_PLACEHOLDER: 9,\n    INVALID_LINKED_FORMAT: 10,\n    // parser error codes\n    MUST_HAVE_MESSAGES_IN_PLURAL: 11,\n    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,\n    UNEXPECTED_EMPTY_LINKED_KEY: 13,\n    UNEXPECTED_LEXICAL_ANALYSIS: 14,\n    // generator error codes\n    UNHANDLED_CODEGEN_NODE_TYPE: 15,\n    // minifier error codes\n    UNHANDLED_MINIFIER_NODE_TYPE: 16\n};\n// Special value for higher-order compilers to pick up the last code\n// to avoid collision of error codes.\n// This should always be kept as the last item.\nconst COMPILE_ERROR_CODES_EXTEND_POINT = 17;\n/** @internal */\nconst errorMessages = {\n    // tokenizer error messages\n    [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,\n    [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,\n    [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,\n    [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\\\{0}`,\n    [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,\n    [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,\n    [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,\n    [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,\n    [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,\n    [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,\n    // parser error messages\n    [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,\n    [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`,\n    // generator error messages\n    [CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE]: `unhandled codegen node type: '{0}'`,\n    // minimizer error messages\n    [CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE]: `unhandled mimifier node type: '{0}'`\n};\nfunction createCompileError(code, loc, options = {}) {\n    const { domain, messages, args } = options;\n    const msg = (process.env.NODE_ENV !== 'production')\n        ? format((messages || errorMessages)[code] || '', ...(args || []))\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    if (loc) {\n        error.location = loc;\n    }\n    error.domain = domain;\n    return error;\n}\n/** @internal */\nfunction defaultOnError(error) {\n    throw error;\n}\n\n// eslint-disable-next-line no-useless-escape\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst detectHtmlTag = (source) => RE_HTML_TAG.test(source);\n\nconst CHAR_SP = ' ';\nconst CHAR_CR = '\\r';\nconst CHAR_LF = '\\n';\nconst CHAR_LS = String.fromCharCode(0x2028);\nconst CHAR_PS = String.fromCharCode(0x2029);\nfunction createScanner(str) {\n    const _buf = str;\n    let _index = 0;\n    let _line = 1;\n    let _column = 1;\n    let _peekOffset = 0;\n    const isCRLF = (index) => _buf[index] === CHAR_CR && _buf[index + 1] === CHAR_LF;\n    const isLF = (index) => _buf[index] === CHAR_LF;\n    const isPS = (index) => _buf[index] === CHAR_PS;\n    const isLS = (index) => _buf[index] === CHAR_LS;\n    const isLineEnd = (index) => isCRLF(index) || isLF(index) || isPS(index) || isLS(index);\n    const index = () => _index;\n    const line = () => _line;\n    const column = () => _column;\n    const peekOffset = () => _peekOffset;\n    const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];\n    const currentChar = () => charAt(_index);\n    const currentPeek = () => charAt(_index + _peekOffset);\n    function next() {\n        _peekOffset = 0;\n        if (isLineEnd(_index)) {\n            _line++;\n            _column = 0;\n        }\n        if (isCRLF(_index)) {\n            _index++;\n        }\n        _index++;\n        _column++;\n        return _buf[_index];\n    }\n    function peek() {\n        if (isCRLF(_index + _peekOffset)) {\n            _peekOffset++;\n        }\n        _peekOffset++;\n        return _buf[_index + _peekOffset];\n    }\n    function reset() {\n        _index = 0;\n        _line = 1;\n        _column = 1;\n        _peekOffset = 0;\n    }\n    function resetPeek(offset = 0) {\n        _peekOffset = offset;\n    }\n    function skipToPeek() {\n        const target = _index + _peekOffset;\n        while (target !== _index) {\n            next();\n        }\n        _peekOffset = 0;\n    }\n    return {\n        index,\n        line,\n        column,\n        peekOffset,\n        charAt,\n        currentChar,\n        currentPeek,\n        next,\n        peek,\n        reset,\n        resetPeek,\n        skipToPeek\n    };\n}\n\nconst EOF = undefined;\nconst DOT = '.';\nconst LITERAL_DELIMITER = \"'\";\nconst ERROR_DOMAIN$3 = 'tokenizer';\nfunction createTokenizer(source, options = {}) {\n    const location = options.location !== false;\n    const _scnr = createScanner(source);\n    const currentOffset = () => _scnr.index();\n    const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());\n    const _initLoc = currentPosition();\n    const _initOffset = currentOffset();\n    const _context = {\n        currentType: 13 /* TokenTypes.EOF */,\n        offset: _initOffset,\n        startLoc: _initLoc,\n        endLoc: _initLoc,\n        lastType: 13 /* TokenTypes.EOF */,\n        lastOffset: _initOffset,\n        lastStartLoc: _initLoc,\n        lastEndLoc: _initLoc,\n        braceNest: 0,\n        inLinked: false,\n        text: ''\n    };\n    const context = () => _context;\n    const { onError } = options;\n    function emitError(code, pos, offset, ...args) {\n        const ctx = context();\n        pos.column += offset;\n        pos.offset += offset;\n        if (onError) {\n            const loc = location ? createLocation(ctx.startLoc, pos) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$3,\n                args\n            });\n            onError(err);\n        }\n    }\n    function getToken(context, type, value) {\n        context.endLoc = currentPosition();\n        context.currentType = type;\n        const token = { type };\n        if (location) {\n            token.loc = createLocation(context.startLoc, context.endLoc);\n        }\n        if (value != null) {\n            token.value = value;\n        }\n        return token;\n    }\n    const getEndToken = (context) => getToken(context, 13 /* TokenTypes.EOF */);\n    function eat(scnr, ch) {\n        if (scnr.currentChar() === ch) {\n            scnr.next();\n            return ch;\n        }\n        else {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n            return '';\n        }\n    }\n    function peekSpaces(scnr) {\n        let buf = '';\n        while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {\n            buf += scnr.currentPeek();\n            scnr.peek();\n        }\n        return buf;\n    }\n    function skipSpaces(scnr) {\n        const buf = peekSpaces(scnr);\n        scnr.skipToPeek();\n        return buf;\n    }\n    function isIdentifierStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            cc === 95 // _\n        );\n    }\n    function isNumberStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function isNamedIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isListIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ch = scnr.currentPeek() === '-' ? scnr.peek() : scnr.currentPeek();\n        const ret = isNumberStart(ch);\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLiteralStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === LITERAL_DELIMITER;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDotStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 7 /* TokenTypes.LinkedAlias */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \".\" /* TokenChars.LinkedDot */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedModifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 8 /* TokenTypes.LinkedDot */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDelimiterStart(scnr, context) {\n        const { currentType } = context;\n        if (!(currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */)) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \":\" /* TokenChars.LinkedDelimiter */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedReferStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 9 /* TokenTypes.LinkedDelimiter */) {\n            return false;\n        }\n        const fn = () => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return isIdentifierStart(scnr.peek());\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \":\" /* TokenChars.LinkedDelimiter */ ||\n                ch === \".\" /* TokenChars.LinkedDot */ ||\n                ch === CHAR_SP ||\n                !ch) {\n                return false;\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn();\n            }\n            else {\n                // other characters\n                return isTextStart(scnr, false);\n            }\n        };\n        const ret = fn();\n        scnr.resetPeek();\n        return ret;\n    }\n    function isPluralStart(scnr) {\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"|\" /* TokenChars.Pipe */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isTextStart(scnr, reset = true) {\n        const fn = (hasSpace = false, prev = '') => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return hasSpace;\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ || !ch) {\n                return hasSpace;\n            }\n            else if (ch === \"|\" /* TokenChars.Pipe */) {\n                return !(prev === CHAR_SP || prev === CHAR_LF);\n            }\n            else if (ch === CHAR_SP) {\n                scnr.peek();\n                return fn(true, CHAR_SP);\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn(true, CHAR_LF);\n            }\n            else {\n                return true;\n            }\n        };\n        const ret = fn();\n        reset && scnr.resetPeek();\n        return ret;\n    }\n    function takeChar(scnr, fn) {\n        const ch = scnr.currentChar();\n        if (ch === EOF) {\n            return EOF;\n        }\n        if (fn(ch)) {\n            scnr.next();\n            return ch;\n        }\n        return null;\n    }\n    function isIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 // $\n        );\n    }\n    function takeIdentifierChar(scnr) {\n        return takeChar(scnr, isIdentifier);\n    }\n    function isNamedIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 || // $\n            cc === 45 // -\n        );\n    }\n    function takeNamedIdentifierChar(scnr) {\n        return takeChar(scnr, isNamedIdentifier);\n    }\n    function isDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function takeDigit(scnr) {\n        return takeChar(scnr, isDigit);\n    }\n    function isHexDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 48 && cc <= 57) || // 0-9\n            (cc >= 65 && cc <= 70) || // A-F\n            (cc >= 97 && cc <= 102)); // a-f\n    }\n    function takeHexDigit(scnr) {\n        return takeChar(scnr, isHexDigit);\n    }\n    function getDigits(scnr) {\n        let ch = '';\n        let num = '';\n        while ((ch = takeDigit(scnr))) {\n            num += ch;\n        }\n        return num;\n    }\n    function readText(scnr) {\n        let buf = '';\n        while (true) {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"}\" /* TokenChars.BraceRight */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                !ch) {\n                break;\n            }\n            else if (ch === CHAR_SP || ch === CHAR_LF) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else if (isPluralStart(scnr)) {\n                    break;\n                }\n                else {\n                    buf += ch;\n                    scnr.next();\n                }\n            }\n            else {\n                buf += ch;\n                scnr.next();\n            }\n        }\n        return buf;\n    }\n    function readNamedIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let name = '';\n        while ((ch = takeNamedIdentifierChar(scnr))) {\n            name += ch;\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return name;\n    }\n    function readListIdentifier(scnr) {\n        skipSpaces(scnr);\n        let value = '';\n        if (scnr.currentChar() === '-') {\n            scnr.next();\n            value += `-${getDigits(scnr)}`;\n        }\n        else {\n            value += getDigits(scnr);\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return value;\n    }\n    function isLiteral(ch) {\n        return ch !== LITERAL_DELIMITER && ch !== CHAR_LF;\n    }\n    function readLiteral(scnr) {\n        skipSpaces(scnr);\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        let ch = '';\n        let literal = '';\n        while ((ch = takeChar(scnr, isLiteral))) {\n            if (ch === '\\\\') {\n                literal += readEscapeSequence(scnr);\n            }\n            else {\n                literal += ch;\n            }\n        }\n        const current = scnr.currentChar();\n        if (current === CHAR_LF || current === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);\n            // TODO: Is it correct really?\n            if (current === CHAR_LF) {\n                scnr.next();\n                // eslint-disable-next-line no-useless-escape\n                eat(scnr, `\\'`);\n            }\n            return literal;\n        }\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        return literal;\n    }\n    function readEscapeSequence(scnr) {\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case '\\\\':\n            case `\\'`: // eslint-disable-line no-useless-escape\n                scnr.next();\n                return `\\\\${ch}`;\n            case 'u':\n                return readUnicodeEscapeSequence(scnr, ch, 4);\n            case 'U':\n                return readUnicodeEscapeSequence(scnr, ch, 6);\n            default:\n                emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);\n                return '';\n        }\n    }\n    function readUnicodeEscapeSequence(scnr, unicode, digits) {\n        eat(scnr, unicode);\n        let sequence = '';\n        for (let i = 0; i < digits; i++) {\n            const ch = takeHexDigit(scnr);\n            if (!ch) {\n                emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\\\${unicode}${sequence}${scnr.currentChar()}`);\n                break;\n            }\n            sequence += ch;\n        }\n        return `\\\\${unicode}${sequence}`;\n    }\n    function isInvalidIdentifier(ch) {\n        return (ch !== \"{\" /* TokenChars.BraceLeft */ &&\n            ch !== \"}\" /* TokenChars.BraceRight */ &&\n            ch !== CHAR_SP &&\n            ch !== CHAR_LF);\n    }\n    function readInvalidIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let identifiers = '';\n        while ((ch = takeChar(scnr, isInvalidIdentifier))) {\n            identifiers += ch;\n        }\n        return identifiers;\n    }\n    function readLinkedModifier(scnr) {\n        let ch = '';\n        let name = '';\n        while ((ch = takeIdentifierChar(scnr))) {\n            name += ch;\n        }\n        return name;\n    }\n    function readLinkedRefer(scnr) {\n        const fn = (buf) => {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \"(\" /* TokenChars.ParenLeft */ ||\n                ch === \")\" /* TokenChars.ParenRight */ ||\n                !ch) {\n                return buf;\n            }\n            else if (ch === CHAR_SP) {\n                return buf;\n            }\n            else if (ch === CHAR_LF || ch === DOT) {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n            else {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n        };\n        return fn('');\n    }\n    function readPlural(scnr) {\n        skipSpaces(scnr);\n        const plural = eat(scnr, \"|\" /* TokenChars.Pipe */);\n        skipSpaces(scnr);\n        return plural;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInPlaceholder(scnr, context) {\n        let token = null;\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                if (context.braceNest >= 1) {\n                    emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 2 /* TokenTypes.BraceLeft */, \"{\" /* TokenChars.BraceLeft */);\n                skipSpaces(scnr);\n                context.braceNest++;\n                return token;\n            case \"}\" /* TokenChars.BraceRight */:\n                if (context.braceNest > 0 &&\n                    context.currentType === 2 /* TokenTypes.BraceLeft */) {\n                    emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n                context.braceNest--;\n                context.braceNest > 0 && skipSpaces(scnr);\n                if (context.inLinked && context.braceNest === 0) {\n                    context.inLinked = false;\n                }\n                return token;\n            case \"@\" /* TokenChars.LinkedAlias */:\n                if (context.braceNest > 0) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                }\n                token = readTokenInLinked(scnr, context) || getEndToken(context);\n                context.braceNest = 0;\n                return token;\n            default: {\n                let validNamedIdentifier = true;\n                let validListIdentifier = true;\n                let validLiteral = true;\n                if (isPluralStart(scnr)) {\n                    if (context.braceNest > 0) {\n                        emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    }\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (context.braceNest > 0 &&\n                    (context.currentType === 4 /* TokenTypes.Named */ ||\n                        context.currentType === 5 /* TokenTypes.List */ ||\n                        context.currentType === 6 /* TokenTypes.Literal */)) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    context.braceNest = 0;\n                    return readToken(scnr, context);\n                }\n                if ((validNamedIdentifier = isNamedIdentifierStart(scnr, context))) {\n                    token = getToken(context, 4 /* TokenTypes.Named */, readNamedIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validListIdentifier = isListIdentifierStart(scnr, context))) {\n                    token = getToken(context, 5 /* TokenTypes.List */, readListIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validLiteral = isLiteralStart(scnr, context))) {\n                    token = getToken(context, 6 /* TokenTypes.Literal */, readLiteral(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {\n                    // TODO: we should be re-designed invalid cases, when we will extend message syntax near the future ...\n                    token = getToken(context, 12 /* TokenTypes.InvalidPlace */, readInvalidIdentifier(scnr));\n                    emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);\n                    skipSpaces(scnr);\n                    return token;\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInLinked(scnr, context) {\n        const { currentType } = context;\n        let token = null;\n        const ch = scnr.currentChar();\n        if ((currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 8 /* TokenTypes.LinkedDot */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */ ||\n            currentType === 9 /* TokenTypes.LinkedDelimiter */) &&\n            (ch === CHAR_LF || ch === CHAR_SP)) {\n            emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n        }\n        switch (ch) {\n            case \"@\" /* TokenChars.LinkedAlias */:\n                scnr.next();\n                token = getToken(context, 7 /* TokenTypes.LinkedAlias */, \"@\" /* TokenChars.LinkedAlias */);\n                context.inLinked = true;\n                return token;\n            case \".\" /* TokenChars.LinkedDot */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 8 /* TokenTypes.LinkedDot */, \".\" /* TokenChars.LinkedDot */);\n            case \":\" /* TokenChars.LinkedDelimiter */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 9 /* TokenTypes.LinkedDelimiter */, \":\" /* TokenChars.LinkedDelimiter */);\n            default:\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isLinkedDotStart(scnr, context) ||\n                    isLinkedDelimiterStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return readTokenInLinked(scnr, context);\n                }\n                if (isLinkedModifierStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return getToken(context, 11 /* TokenTypes.LinkedModifier */, readLinkedModifier(scnr));\n                }\n                if (isLinkedReferStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                        // scan the placeholder\n                        return readTokenInPlaceholder(scnr, context) || token;\n                    }\n                    else {\n                        return getToken(context, 10 /* TokenTypes.LinkedKey */, readLinkedRefer(scnr));\n                    }\n                }\n                if (currentType === 7 /* TokenTypes.LinkedAlias */) {\n                    emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n                }\n                context.braceNest = 0;\n                context.inLinked = false;\n                return readToken(scnr, context);\n        }\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readToken(scnr, context) {\n        let token = { type: 13 /* TokenTypes.EOF */ };\n        if (context.braceNest > 0) {\n            return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n        }\n        if (context.inLinked) {\n            return readTokenInLinked(scnr, context) || getEndToken(context);\n        }\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n            case \"}\" /* TokenChars.BraceRight */:\n                emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);\n                scnr.next();\n                return getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n            case \"@\" /* TokenChars.LinkedAlias */:\n                return readTokenInLinked(scnr, context) || getEndToken(context);\n            default: {\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isTextStart(scnr)) {\n                    return getToken(context, 0 /* TokenTypes.Text */, readText(scnr));\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    function nextToken() {\n        const { currentType, offset, startLoc, endLoc } = _context;\n        _context.lastType = currentType;\n        _context.lastOffset = offset;\n        _context.lastStartLoc = startLoc;\n        _context.lastEndLoc = endLoc;\n        _context.offset = currentOffset();\n        _context.startLoc = currentPosition();\n        if (_scnr.currentChar() === EOF) {\n            return getToken(_context, 13 /* TokenTypes.EOF */);\n        }\n        return readToken(_scnr, _context);\n    }\n    return {\n        nextToken,\n        currentOffset,\n        currentPosition,\n        context\n    };\n}\n\nconst ERROR_DOMAIN$2 = 'parser';\n// Backslash backslash, backslash quote, uHHHH, UHHHHHH.\nconst KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\'|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\nfunction fromEscapeSequence(match, codePoint4, codePoint6) {\n    switch (match) {\n        case `\\\\\\\\`:\n            return `\\\\`;\n        // eslint-disable-next-line no-useless-escape\n        case `\\\\\\'`:\n            // eslint-disable-next-line no-useless-escape\n            return `\\'`;\n        default: {\n            const codePoint = parseInt(codePoint4 || codePoint6, 16);\n            if (codePoint <= 0xd7ff || codePoint >= 0xe000) {\n                return String.fromCodePoint(codePoint);\n            }\n            // invalid ...\n            // Replace them with U+FFFD REPLACEMENT CHARACTER.\n            return '�';\n        }\n    }\n}\nfunction createParser(options = {}) {\n    const location = options.location !== false;\n    const { onError } = options;\n    function emitError(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onError) {\n            const loc = location ? createLocation(start, end) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$2,\n                args\n            });\n            onError(err);\n        }\n    }\n    function startNode(type, offset, loc) {\n        const node = { type };\n        if (location) {\n            node.start = offset;\n            node.end = offset;\n            node.loc = { start: loc, end: loc };\n        }\n        return node;\n    }\n    function endNode(node, offset, pos, type) {\n        if (location) {\n            node.end = offset;\n            if (node.loc) {\n                node.loc.end = pos;\n            }\n        }\n    }\n    function parseText(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(3 /* NodeTypes.Text */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseList(tokenizer, index) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(5 /* NodeTypes.List */, offset, loc);\n        node.index = parseInt(index, 10);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseNamed(tokenizer, key) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(4 /* NodeTypes.Named */, offset, loc);\n        node.key = key;\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLiteral(tokenizer, value) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(9 /* NodeTypes.Literal */, offset, loc);\n        node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinkedModifier(tokenizer) {\n        const token = tokenizer.nextToken();\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get linked dot loc\n        const node = startNode(8 /* NodeTypes.LinkedModifier */, offset, loc);\n        if (token.type !== 11 /* TokenTypes.LinkedModifier */) {\n            // empty modifier\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);\n            node.value = '';\n            endNode(node, offset, loc);\n            return {\n                nextConsumeToken: token,\n                node\n            };\n        }\n        // check token\n        if (token.value == null) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        node.value = token.value || '';\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node\n        };\n    }\n    function parseLinkedKey(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(7 /* NodeTypes.LinkedKey */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinked(tokenizer) {\n        const context = tokenizer.context();\n        const linkedNode = startNode(6 /* NodeTypes.Linked */, context.offset, context.startLoc);\n        let token = tokenizer.nextToken();\n        if (token.type === 8 /* TokenTypes.LinkedDot */) {\n            const parsed = parseLinkedModifier(tokenizer);\n            linkedNode.modifier = parsed.node;\n            token = parsed.nextConsumeToken || tokenizer.nextToken();\n        }\n        // asset check token\n        if (token.type !== 9 /* TokenTypes.LinkedDelimiter */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        token = tokenizer.nextToken();\n        // skip brace left\n        if (token.type === 2 /* TokenTypes.BraceLeft */) {\n            token = tokenizer.nextToken();\n        }\n        switch (token.type) {\n            case 10 /* TokenTypes.LinkedKey */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLinkedKey(tokenizer, token.value || '');\n                break;\n            case 4 /* TokenTypes.Named */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseNamed(tokenizer, token.value || '');\n                break;\n            case 5 /* TokenTypes.List */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseList(tokenizer, token.value || '');\n                break;\n            case 6 /* TokenTypes.Literal */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLiteral(tokenizer, token.value || '');\n                break;\n            default: {\n                // empty key\n                emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);\n                const nextContext = tokenizer.context();\n                const emptyLinkedKeyNode = startNode(7 /* NodeTypes.LinkedKey */, nextContext.offset, nextContext.startLoc);\n                emptyLinkedKeyNode.value = '';\n                endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);\n                linkedNode.key = emptyLinkedKeyNode;\n                endNode(linkedNode, nextContext.offset, nextContext.startLoc);\n                return {\n                    nextConsumeToken: token,\n                    node: linkedNode\n                };\n            }\n        }\n        endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node: linkedNode\n        };\n    }\n    function parseMessage(tokenizer) {\n        const context = tokenizer.context();\n        const startOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? tokenizer.currentOffset()\n            : context.offset;\n        const startLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.endLoc\n            : context.startLoc;\n        const node = startNode(2 /* NodeTypes.Message */, startOffset, startLoc);\n        node.items = [];\n        let nextToken = null;\n        do {\n            const token = nextToken || tokenizer.nextToken();\n            nextToken = null;\n            switch (token.type) {\n                case 0 /* TokenTypes.Text */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseText(tokenizer, token.value || ''));\n                    break;\n                case 5 /* TokenTypes.List */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseList(tokenizer, token.value || ''));\n                    break;\n                case 4 /* TokenTypes.Named */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseNamed(tokenizer, token.value || ''));\n                    break;\n                case 6 /* TokenTypes.Literal */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseLiteral(tokenizer, token.value || ''));\n                    break;\n                case 7 /* TokenTypes.LinkedAlias */: {\n                    const parsed = parseLinked(tokenizer);\n                    node.items.push(parsed.node);\n                    nextToken = parsed.nextConsumeToken || null;\n                    break;\n                }\n            }\n        } while (context.currentType !== 13 /* TokenTypes.EOF */ &&\n            context.currentType !== 1 /* TokenTypes.Pipe */);\n        // adjust message node loc\n        const endOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastOffset\n            : tokenizer.currentOffset();\n        const endLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastEndLoc\n            : tokenizer.currentPosition();\n        endNode(node, endOffset, endLoc);\n        return node;\n    }\n    function parsePlural(tokenizer, offset, loc, msgNode) {\n        const context = tokenizer.context();\n        let hasEmptyMessage = msgNode.items.length === 0;\n        const node = startNode(1 /* NodeTypes.Plural */, offset, loc);\n        node.cases = [];\n        node.cases.push(msgNode);\n        do {\n            const msg = parseMessage(tokenizer);\n            if (!hasEmptyMessage) {\n                hasEmptyMessage = msg.items.length === 0;\n            }\n            node.cases.push(msg);\n        } while (context.currentType !== 13 /* TokenTypes.EOF */);\n        if (hasEmptyMessage) {\n            emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseResource(tokenizer) {\n        const context = tokenizer.context();\n        const { offset, startLoc } = context;\n        const msgNode = parseMessage(tokenizer);\n        if (context.currentType === 13 /* TokenTypes.EOF */) {\n            return msgNode;\n        }\n        else {\n            return parsePlural(tokenizer, offset, startLoc, msgNode);\n        }\n    }\n    function parse(source) {\n        const tokenizer = createTokenizer(source, assign({}, options));\n        const context = tokenizer.context();\n        const node = startNode(0 /* NodeTypes.Resource */, context.offset, context.startLoc);\n        if (location && node.loc) {\n            node.loc.source = source;\n        }\n        node.body = parseResource(tokenizer);\n        if (options.onCacheKey) {\n            node.cacheKey = options.onCacheKey(source);\n        }\n        // assert whether achieved to EOF\n        if (context.currentType !== 13 /* TokenTypes.EOF */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || '');\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    return { parse };\n}\nfunction getTokenCaption(token) {\n    if (token.type === 13 /* TokenTypes.EOF */) {\n        return 'EOF';\n    }\n    const name = (token.value || '').replace(/\\r?\\n/gu, '\\\\n');\n    return name.length > 10 ? name.slice(0, 9) + '…' : name;\n}\n\nfunction createTransformer(ast, options = {} // eslint-disable-line\n) {\n    const _context = {\n        ast,\n        helpers: new Set()\n    };\n    const context = () => _context;\n    const helper = (name) => {\n        _context.helpers.add(name);\n        return name;\n    };\n    return { context, helper };\n}\nfunction traverseNodes(nodes, transformer) {\n    for (let i = 0; i < nodes.length; i++) {\n        traverseNode(nodes[i], transformer);\n    }\n}\nfunction traverseNode(node, transformer) {\n    // TODO: if we need pre-hook of transform, should be implemented to here\n    switch (node.type) {\n        case 1 /* NodeTypes.Plural */:\n            traverseNodes(node.cases, transformer);\n            transformer.helper(\"plural\" /* HelperNameMap.PLURAL */);\n            break;\n        case 2 /* NodeTypes.Message */:\n            traverseNodes(node.items, transformer);\n            break;\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            traverseNode(linked.key, transformer);\n            transformer.helper(\"linked\" /* HelperNameMap.LINKED */);\n            transformer.helper(\"type\" /* HelperNameMap.TYPE */);\n            break;\n        }\n        case 5 /* NodeTypes.List */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"list\" /* HelperNameMap.LIST */);\n            break;\n        case 4 /* NodeTypes.Named */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"named\" /* HelperNameMap.NAMED */);\n            break;\n    }\n    // TODO: if we need post-hook of transform, should be implemented to here\n}\n// transform AST\nfunction transform(ast, options = {} // eslint-disable-line\n) {\n    const transformer = createTransformer(ast);\n    transformer.helper(\"normalize\" /* HelperNameMap.NORMALIZE */);\n    // traverse\n    ast.body && traverseNode(ast.body, transformer);\n    // set meta information\n    const context = transformer.context();\n    ast.helpers = Array.from(context.helpers);\n}\n\nfunction optimize(ast) {\n    const body = ast.body;\n    if (body.type === 2 /* NodeTypes.Message */) {\n        optimizeMessageNode(body);\n    }\n    else {\n        body.cases.forEach(c => optimizeMessageNode(c));\n    }\n    return ast;\n}\nfunction optimizeMessageNode(message) {\n    if (message.items.length === 1) {\n        const item = message.items[0];\n        if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n            message.static = item.value;\n            delete item.value; // optimization for size\n        }\n    }\n    else {\n        const values = [];\n        for (let i = 0; i < message.items.length; i++) {\n            const item = message.items[i];\n            if (!(item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */)) {\n                break;\n            }\n            if (item.value == null) {\n                break;\n            }\n            values.push(item.value);\n        }\n        if (values.length === message.items.length) {\n            message.static = join(values);\n            for (let i = 0; i < message.items.length; i++) {\n                const item = message.items[i];\n                if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n                    delete item.value; // optimization for size\n                }\n            }\n        }\n    }\n}\n\nconst ERROR_DOMAIN$1 = 'minifier';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction minify(node) {\n    node.t = node.type;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */: {\n            const resource = node;\n            minify(resource.body);\n            resource.b = resource.body;\n            delete resource.body;\n            break;\n        }\n        case 1 /* NodeTypes.Plural */: {\n            const plural = node;\n            const cases = plural.cases;\n            for (let i = 0; i < cases.length; i++) {\n                minify(cases[i]);\n            }\n            plural.c = cases;\n            delete plural.cases;\n            break;\n        }\n        case 2 /* NodeTypes.Message */: {\n            const message = node;\n            const items = message.items;\n            for (let i = 0; i < items.length; i++) {\n                minify(items[i]);\n            }\n            message.i = items;\n            delete message.items;\n            if (message.static) {\n                message.s = message.static;\n                delete message.static;\n            }\n            break;\n        }\n        case 3 /* NodeTypes.Text */:\n        case 9 /* NodeTypes.Literal */:\n        case 8 /* NodeTypes.LinkedModifier */:\n        case 7 /* NodeTypes.LinkedKey */: {\n            const valueNode = node;\n            if (valueNode.value) {\n                valueNode.v = valueNode.value;\n                delete valueNode.value;\n            }\n            break;\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            minify(linked.key);\n            linked.k = linked.key;\n            delete linked.key;\n            if (linked.modifier) {\n                minify(linked.modifier);\n                linked.m = linked.modifier;\n                delete linked.modifier;\n            }\n            break;\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            list.i = list.index;\n            delete list.index;\n            break;\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            named.k = named.key;\n            delete named.key;\n            break;\n        }\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN$1,\n                    args: [node.type]\n                });\n            }\n    }\n    delete node.type;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"source-map-js\" />\nconst ERROR_DOMAIN = 'parser';\nfunction createCodeGenerator(ast, options) {\n    const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;\n    const location = options.location !== false;\n    const _context = {\n        filename,\n        code: '',\n        column: 1,\n        line: 1,\n        offset: 0,\n        map: undefined,\n        breakLineCode,\n        needIndent: _needIndent,\n        indentLevel: 0\n    };\n    if (location && ast.loc) {\n        _context.source = ast.loc.source;\n    }\n    const context = () => _context;\n    function push(code, node) {\n        _context.code += code;\n    }\n    function _newline(n, withBreakLine = true) {\n        const _breakLineCode = withBreakLine ? breakLineCode : '';\n        push(_needIndent ? _breakLineCode + `  `.repeat(n) : _breakLineCode);\n    }\n    function indent(withNewLine = true) {\n        const level = ++_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function deindent(withNewLine = true) {\n        const level = --_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function newline() {\n        _newline(_context.indentLevel);\n    }\n    const helper = (key) => `_${key}`;\n    const needIndent = () => _context.needIndent;\n    return {\n        context,\n        push,\n        indent,\n        deindent,\n        newline,\n        helper,\n        needIndent\n    };\n}\nfunction generateLinkedNode(generator, node) {\n    const { helper } = generator;\n    generator.push(`${helper(\"linked\" /* HelperNameMap.LINKED */)}(`);\n    generateNode(generator, node.key);\n    if (node.modifier) {\n        generator.push(`, `);\n        generateNode(generator, node.modifier);\n        generator.push(`, _type`);\n    }\n    else {\n        generator.push(`, undefined, _type`);\n    }\n    generator.push(`)`);\n}\nfunction generateMessageNode(generator, node) {\n    const { helper, needIndent } = generator;\n    generator.push(`${helper(\"normalize\" /* HelperNameMap.NORMALIZE */)}([`);\n    generator.indent(needIndent());\n    const length = node.items.length;\n    for (let i = 0; i < length; i++) {\n        generateNode(generator, node.items[i]);\n        if (i === length - 1) {\n            break;\n        }\n        generator.push(', ');\n    }\n    generator.deindent(needIndent());\n    generator.push('])');\n}\nfunction generatePluralNode(generator, node) {\n    const { helper, needIndent } = generator;\n    if (node.cases.length > 1) {\n        generator.push(`${helper(\"plural\" /* HelperNameMap.PLURAL */)}([`);\n        generator.indent(needIndent());\n        const length = node.cases.length;\n        for (let i = 0; i < length; i++) {\n            generateNode(generator, node.cases[i]);\n            if (i === length - 1) {\n                break;\n            }\n            generator.push(', ');\n        }\n        generator.deindent(needIndent());\n        generator.push(`])`);\n    }\n}\nfunction generateResource(generator, node) {\n    if (node.body) {\n        generateNode(generator, node.body);\n    }\n    else {\n        generator.push('null');\n    }\n}\nfunction generateNode(generator, node) {\n    const { helper } = generator;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */:\n            generateResource(generator, node);\n            break;\n        case 1 /* NodeTypes.Plural */:\n            generatePluralNode(generator, node);\n            break;\n        case 2 /* NodeTypes.Message */:\n            generateMessageNode(generator, node);\n            break;\n        case 6 /* NodeTypes.Linked */:\n            generateLinkedNode(generator, node);\n            break;\n        case 8 /* NodeTypes.LinkedModifier */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 7 /* NodeTypes.LinkedKey */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 5 /* NodeTypes.List */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"list\" /* HelperNameMap.LIST */)}(${node.index}))`, node);\n            break;\n        case 4 /* NodeTypes.Named */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"named\" /* HelperNameMap.NAMED */)}(${JSON.stringify(node.key)}))`, node);\n            break;\n        case 9 /* NodeTypes.Literal */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 3 /* NodeTypes.Text */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN,\n                    args: [node.type]\n                });\n            }\n    }\n}\n// generate code from AST\nconst generate = (ast, options = {}) => {\n    const mode = isString(options.mode) ? options.mode : 'normal';\n    const filename = isString(options.filename)\n        ? options.filename\n        : 'message.intl';\n    const sourceMap = !!options.sourceMap;\n    // prettier-ignore\n    const breakLineCode = options.breakLineCode != null\n        ? options.breakLineCode\n        : mode === 'arrow'\n            ? ';'\n            : '\\n';\n    const needIndent = options.needIndent ? options.needIndent : mode !== 'arrow';\n    const helpers = ast.helpers || [];\n    const generator = createCodeGenerator(ast, {\n        mode,\n        filename,\n        sourceMap,\n        breakLineCode,\n        needIndent\n    });\n    generator.push(mode === 'normal' ? `function __msg__ (ctx) {` : `(ctx) => {`);\n    generator.indent(needIndent);\n    if (helpers.length > 0) {\n        generator.push(`const { ${join(helpers.map(s => `${s}: _${s}`), ', ')} } = ctx`);\n        generator.newline();\n    }\n    generator.push(`return `);\n    generateNode(generator, ast);\n    generator.deindent(needIndent);\n    generator.push(`}`);\n    delete ast.helpers;\n    const { code, map } = generator.context();\n    return {\n        ast,\n        code,\n        map: map ? map.toJSON() : undefined // eslint-disable-line @typescript-eslint/no-explicit-any\n    };\n};\n\nfunction baseCompile(source, options = {}) {\n    const assignedOptions = assign({}, options);\n    const jit = !!assignedOptions.jit;\n    const enalbeMinify = !!assignedOptions.minify;\n    const enambeOptimize = assignedOptions.optimize == null ? true : assignedOptions.optimize;\n    // parse source codes\n    const parser = createParser(assignedOptions);\n    const ast = parser.parse(source);\n    if (!jit) {\n        // transform ASTs\n        transform(ast, assignedOptions);\n        // generate javascript codes\n        return generate(ast, assignedOptions);\n    }\n    else {\n        // optimize ASTs\n        enambeOptimize && optimize(ast);\n        // minimize ASTs\n        enalbeMinify && minify(ast);\n        // In JIT mode, no ast transform, no code generation.\n        return { ast, code: '' };\n    }\n}\n\nexport { COMPILE_ERROR_CODES_EXTEND_POINT, CompileErrorCodes, ERROR_DOMAIN$2 as ERROR_DOMAIN, LOCATION_STUB, baseCompile, createCompileError, createLocation, createParser, createPosition, defaultOnError, detectHtmlTag, errorMessages };\n","/*!\n  * shared v11.1.0\n  * (c) 2025 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst inBrowser = typeof window !== 'undefined';\nlet mark;\nlet measure;\nif ((process.env.NODE_ENV !== 'production')) {\n    const perf = inBrowser && window.performance;\n    if (perf &&\n        perf.mark &&\n        perf.measure &&\n        perf.clearMarks &&\n        // @ts-ignore browser compat\n        perf.clearMeasures) {\n        mark = (tag) => {\n            perf.mark(tag);\n        };\n        measure = (name, startTag, endTag) => {\n            perf.measure(name, startTag, endTag);\n            perf.clearMarks(startTag);\n            perf.clearMarks(endTag);\n        };\n    }\n}\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst makeSymbol = (name, shareable = false) => !shareable ? Symbol(name) : Symbol.for(name);\nconst generateFormatCacheKey = (locale, key, source) => friendlyJSONstringify({ l: locale, k: key, s: source });\nconst friendlyJSONstringify = (json) => JSON.stringify(json)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n    .replace(/\\u0027/g, '\\\\u0027');\nconst isNumber = (val) => typeof val === 'number' && isFinite(val);\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isRegExp = (val) => toTypeString(val) === '[object RegExp]';\nconst isEmptyObject = (val) => isPlainObject(val) && Object.keys(val).length === 0;\nconst assign = Object.assign;\nconst _create = Object.create;\nconst create = (obj = null) => _create(obj);\nlet _globalThis;\nconst getGlobalThis = () => {\n    // prettier-ignore\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : create()));\n};\nfunction escapeHtml(rawText) {\n    return rawText\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n/* eslint-enable */\n/**\n * Useful Utilities By Evan you\n * Modified by kazuya kawaguchi\n * MIT License\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/index.ts\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/codeframe.ts\n */\nconst isArray = Array.isArray;\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isBoolean = (val) => typeof val === 'boolean';\nconst isSymbol = (val) => typeof val === 'symbol';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\n// for converting list and named values to displayed strings.\nconst toDisplayString = (val) => {\n    return val == null\n        ? ''\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\n            ? JSON.stringify(val, null, 2)\n            : String(val);\n};\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\nconst RANGE = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    const lines = source.split(/\\r?\\n/);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count += lines[i].length + 1;\n        if (count >= start) {\n            for (let j = i - RANGE; j <= i + RANGE || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - lineLength) + 1;\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + 1;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\n\nfunction warn(msg, err) {\n    if (typeof console !== 'undefined') {\n        console.warn(`[intlify] ` + msg);\n        /* istanbul ignore if */\n        if (err) {\n            console.warn(err.stack);\n        }\n    }\n}\nconst hasWarned = {};\nfunction warnOnce(msg) {\n    if (!hasWarned[msg]) {\n        hasWarned[msg] = true;\n        warn(msg);\n    }\n}\n\n/**\n * Event emitter, forked from the below:\n * - original repository url: https://github.com/developit/mitt\n * - code url: https://github.com/developit/mitt/blob/master/src/index.ts\n * - author: Jason Miller (https://github.com/developit)\n * - license: MIT\n */\n/**\n * Create a event emitter\n *\n * @returns An event emitter\n */\nfunction createEmitter() {\n    const events = new Map();\n    const emitter = {\n        events,\n        on(event, handler) {\n            const handlers = events.get(event);\n            const added = handlers && handlers.push(handler);\n            if (!added) {\n                events.set(event, [handler]);\n            }\n        },\n        off(event, handler) {\n            const handlers = events.get(event);\n            if (handlers) {\n                handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(event, payload) {\n            (events.get(event) || [])\n                .slice()\n                .map(handler => handler(payload));\n            (events.get('*') || [])\n                .slice()\n                .map(handler => handler(event, payload));\n        }\n    };\n    return emitter;\n}\n\nconst isNotObjectOrIsArray = (val) => !isObject(val) || isArray(val);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deepCopy(src, des) {\n    // src and des should both be objects, and none of them can be a array\n    if (isNotObjectOrIsArray(src) || isNotObjectOrIsArray(des)) {\n        throw new Error('Invalid value');\n    }\n    const stack = [{ src, des }];\n    while (stack.length) {\n        const { src, des } = stack.pop();\n        // using `Object.keys` which skips prototype properties\n        Object.keys(src).forEach(key => {\n            if (key === '__proto__') {\n                return;\n            }\n            // if src[key] is an object/array, set des[key]\n            // to empty object/array to prevent setting by reference\n            if (isObject(src[key]) && !isObject(des[key])) {\n                des[key] = Array.isArray(src[key]) ? [] : create();\n            }\n            if (isNotObjectOrIsArray(des[key]) || isNotObjectOrIsArray(src[key])) {\n                // replace with src[key] when:\n                // src[key] or des[key] is not an object, or\n                // src[key] or des[key] is an array\n                des[key] = src[key];\n            }\n            else {\n                // src[key] and des[key] are both objects, merge them\n                stack.push({ src: src[key], des: des[key] });\n            }\n        });\n    }\n}\n\nexport { assign, create, createEmitter, deepCopy, escapeHtml, format, friendlyJSONstringify, generateCodeFrame, generateFormatCacheKey, getGlobalThis, hasOwn, inBrowser, isArray, isBoolean, isDate, isEmptyObject, isFunction, isNumber, isObject, isPlainObject, isPromise, isRegExp, isString, isSymbol, join, makeSymbol, mark, measure, objectToString, toDisplayString, toTypeString, warn, warnOnce };\n"],"names":["context","datetimeFormats","unresolving","fallbackLocale","localeFallbacker","onWarn","__datetimeFormatters","_len3","arguments","length","args","Array","_key3","_parseDateTimeArgs2","_slicedToArray","parseDateTimeArgs","apply","key","value","options","overrides","missingWarn","isBoolean","fallbackWarn","part","locale","getLocale","locales","isString","Intl","DateTimeFormat","format","targetLocale","i","isPlainObject","handleMissing","NOT_REOSLVED","id","concat","isEmptyObject","JSON","stringify","formatter","get","assign","set","formatToParts","numberFormats","__numberFormatters","_len5","_key5","_parseNumberArgs2","parseNumberArgs","NumberFormat","compiler","_compiler","resolver","_resolver","fallbacker","_fallbacker","hook","devtools","message","__INTLIFY_DROP_MESSAGE_COMPILER__","warnHtmlMessage","cacheKey","onCacheKey","defaultOnCacheKey","cached","compileCache","_baseCompile","undefined","detectError","onError","defaultOnError","err","_objectSpread","source","assignedOptions","jit","enalbeMinify","minify","enambeOptimize","optimize","ast","location","emitError","tokenzer","code","start","offset","end","currentPosition","column","loc","createLocation","_len2","_key2","createCompileError","domain","ERROR_DOMAIN$2","startNode","type","node","endNode","pos","parseText","tokenizer","startLoc","currentOffset","parseList","index","lastOffset","lastStartLoc","parseInt","nextToken","parseNamed","parseLiteral","replace","KNOWN_ESCAPES","fromEscapeSequence","parseLinkedModifier","token","CompileErrorCodes","UNEXPECTED_EMPTY_LINKED_MODIFIER","nextConsumeToken","UNEXPECTED_LEXICAL_ANALYSIS","getTokenCaption","parseLinkedKey","parseLinked","linkedNode","parsed","modifier","UNEXPECTED_EMPTY_LINKED_KEY","nextContext","emptyLinkedKeyNode","parseMessage","currentType","endLoc","items","push","lastEndLoc","parsePlural","msgNode","hasEmptyMessage","cases","msg","MUST_HAVE_MESSAGES_IN_PLURAL","parseResource","parse","_scnr","str","_buf","_index","_line","_column","_peekOffset","isCRLF","CHAR_CR","CHAR_LF","isLF","isPS","CHAR_PS","isLS","CHAR_LS","isLineEnd","charAt","currentChar","currentPeek","next","peek","reset","resetPeek","skipToPeek","target","line","peekOffset","createScanner","_initLoc","_initOffset","_context","lastType","braceNest","inLinked","text","ctx","_len","_key","ERROR_DOMAIN$3","getToken","getEndToken","eat","scnr","ch","EXPECTED_TOKEN","peekSpaces","buf","CHAR_SP","skipSpaces","isIdentifierStart","EOF","cc","charCodeAt","isNumberStart","isNamedIdentifierStart","ret","isListIdentifierStart","isLiteralStart","LITERAL_DELIMITER","isLinkedDotStart","isLinkedModifierStart","isLinkedDelimiterStart","isLinkedReferStart","fn","isTextStart","isPluralStart","hasSpace","prev","takeChar","isIdentifier","takeIdentifierChar","isNamedIdentifier","takeNamedIdentifierChar","isDigit","takeDigit","isHexDigit","takeHexDigit","getDigits","num","readText","readNamedIdentifier","name","UNTERMINATED_CLOSING_BRACE","readListIdentifier","isLiteral","readLiteral","literal","readEscapeSequence","current","UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER","readUnicodeEscapeSequence","UNKNOWN_ESCAPE_SEQUENCE","unicode","digits","sequence","INVALID_UNICODE_ESCAPE_SEQUENCE","isInvalidIdentifier","readInvalidIdentifier","identifiers","readLinkedModifier","readLinkedRefer","readPlural","plural","readTokenInPlaceholder","NOT_ALLOW_NEST_PLACEHOLDER","EMPTY_PLACEHOLDER","readTokenInLinked","validNamedIdentifier","validListIdentifier","validLiteral","readToken","INVALID_TOKEN_IN_PLACEHOLDER","INVALID_LINKED_FORMAT","UNBALANCED_CLOSING_BRACE","createTokenizer","body","createParser","optimizeMessageNode","forEach","c","transformer","helpers","Set","helper","add","createTransformer","traverseNode","from","transform","generate","baseCompile$1","baseCompile","obj","path","isObject","hit","cache","newChar","transition","action","typeMap","keys","mode","subPathDepth","actions","maybeUnescapeQuote","nextChar","trimmed","trim","isNaN","exp","literalValueRE","test","a","b","slice","formatSubPath","getPathCharType","pathStateMachine","len","last","val","isFunction","src","des","isNotObjectOrIsArray","Error","stack","_loop","_stack$pop","pop","Object","isArray","create","warn","version","VERSION","DEFAULT_LOCALE","_locale","messages","createResources","modifiers","upper","toUpperCase","children","lower","toLowerCase","capitalize","pluralRules","missing","isRegExp","fallbackFormat","postTranslation","processor","escapeParameter","messageCompiler","messageResolver","resolveWithKeyValue","fallbackWithSimple","fallbackContext","internalOptions","Map","__meta","_cid","cid","__INTLIFY_PROD_DEVTOOLS__","i18n","meta","emit","timestamp","Date","now","initI18nDevTools","has","delete","fallback","__localeChainCache","startLocale","chain","block","appendBlockToChain","defaults","_len8","_key8","_parseTranslateArgs2","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","list","map","item","escapeHtml","named","escapeParams","_ref3","resolveMessageFormat","formatScope","cacheBaseKey","isMessageAST","isMessageFunction","occurred","compileMessageFormat","msgContext","pluralIndex","isNumber","count","n","getPluralIndex","pluralRule","pluralDefault","orgPluralRule","_list","_named","props","normalizeNamed","useLinked","parent","DEFAULT_MESSAGE","_modifier","DEFAULT_MODIFIER","normalize","DEFAULT_NORMALIZE","interpolate","DEFAULT_INTERPOLATE","DEFAULT_MESSAGE_DATA_TYPE","linked","_len7","_key7","arg1","arg2","_defineProperty","createMessageContext","resolveValue","resolveMessage","NOOP_MESSAGE_FUNCTION","ctxOptions","getMessageContextOptions","messaged","msgCtx","evaluateMessage","payloads","getAdditionalMeta","translateDevTools","exports","window","Symbol","for","_globalThis","generateFormatCacheKey","friendlyJSONstringify","l","k","s","json","isFinite","isDate","toTypeString","_create","getGlobalThis","globalThis","self","rawText","hasOwnProperty","prototype","hasOwn","call","_typeof","isPromise","then","catch","objectToString","toString","join","separator","reduce","console","error","SyntaxError","String","fromCharCode","match","codePoint4","codePoint6","codePoint","fromCodePoint","traverseNodes","nodes","static","values","t","resource","valueNode","v","m","generateNode","generator","generateResource","needIndent","indent","deindent","generatePluralNode","generateMessageNode","generateLinkedNode","filename","sourceMap","breakLineCode","_needIndent","indentLevel","_newline","_breakLineCode","repeat","withNewLine","level","newline","createCodeGenerator","_generator$context","toJSON","resolveProps","PROPS_BODY","createUnhandleNodeError","resolveType","PROPS_CASES","resolveCases","_toConsumableArray","formatMessageParts","formatParts","static_","PROPS_STATIC","resolveStatic","PROPS_ITEMS","resolveItems","acm","formatMessagePart","resolveValue$1","PROPS_MODIFIER","resolveLinkedModifier","resolved","PROPS_KEY","resolveLinkedKey","PROPS_TYPE","PROPS_VALUE","defaultValue","prop","createDevToolsHook","_resolveLocale","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","NOT_SUPPORT_LOCALE_PROMISE_VALUE","NOT_SUPPORT_LOCALE_ASYNC_FUNCTION","NOT_SUPPORT_LOCALE_TYPE","createCoreError","resolveLocale","resolvedOnce","constructor","resolve","blocks","follow","appendLocaleToChain","tokens","split","appendItemToChain","splice","includes","toLocaleUpperCase","substr","_additionalMeta","_fallbackContext","isImplicitFallback","compareLocale","indexOf","DATETIME_FORMAT_OPTIONS_KEYS","_len4","_key4","arg3","arg4","matches","dateTime","startsWith","toISOString","_unused","getTime","NUMBER_FORMAT_OPTIONS_KEYS","_len6","_key6","choice","choicesLength","Math","abs","min","missingRet","getCompileContext","_len9","_key9"],"mappings":"8pFA+9BA,SAAkBA,GAEmB,IADjC,IAAQC,EAA2ED,EAA3EC,gBAAiBC,EAA0DF,EAA1DE,YAAaC,EAA6CH,EAA7CG,eAAwBC,GAAqBJ,EAA7BK,OAA6BL,EAArBI,kBACtDE,EAAyBN,EAAzBM,qBAAyBC,EAAAC,UAAAC,OAFPC,EAAM,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,EAAA,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,EAAA,GAAAJ,UAAAI,GAO1B,IAA4DC,EAAAC,EAAzBC,GAAAC,WAAqBN,EAAAA,GAAI,GAA3DO,OAAKC,EAAOL,EAAA,GAAAM,EAAAN,EAAA,GAASO,EAASP,EACrC,GAAMQ,EAAcC,EAAUH,EAAQE,aAChCF,EAAQE,YACRrB,EAAQqB,YACOC,EAAUH,EAAQI,cACjCJ,EAAQI,aACRvB,EAAQuB,aACR,IAAAC,IAASL,EAAQK,KACjBC,EAASC,GAAU1B,EAASmB,GAC5BQ,EAAUvB,EAAiBJ,EACjCG,EAAgBsB,GAChB,IAAKG,EAASX,IAAgB,KAARA,EAClB,OAAW,IAAAY,KAAKC,eAAeL,EAAQL,GAAWW,OAAOb,GAS7D,IANA,IACIc,EACAD,EAAS,KAIJE,EAAI,EAAGA,EAAIN,EAAQlB,SAyBxBsB,GADI9B,EAvBW+B,EAAKL,EAAQM,KAuBS,CAAC,GACdhB,IACpBiB,EAAcH,IA1BcE,IA4BhCE,GAAcnC,EAASiB,EAAKe,EAAcX,EA7BjC,mBAiCb,IAAKa,EAAcH,KAAYH,EAASI,GACpC,OAAO9B,EAAckC,GAAenB,EAExC,IAAIoB,EAAKC,GAAAA,OAAGN,EAAYM,MAAAA,OAAKrB,GACxBsB,EAAcnB,KACfiB,EAAA,GAAAC,OAAQD,EAAE,MAAAC,OAAKE,KAAKC,UAAUrB,KAE9B,IAAAsB,EAAYpC,EAAqBqC,IAAIN,GACpCK,IACWA,EAAA,IAAIb,KAAKC,eAAeE,EAAcY,EAAO,CAAC,EAAGb,EAAQX,IAChDd,EAAAuC,IAAIR,EAAIK,IAE1B,OAAClB,EAAiCkB,EAAUI,cAAc5B,GAAlDwB,EAAUX,OAAOb,EACpC,SAsGA,SAAgBlB,GAEmB,IAD/B,IAAQ+C,EAAyE/C,EAAzE+C,cAAe7C,EAA0DF,EAA1DE,YAAaC,EAA6CH,EAA7CG,eAAwBC,GAAqBJ,EAA7BK,OAA6BL,EAArBI,kBACpD4C,EAAuBhD,EAAvBgD,mBAAuBC,EAAAzC,UAAAC,OAFPC,EAAM,IAAAC,MAAAsC,EAAAA,EAAAA,EAAAC,EAAAA,GAAAA,IAAAA,EAAAD,EAAAC,IAANxC,EAAMwC,EAAA1C,GAAAA,UAAA0C,GAOxB,IAA0DC,EAAArC,EAAvBsC,GAAApC,WAAA,EAAmBN,GAAI,GAAzDO,OAAKC,EAAOiC,EAAAhC,GAAAA,EAAAgC,EAAS/B,GAAAA,EAAS+B,EACrC,GAAM9B,EAAcC,EAAUH,EAAQE,aAChCF,EAAQE,YACRrB,EAAQqB,YACOC,EAAUH,EAAQI,cACjCJ,EAAQI,aACRvB,EAAQuB,aACR,IAAAC,IAASL,EAAQK,KACjBC,EAASC,GAAU1B,EAASmB,GAC5BQ,EAAUvB,EAAiBJ,EACjCG,EAAgBsB,GAChB,IAAKG,EAASX,IAAgB,KAARA,EAClB,OAAW,IAAAY,KAAKwB,aAAa5B,EAAQL,GAAWW,OAAOb,GAS3D,IANA,IACIc,EACAD,EAAS,KAIJE,EAAI,EAAGA,EAAIN,EAAQlB,SAyBxBsB,GADIgB,EAvBWf,EAAKL,EAAQM,KAuBO,CAAC,GACdhB,IAClBiB,EAAcH,IA1BcE,IA4BhCE,GAAcnC,EAASiB,EAAKe,EAAcX,EA7BjC,iBAiCb,IAAKa,EAAcH,KAAYH,EAASI,GACpC,OAAO9B,EAAckC,GAAenB,EAExC,IAAIoB,EAAK,GAAAC,OAAGN,EAAYM,MAAAA,OAAKrB,GACxBsB,EAAcnB,KACfiB,EAAA,GAAAC,OAAQD,EAAEC,MAAAA,OAAKE,KAAKC,UAAUrB,KAE9B,IAAAsB,EAAYM,EAAmBL,IAAIN,GAClCK,IACWA,EAAA,IAAIb,KAAKwB,aAAarB,EAAcY,EAAO,CAAC,EAAGb,EAAQX,IAChD4B,EAAAH,IAAIR,EAAIK,IAExB,OAAClB,EAAiCkB,EAAUI,cAAc5B,GAAlDwB,EAAUX,OAAOb,EACpC,SA1dA,SAAiCoC,GACjBC,GAAAD,CAChB,IASA,SAAiCE,GACjBC,GAAAD,CAChB,IASA,SAAkCE,GAChBC,GAAAD,CAClB,IAtiBA,SAAyBE,GACVC,GAAAD,CACf,IArDA,SAAiBE,EAAS9D,GACtB,IAAM+D,mCACFnC,EAASkC,GAAU,EAEKxC,EAAUtB,EAAQgE,kBACpChE,EAAQgE,gBAIR,IACAC,GADajE,EAAQkE,YAAcC,IACbL,GACtBM,EAASC,GAAaJ,GAC5B,GAAIG,EACO,OAAAA,EAGX,IAAAE,EA5BR,SAAqBR,OAAS3C,EAAUX,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,GAAA/D,UAAA,GAAA,GAEhCgE,GAAc,EACZC,EAAUtD,EAAQsD,SAAWC,EAMnC,OALQvD,EAAAsD,QAAU,SAACE,GACDH,GAAA,EACdC,EAAQE,EACZ,EAEAC,EAAAA,EAAA,CAAA,EC4xCJ,SAAqBC,GAAQ,IAAA1D,EAAUX,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,GAAA/D,aAAA,GAC7BsE,EAAkBlC,EAAO,CAAC,EAAGzB,GAC7B4D,IAAQD,EAAgBC,IACxBC,IAAiBF,EAAgBG,OACjCC,EAA6C,MAA5BJ,EAAgBK,UAA0BL,EAAgBK,SAG3EC,EAhpBV,WAAsB,IAAAjE,EAAUX,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA,GAAAA,UAAA,GAAA,GACtB6E,GAAgC,IAArBlE,EAAQkE,SACjBZ,EAAYtD,EAAZsD,QACR,SAASa,EAAUC,EAAUC,EAAMC,EAAOC,GAChC,IAAAC,EAAMJ,EAASK,kBAGrB,GAFAD,EAAID,QAAUA,EACdC,EAAIE,QAAUH,EACVjB,EAAS,CAC2C,IAApD,IAAMqB,EAAMT,EAAWU,EAAeN,EAAOE,GAAO,KAAAK,EAAAxF,UAAAC,OALPC,EAAM,IAAAC,MAAAqF,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvF,EAAMuF,EAAAzF,GAAAA,UAAAyF,GAM7C,IAAAtB,EAAMuB,EAAmBV,EAAMM,EAAK,CACtCK,OAAQC,EACR1F,KAAAA,IAEJ+D,EAAQE,EAAG,CACf,CAEK,SAAA0B,EAAUC,EAAMZ,EAAQI,GACvB,IAAAS,EAAO,CAAED,KAAAA,GAMR,OALHjB,IACAkB,EAAKd,MAAQC,EACba,EAAKZ,IAAMD,EACXa,EAAKT,IAAM,CAAEL,MAAOK,EAAKH,IAAKG,IAE3BS,CAAA,CAEX,SAASC,EAAQD,EAAMb,EAAQe,EAAKH,GAC5BjB,IACAkB,EAAKZ,IAAMD,EACPa,EAAKT,MACLS,EAAKT,IAAIH,IAAMc,GAEvB,CAEK,SAAAC,EAAUC,EAAWzF,GACpB,IAAAlB,EAAU2G,EAAU3G,UACpBuG,EAAOF,EAAU,EAAwBrG,EAAQ0F,OAAQ1F,EAAQ4G,UAGhE,OAFPL,EAAKrF,MAAQA,EACbsF,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEF,SAAAO,EAAUH,EAAWI,GACpB,IAAA/G,EAAU2G,EAAU3G,UAEpBuG,EAAOF,EAAU,EAD2BrG,EAA1CgH,WAA0ChH,EAAtBiH,cAKrB,OAHFV,EAAAQ,MAAQG,SAASH,EAAO,IAC7BJ,EAAUQ,YACVX,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEF,SAAAa,EAAWT,EAAW1F,GACrB,IAAAjB,EAAU2G,EAAU3G,UAEpBuG,EAAOF,EAAU,EAD2BrG,EAA1CgH,WAA0ChH,EAAtBiH,cAKrB,OAHPV,EAAKtF,IAAMA,EACX0F,EAAUQ,YACVX,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEF,SAAAc,EAAaV,EAAWzF,GACvB,IAAAlB,EAAU2G,EAAU3G,UAEpBuG,EAAOF,EAAU,EAD2BrG,EAA1CgH,WAA0ChH,EAAtBiH,cAKrB,OAHPV,EAAKrF,MAAQA,EAAMoG,QAAQC,EAAeC,GAC1Cb,EAAUQ,YACVX,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEX,SAASkB,EAAoBd,GACnB,IAAAe,EAAQf,EAAUQ,YAClBnH,EAAU2G,EAAU3G,UACN0F,EAA8B1F,EAA1CgH,WAAkClB,EAAQ9F,EAAtBiH,aACtBV,EAAOF,EAAU,EAAkCX,EAAQI,GAC7D,OAAe,KAAf4B,EAAMpB,MAENhB,EAAUqB,EAAWgB,EAAkBC,iCAAkC5H,EAAQiH,aAAc,GAC/FV,EAAKrF,MAAQ,GACLsF,EAAAD,EAAMb,EAAQI,GACf,CACH+B,iBAAkBH,EAClBnB,KAAAA,KAIW,MAAfmB,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAE5GnB,EAAArF,MAAQwG,EAAMxG,OAAS,GAC5BsF,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5C,CACHW,KAAAA,GACJ,CAEK,SAAAyB,EAAerB,EAAWzF,GACzB,IAAAlB,EAAU2G,EAAU3G,UACpBuG,EAAOF,EAAU,EAA6BrG,EAAQ0F,OAAQ1F,EAAQ4G,UAGrE,OAFPL,EAAKrF,MAAQA,EACbsF,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEX,SAAS0B,EAAYtB,GACX,IAAA3G,EAAU2G,EAAU3G,UACpBkI,EAAa7B,EAAU,EAA0BrG,EAAQ0F,OAAQ1F,EAAQ4G,UAC3Ec,EAAQf,EAAUQ,YAClB,GAAe,IAAfO,EAAMpB,KAAuC,CACvC,IAAA6B,EAASV,EAAoBd,GACnCuB,EAAWE,SAAWD,EAAO5B,KACrBmB,EAAAS,EAAON,kBAAoBlB,EAAUQ,WAAU,CAW3D,OARmB,IAAfO,EAAMpB,MACIhB,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAI9F,KAFnBA,EAAQf,EAAUQ,aAERb,OACNoB,EAAQf,EAAUQ,aAEdO,EAAMpB,MACV,KAAK,GACkB,MAAfoB,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHQ,EAAWjH,IAAM+G,EAAerB,EAAWe,EAAMxG,OAAS,IAC1D,MACJ,OACuB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHQ,EAAWjH,IAAMmG,EAAWT,EAAWe,EAAMxG,OAAS,IACtD,MACJ,KAAK,EACkB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHQ,EAAWjH,IAAM6F,EAAUH,EAAWe,EAAMxG,OAAS,IACrD,MACJ,KAAK,EACkB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHQ,EAAWjH,IAAMoG,EAAaV,EAAWe,EAAMxG,OAAS,IACxD,MACJ,QAEIoE,EAAUqB,EAAWgB,EAAkBU,4BAA6BrI,EAAQiH,aAAc,GACpF,IAAAqB,EAAc3B,EAAU3G,UACxBuI,EAAqBlC,EAAU,EAA6BiC,EAAY5C,OAAQ4C,EAAY1B,UAK3F,OAJP2B,EAAmBrH,MAAQ,GAC3BsF,EAAQ+B,EAAoBD,EAAY5C,OAAQ4C,EAAY1B,UAC5DsB,EAAWjH,IAAMsH,EACjB/B,EAAQ0B,EAAYI,EAAY5C,OAAQ4C,EAAY1B,UAC7C,CACHiB,iBAAkBH,EAClBnB,KAAM2B,GAKX,OADP1B,EAAQ0B,EAAYvB,EAAUE,gBAAiBF,EAAUf,mBAClD,CACHW,KAAM2B,EACV,CAEJ,SAASM,EAAa7B,GACZ,IAAA3G,EAAU2G,EAAU3G,UAOpBuG,EAAOF,EAAU,EANqB,IAAxBrG,EAAQyI,YACtB9B,EAAUE,gBACV7G,EAAQ0F,OAC2B,IAAxB1F,EAAQyI,YACnBzI,EAAQ0I,OACR1I,EAAQ4G,UAEdL,EAAKoC,MAAQ,GACb,IAAIxB,EAAY,KACb,EAAA,CACO,IAAAO,EAAQP,GAAaR,EAAUQ,YAErC,OADYA,EAAA,KACJO,EAAMpB,MACV,OACuB,MAAfoB,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHnB,EAAKoC,MAAMC,KAAKlC,EAAUC,EAAWe,EAAMxG,OAAS,KACpD,MACJ,KAAK,EACkB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHnB,EAAKoC,MAAMC,KAAK9B,EAAUH,EAAWe,EAAMxG,OAAS,KACpD,MACJ,KAAK,EACkB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHnB,EAAKoC,MAAMC,KAAKxB,EAAWT,EAAWe,EAAMxG,OAAS,KACrD,MACJ,KAAK,EACkB,MAAfwG,EAAMxG,OACIoE,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGc,EAAgBL,IAEjHnB,EAAKoC,MAAMC,KAAKvB,EAAaV,EAAWe,EAAMxG,OAAS,KACvD,MACJ,KAAqC,EAC3B,IAAAiH,EAASF,EAAYtB,GACtBJ,EAAAoC,MAAMC,KAAKT,EAAO5B,MACvBY,EAAYgB,EAAON,kBAAoB,KAI1C,OAAwB,KAAxB7H,EAAQyI,aACW,IAAxBzI,EAAQyI,aASL,OADCjC,EAAAD,EANkC,IAAxBvG,EAAQyI,YACpBzI,EAAQgH,WACRL,EAAUE,gBACuB,IAAxB7G,EAAQyI,YACjBzI,EAAQ6I,WACRlC,EAAUf,mBAETW,CAAA,CAEX,SAASuC,EAAYnC,EAAWjB,EAAQI,EAAKiD,GACnC,IAAA/I,EAAU2G,EAAU3G,UACtBgJ,EAA2C,IAAzBD,EAAQJ,MAAMlI,OAC9B8F,EAAOF,EAAU,EAA0BX,EAAQI,GACzDS,EAAK0C,MAAQ,GACR1C,EAAA0C,MAAML,KAAKG,GACb,EAAA,CACO,IAAAG,EAAMV,EAAa7B,GACpBqC,IACiBA,EAAqB,IAArBE,EAAIP,MAAMlI,QAE3B8F,EAAA0C,MAAML,KAAKM,EAAG,OACU,KAAxBlJ,EAAQyI,aAKV,OAJHO,GACA1D,EAAUqB,EAAWgB,EAAkBwB,6BAA8BrD,EAAK,GAE9EU,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEX,SAAS6C,EAAczC,GACb,IAAA3G,EAAU2G,EAAU3G,UAClB0F,EAAqB1F,EAArB0F,OAAQkB,EAAa5G,EAAb4G,SACVmC,EAAUP,EAAa7B,GACzB,OAAwB,KAAxB3G,EAAQyI,YACDM,EAGAD,EAAYnC,EAAWjB,EAAQkB,EAAUmC,EACpD,CAEJ,SAASM,EAAMxE,GACX,IAAM8B,EA35Bd,SAAyB9B,GAAsB,IAAd1D,EAAUX,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,GAAA/D,UAAA,GAAA,GACjC6E,GAAgC,IAArBlE,EAAQkE,SACnBiE,EA5EV,SAAuBC,GACnB,IAAMC,EAAOD,EACTE,EAAS,EACTC,EAAQ,EACRC,EAAU,EACVC,EAAc,EACZC,EAAS,SAAC9C,GAAU,OAAAyC,EAAKzC,KAAW+C,GAAWN,EAAKzC,EAAQ,KAAOgD,CAAA,EACnEC,EAAO,SAACjD,GAAU,OAAAyC,EAAKzC,KAAWgD,CACxC,EAAME,EAAO,SAAClD,GAAU,OAAAyC,EAAKzC,KAAWmD,CAAA,EAClCC,EAAO,SAACpD,GAAU,OAAAyC,EAAKzC,KAAWqD,CACxC,EAAMC,EAAY,SAACtD,GAAU,OAAA8C,EAAO9C,IAAUiD,EAAKjD,IAAUkD,EAAKlD,IAAUoD,EAAKpD,EACjF,EAIMuD,EAAS,SAAC5E,GAAW,OAAAmE,EAAOnE,IAAWuE,EAAKvE,IAAWyE,EAAKzE,GAAUqE,EAAUP,EAAK9D,EACrF,EAAA6E,EAAc,WAAM,OAAAD,EAAOb,EAAM,EACjCe,EAAc,WAAA,OAAMF,EAAOb,EAASG,EAAW,EACrD,SAASa,IAWL,OAVcb,EAAA,EACVS,EAAUZ,KACVC,IACUC,EAAA,GAEVE,EAAOJ,IACPA,IAEJA,IACAE,IACOH,EAAKC,EAAM,CAEtB,SAASiB,IAKE,OAJHb,EAAOJ,EAASG,IAChBA,IAEJA,IACOJ,EAAKC,EAASG,EAAW,CAEpC,SAASe,IACIlB,EAAA,EACDC,EAAA,EACEC,EAAA,EACIC,EAAA,CAAA,CAET,SAAAgB,IACShB,sDADU,GAAA,CACV,CAElB,SAASiB,IAEL,IADA,IAAMC,EAASrB,EAASG,EACjBkB,IAAWrB,GACTgB,IAEKb,EAAA,CAAA,CAEX,MAAA,CACH7C,MA5CU,WAAM,OAAA0C,CACpB,EA4CIsB,KA5CS,kBAAMrB,CACnB,EA4CI7D,OA5CW,WAAM,OAAA8D,CACrB,EA4CIqB,WA5Ce,WAAM,OAAApB,CAAA,EA6CrBU,OAAAA,EACAC,YAAAA,EACAC,YAAAA,EACAC,KAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,UAAAA,EACAC,WAAAA,EAER,CAQkBI,CAAcpG,GACtBgC,EAAgB,kBAAMyC,EAAMvC,OAC5B,EAAAnB,EAAkB,WAAlB,OArKcmF,EAqKyBzB,EAAMyB,OArKzBlF,EAqKiCyD,EAAMzD,SArK/BH,EAqKyC4D,EAAMvC,QApK1E,CAAEgE,KAAAA,EAAMlF,OAAAA,EAAQH,OAAAA;;;;;;AAD3B,IAAwBqF,EAAMlF,EAAQH,GAsK5BwF,EAAWtF,IACXuF,EAActE,IACduE,EAAW,CACb3C,YAAa,GACb/C,OAAQyF,EACRvE,SAAUsE,EACVxC,OAAQwC,EACRG,SAAU,GACVrE,WAAYmE,EACZlE,aAAciE,EACdrC,WAAYqC,EACZI,UAAW,EACXC,UAAU,EACVC,KAAM,IAEJxL,EAAU,kBAAMoL,CAAA,EACd3G,EAAYtD,EAAZsD,QACR,SAASa,EAAUE,EAAMiB,EAAKf,GAC1B,IAAM+F,EAAMzL,IAGZ,GAFAyG,EAAIZ,QAAUH,EACde,EAAIf,QAAUA,EACVjB,EAAS,CACkD,IAA3D,IAAMqB,EAAMT,EAAWU,EAAe0F,EAAI7E,SAAUH,GAAO,KAAAiF,EAAAlL,UAAAC,OAL1BC,MAAMC,MAAA+K,EAAA,EAAAA,EAAAC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAD,EAAAC,IAANjL,EAAMiL,EAAA,GAAAnL,UAAAmL,GAMjC,IAAAhH,EAAMuB,EAAmBV,EAAMM,EAAK,CACtCK,OAAQyF,EACRlL,KAAAA,IAEJ+D,EAAQE,EAAG,CACf,CAEK,SAAAkH,EAAS7L,EAASsG,EAAMpF,GAC7BlB,EAAQ0I,OAAS9C,IACjB5F,EAAQyI,YAAcnC,EAChB,IAAAoB,EAAQ,CAAEpB,KAAAA,GAOT,OANHjB,IACAqC,EAAM5B,IAAMC,EAAe/F,EAAQ4G,SAAU5G,EAAQ0I,SAE5C,MAATxH,IACAwG,EAAMxG,MAAQA,GAEXwG,CAAA,CAEL,IAAAoE,EAAc,SAAC9L,UAAY6L,EAAS7L,EAAS,GAAuB,EACjE,SAAA+L,EAAIC,EAAMC,GACX,OAAAD,EAAKzB,gBAAkB0B,GACvBD,EAAKvB,OACEwB,IAGP3G,EAAUqC,EAAkBuE,eAAgBtG,IAAmB,EAAGqG,GAC3D,GACX,CAEJ,SAASE,EAAWH,GAEhB,IADA,IAAII,EAAM,GACHJ,EAAKxB,gBAAkB6B,GAAWL,EAAKxB,gBAAkBT,GAC5DqC,GAAOJ,EAAKxB,cACZwB,EAAKtB,OAEF,OAAA0B,CAAA,CAEX,SAASE,EAAWN,GACV,IAAAI,EAAMD,EAAWH,GAEhB,OADPA,EAAKnB,aACEuB,CAAA,CAEX,SAASG,EAAkBN,GACvB,GAAIA,IAAOO,EACA,OAAA,EAEL,IAAAC,EAAKR,EAAGS,WAAW,GAChB,OAAAD,GAAM,IAAMA,GAAM,KACtBA,GAAM,IAAMA,GAAM,IACZ,KAAPA,CAAO,CAGf,SAASE,EAAcV,GACnB,GAAIA,IAAOO,EACA,OAAA,EAEL,IAAAC,EAAKR,EAAGS,WAAW,GAClB,OAAAD,GAAM,IAAMA,GAAM,EAAA,CAEpB,SAAAG,EAAuBZ,EAAMhM,GAElC,GAAoB,IADIA,EAAhByI,YAEG,OAAA,EAEX0D,EAAWH,GACX,IAAMa,EAAMN,EAAkBP,EAAKxB,eAE5B,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAC,EAAsBd,EAAMhM,GAEjC,GAAoB,IADIA,EAAhByI,YAEG,OAAA,EAEX0D,EAAWH,GACL,IACAa,EAAMF,EADsB,MAAvBX,EAAKxB,cAAwBwB,EAAKtB,OAASsB,EAAKxB,eAGpD,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAE,EAAef,EAAMhM,GAE1B,GAAoB,IADIA,EAAhByI,YAEG,SAEX0D,EAAWH,GACL,IAAAa,EAAMb,EAAKxB,gBAAkBwC,EAE5B,OADPhB,EAAKpB,YACEiC,CAAA,CAEF,SAAAI,EAAiBjB,EAAMhM,GAE5B,GAAoB,IADIA,EAAhByI,YAEG,OAAA,EAEX0D,EAAWH,GACL,IAAAa,EAA6B,MAAvBb,EAAKxB,cAEV,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAK,EAAsBlB,EAAMhM,GAEjC,GAAoB,IADIA,EAAhByI,YAEG,OAAA,EAEX0D,EAAWH,GACX,IAAMa,EAAMN,EAAkBP,EAAKxB,eAE5B,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAM,EAAuBnB,EAAMhM,GAC5B,IAAEyI,EAAgBzI,EAAhByI,YACR,GAAsB,IAAhBA,GACc,KAAhBA,EACO,OAAA,EAEX0D,EAAWH,GACL,IAAAa,EAA6B,MAAvBb,EAAKxB,cAEV,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAO,EAAmBpB,EAAMhM,GAE9B,GAAoB,IADIA,EAAhByI,YAEG,OAAA,EAEX,IAAM4E,EAAK,WACD,IAAApB,EAAKD,EAAKxB,cAChB,MAAW,MAAPyB,EACOM,EAAkBP,EAAKtB,UAElB,MAAPuB,GACE,MAAPA,GACO,MAAPA,GACO,MAAPA,GACAA,IAAOI,IACNJ,KAGIA,IAAOlC,GACZiC,EAAKtB,OACE2C,KAIAC,EAAYtB,GAAM,GAEjC,EACMa,EAAMQ,IAEL,OADPrB,EAAKpB,YACEiC,CAAA,CAEX,SAASU,EAAcvB,GACnBG,EAAWH,GACL,IAAAa,EAA6B,MAAvBb,EAAKxB,cAEV,OADPwB,EAAKpB,YACEiC,CAAA,CAEF,SAAAS,EAAYtB,GAAoB,IAAdrB,IAAAnK,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,KAAA/D,UAAA,GACjB6M,EAAK,eAACG,EAAWhN,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,IAAA/D,aAAOiN,sDAAO,GAAA,GAC3BxB,EAAKD,EAAKxB,cAChB,MAAW,MAAPyB,EACOuB,EAEK,MAAPvB,GAA4CA,EAGrC,MAAPA,IACIwB,IAASpB,GAAWoB,IAAS1D,GAEjCkC,IAAOI,GACZL,EAAKtB,OACE2C,GAAG,EAAMhB,IAEXJ,IAAOlC,IACZiC,EAAKtB,OACE2C,GAAG,EAAMtD,IAXTyD,CAgBf,EACMX,EAAMQ,IAEL,OADP1C,GAASqB,EAAKpB,YACPiC,CAAA,CAEF,SAAAa,EAAS1B,EAAMqB,GACd,IAAApB,EAAKD,EAAKzB,cAChB,OAAI0B,IAAOO,EACAA,EAEPa,EAAGpB,IACHD,EAAKvB,OACEwB,GAEJ,IAAA,CAEX,SAAS0B,EAAa1B,GACZ,IAAAQ,EAAKR,EAAGS,WAAW,GAChB,OAAAD,GAAM,IAAMA,GAAM,KACtBA,GAAM,IAAMA,GAAM,IAClBA,GAAM,IAAMA,GAAM,IACZ,KAAPA,GACO,KAAPA,CAAO,CAGf,SAASmB,EAAmB5B,GACjB,OAAA0B,EAAS1B,EAAM2B,EAAY,CAEtC,SAASE,EAAkB5B,GACjB,IAAAQ,EAAKR,EAAGS,WAAW,GAChB,OAAAD,GAAM,IAAMA,GAAM,KACtBA,GAAM,IAAMA,GAAM,IAClBA,GAAM,IAAMA,GAAM,IACZ,KAAPA,GACO,KAAPA,GACO,KAAPA,CAAO,CAGf,SAASqB,EAAwB9B,GACtB,OAAA0B,EAAS1B,EAAM6B,EAAiB,CAE3C,SAASE,EAAQ9B,GACP,IAAAQ,EAAKR,EAAGS,WAAW,GAClB,OAAAD,GAAM,IAAMA,GAAM,EAAA,CAE7B,SAASuB,EAAUhC,GACR,OAAA0B,EAAS1B,EAAM+B,EAAO,CAEjC,SAASE,EAAWhC,GACV,IAAAQ,EAAKR,EAAGS,WAAW,GAChB,OAAAD,GAAM,IAAMA,GAAM,IACtBA,GAAM,IAAMA,GAAM,IAClBA,GAAM,IAAMA,GAAM,GAAA,CAE3B,SAASyB,EAAalC,GACX,OAAA0B,EAAS1B,EAAMiC,EAAU,CAEpC,SAASE,EAAUnC,GAGP,IAFR,IAAIC,EAAK,GACLmC,EAAM,GACFnC,EAAK+B,EAAUhC,IACZoC,GAAAnC,EAEJ,OAAAmC,CAAA,CAEX,SAASC,EAASrC,GAEd,IADA,IAAII,EAAM,KACG,CACH,IAAAH,EAAKD,EAAKzB,cACZ,GAAO,MAAP0B,GACO,MAAPA,GACO,MAAPA,GACO,MAAPA,IACCA,EACD,SAEKA,IAAOI,GAAWJ,IAAOlC,EAC1B,GAAAuD,EAAYtB,GACLI,GAAAH,EACPD,EAAKvB,WACT,IACS8C,EAAcvB,GACnB,MAGOI,GAAAH,EACPD,EAAKvB,MAAK,MAIP2B,GAAAH,EACPD,EAAKvB,MACT,CAEG,OAAA2B,CAAA,CAEX,SAASkC,EAAoBtC,GACzBM,EAAWN,GAGH,IAFR,IAAIC,EAAK,GACLsC,EAAO,GACHtC,EAAK6B,EAAwB9B,IACzBuC,GAAAtC,EAKL,OAHHD,EAAKzB,gBAAkBiC,GACvBlH,EAAUqC,EAAkB6G,2BAA4B5I,IAAmB,GAExE2I,CAAA,CAEX,SAASE,EAAmBzC,GACxBM,EAAWN,GACX,IAAI9K,EAAQ,GAWL,MAVoB,MAAvB8K,EAAKzB,eACLyB,EAAKvB,OACIvJ,GAAA,IAAAoB,OAAI6L,EAAUnC,KAGvB9K,GAASiN,EAAUnC,GAEnBA,EAAKzB,gBAAkBiC,GACvBlH,EAAUqC,EAAkB6G,2BAA4B5I,IAAmB,GAExE1E,CAAA,CAEX,SAASwN,EAAUzC,GACR,OAAAA,IAAOe,GAAqBf,IAAOlC,CAAA,CAE9C,SAAS4E,EAAY3C,GACjBM,EAAWN,GAEXD,EAAIC,OAGJ,IAFA,IAAIC,EAAK,GACL2C,EAAU,GACN3C,EAAKyB,EAAS1B,EAAM0C,IAEpBE,GADO,OAAP3C,EACW4C,GAAmB7C,GAGnBC,EAGb,IAAA6C,EAAU9C,EAAKzB,cACjB,OAAAuE,IAAY/E,GAAW+E,IAAYtC,GACnClH,EAAUqC,EAAkBoH,yCAA0CnJ,IAAmB,GAErFkJ,IAAY/E,IACZiC,EAAKvB,OAELsB,EAAIC,QAED4C,IAGX7C,EAAIC,EAAU,KACP4C,EAAA,CAEX,SAASC,GAAmB7C,GAClB,IAAAC,EAAKD,EAAKzB,cAChB,OAAQ0B,GACJ,IAAK,KACL,IAAA,IAEI,OADAD,EAAKvB,OACLnI,KAAAA,OAAY2J,GAChB,IAAK,IACM,OAAA+C,GAA0BhD,EAAMC,EAAI,GAC/C,IAAK,IACM,OAAA+C,GAA0BhD,EAAMC,EAAI,GAC/C,QAEW,OADP3G,EAAUqC,EAAkBsH,wBAAyBrJ,IAAmB,EAAGqG,GACpE,GACf,CAEK,SAAA+C,GAA0BhD,EAAMkD,EAASC,GAC9CpD,EAAIC,EAAMkD,GAEV,IADA,IAAIE,EAAW,GACNnN,EAAI,EAAGA,EAAIkN,EAAQlN,IAAK,CACvB,IAAAgK,EAAKiC,EAAalC,GACxB,IAAKC,EAAI,CACL3G,EAAUqC,EAAkB0H,gCAAiCzJ,IAAmB,EAAGtD,KAAAA,OAAK4M,GAAO5M,OAAG8M,GAAQ9M,OAAG0J,EAAKzB,gBAClH,KAAA,CAEQ6E,GAAAnD,CAAA,CAET,MAAA,KAAA3J,OAAK4M,GAAO5M,OAAG8M,EAAQ,CAElC,SAASE,GAAoBrD,GACzB,MAAe,MAAPA,GACG,MAAPA,GACAA,IAAOI,GACPJ,IAAOlC,CAAA,CAEf,SAASwF,GAAsBvD,GAC3BM,EAAWN,GAGX,IAFA,IAAIC,EAAK,GACLuD,EAAc,GACVvD,EAAKyB,EAAS1B,EAAMsD,KACTE,GAAAvD,EAEZ,OAAAuD,CAAA,CAEX,SAASC,GAAmBzD,GAGhB,IAFR,IAAIC,EAAK,GACLsC,EAAO,GACHtC,EAAK2B,EAAmB5B,IACpBuC,GAAAtC,EAEL,OAAAsC,CAAA,CAEX,SAASmB,GAAgB1D,GACf,IAAAqB,EAAK,SAACjB,GACF,IAAAH,EAAKD,EAAKzB,cACZ,MAAO,MAAP0B,GACO,MAAPA,GACO,MAAPA,GACO,MAAPA,GACO,MAAPA,GACCA,EAGIA,IAAOI,EACLD,GAGAA,GAAAH,EACPD,EAAKvB,OACE4C,EAAGjB,IARHA,CAef,EACA,OAAOiB,EAAG,GAAE,CAEhB,SAASsC,GAAW3D,GAChBM,EAAWN,GACX,IAAM4D,EAAS7D,EAAIC,EAAM,KAElB,OADPM,EAAWN,GACJ4D,CAAA,CAGF,SAAAC,GAAuB7D,EAAMhM,GAClC,IAAI0H,EAAQ,KAEZ,OADWsE,EAAKzB,eAEZ,IAAK,IAQM,OAPHvK,EAAQsL,WAAa,GACrBhG,EAAUqC,EAAkBmI,2BAA4BlK,IAAmB,GAE/EoG,EAAKvB,OACG/C,EAAAmE,EAAS7L,EAAS,EAA8B,KACxDsM,EAAWN,GACXhM,EAAQsL,YACD5D,EACX,IAAK,IAYM,OAXH1H,EAAQsL,UAAY,GACI,IAAxBtL,EAAQyI,aACRnD,EAAUqC,EAAkBoI,kBAAmBnK,IAAmB,GAEtEoG,EAAKvB,OACG/C,EAAAmE,EAAS7L,EAAS,EAA+B,KACzDA,EAAQsL,YACRtL,EAAQsL,UAAY,GAAKgB,EAAWN,GAChChM,EAAQuL,UAAkC,IAAtBvL,EAAQsL,YAC5BtL,EAAQuL,UAAW,GAEhB7D,EACX,IAAK,IAMM,OALH1H,EAAQsL,UAAY,GACpBhG,EAAUqC,EAAkB6G,2BAA4B5I,IAAmB,GAE/E8B,EAAQsI,GAAkBhE,EAAMhM,IAAY8L,EAAY9L,GACxDA,EAAQsL,UAAY,EACb5D,EACX,QACI,IAAIuI,GAAuB,EACvBC,GAAsB,EACtBC,GAAe,EACf,GAAA5C,EAAcvB,GAQP,OAPHhM,EAAQsL,UAAY,GACpBhG,EAAUqC,EAAkB6G,2BAA4B5I,IAAmB,GAE/E8B,EAAQmE,EAAS7L,EAAS,EAAyB2P,GAAW3D,IAE9DhM,EAAQsL,UAAY,EACpBtL,EAAQuL,UAAW,EACZ7D,EAEP1H,GAAAA,EAAQsL,UAAY,IACK,IAAxBtL,EAAQyI,aACmB,IAAxBzI,EAAQyI,aACgB,IAAxBzI,EAAQyI,aAGL,OAFPnD,EAAUqC,EAAkB6G,2BAA4B5I,IAAmB,GAC3E5F,EAAQsL,UAAY,EACb8E,GAAUpE,EAAMhM,GAE3B,GAAKiQ,EAAuBrD,EAAuBZ,EAAMhM,GAG9C,OAFP0H,EAAQmE,EAAS7L,EAAS,EAA0BsO,EAAoBtC,IACxEM,EAAWN,GACJtE,EAEX,GAAKwI,EAAsBpD,EAAsBd,EAAMhM,GAG5C,OAFP0H,EAAQmE,EAAS7L,EAAS,EAAyByO,EAAmBzC,IACtEM,EAAWN,GACJtE,EAEX,GAAKyI,EAAepD,EAAef,EAAMhM,GAG9B,OAFP0H,EAAQmE,EAAS7L,EAAS,EAA4B2O,EAAY3C,IAClEM,EAAWN,GACJtE,EAEX,IAAKuI,IAAyBC,IAAwBC,EAK3C,OAHPzI,EAAQmE,EAAS7L,EAAS,GAAkCuP,GAAsBvD,IAClF1G,EAAUqC,EAAkB0I,6BAA8BzK,IAAmB,EAAG8B,EAAMxG,OACtFoL,EAAWN,GACJtE,EAKZ,OAAAA,CAAA,CAGF,SAAAsI,GAAkBhE,EAAMhM,GACvB,IAAEyI,EAAgBzI,EAAhByI,YACJf,EAAQ,KACNuE,EAAKD,EAAKzB,cAQhB,OAPqB,IAAhB9B,GACe,IAAhBA,GACgB,KAAhBA,GACgB,IAAhBA,GACCwD,IAAOlC,GAAWkC,IAAOI,GAC1B/G,EAAUqC,EAAkB2I,sBAAuB1K,IAAmB,GAElEqG,GACJ,IAAK,IAIM,OAHPD,EAAKvB,OACG/C,EAAAmE,EAAS7L,EAAS,EAAgC,KAC1DA,EAAQuL,UAAW,EACZ7D,EACX,IAAK,IAGM,OAFP4E,EAAWN,GACXA,EAAKvB,OACEoB,EAAS7L,EAAS,EAA8B,KAC3D,IAAK,IAGM,OAFPsM,EAAWN,GACXA,EAAKvB,OACEoB,EAAS7L,EAAS,EAAoC,KACjE,QACQ,OAAAuN,EAAcvB,IACdtE,EAAQmE,EAAS7L,EAAS,EAAyB2P,GAAW3D,IAE9DhM,EAAQsL,UAAY,EACpBtL,EAAQuL,UAAW,EACZ7D,GAEPuF,EAAiBjB,EAAMhM,IACvBmN,EAAuBnB,EAAMhM,IAC7BsM,EAAWN,GACJgE,GAAkBhE,EAAMhM,IAE/BkN,EAAsBlB,EAAMhM,IAC5BsM,EAAWN,GACJH,EAAS7L,EAAS,GAAoCyP,GAAmBzD,KAEhFoB,EAAmBpB,EAAMhM,IACzBsM,EAAWN,GACA,MAAPC,EAEO4D,GAAuB7D,EAAMhM,IAAY0H,EAGzCmE,EAAS7L,EAAS,GAA+B0P,GAAgB1D,MAG5D,IAAhBvD,GACAnD,EAAUqC,EAAkB2I,sBAAuB1K,IAAmB,GAE1E5F,EAAQsL,UAAY,EACpBtL,EAAQuL,UAAW,EACZ6E,GAAUpE,EAAMhM,IAC/B,CAGK,SAAAoQ,GAAUpE,EAAMhM,GACrB,IAAI0H,EAAQ,CAAEpB,KAAM,IAChBtG,GAAAA,EAAQsL,UAAY,EACpB,OAAOuE,GAAuB7D,EAAMhM,IAAY8L,EAAY9L,GAEhE,GAAIA,EAAQuL,SACR,OAAOyE,GAAkBhE,EAAMhM,IAAY8L,EAAY9L,GAG3D,OADWgM,EAAKzB,eAEZ,IAAK,IACD,OAAOsF,GAAuB7D,EAAMhM,IAAY8L,EAAY9L,GAChE,IAAK,IAGM,OAFPsF,EAAUqC,EAAkB4I,yBAA0B3K,IAAmB,GACzEoG,EAAKvB,OACEoB,EAAS7L,EAAS,EAA+B,KAC5D,IAAK,IACD,OAAOgQ,GAAkBhE,EAAMhM,IAAY8L,EAAY9L,GAC3D,QACQ,GAAAuN,EAAcvB,GAKP,OAJPtE,EAAQmE,EAAS7L,EAAS,EAAyB2P,GAAW3D,IAE9DhM,EAAQsL,UAAY,EACpBtL,EAAQuL,UAAW,EACZ7D,EAEP,GAAA4F,EAAYtB,GACZ,OAAOH,EAAS7L,EAAS,EAAyBqO,EAASrC,IAKhE,OAAAtE,CAAA,CAEX,SAASP,KACL,IAAQsB,EAA0C2C,EAA1C3C,YAAa/C,EAA6B0F,EAA7B1F,OAAQkB,EAAqBwE,EAArBxE,SAAU8B,EAAW0C,EAAX1C,OAOnC,OANJ0C,EAASC,SAAW5C,EACpB2C,EAASpE,WAAatB,EACtB0F,EAASnE,aAAeL,EACxBwE,EAASvC,WAAaH,EACtB0C,EAAS1F,OAASmB,IAClBuE,EAASxE,SAAWhB,IAChB0D,EAAMiB,gBAAkBiC,EACjBX,EAAST,EAAU,IAEvBgF,GAAU9G,EAAO8B,EAAQ,CAE7B,MAAA,CACHjE,UAAAA,GACAN,cAAAA,EACAjB,gBAAAA,EACA5F,QAAAA,EAER,CAmR0BwQ,CAAgB3L,EAAQjC,EAAO,CAAA,EAAIzB,IAC/CnB,EAAU2G,EAAU3G,UACpBuG,EAAOF,EAAU,EAA4BrG,EAAQ0F,OAAQ1F,EAAQ4G,UAapE,OAZHvB,GAAYkB,EAAKT,MACjBS,EAAKT,IAAIjB,OAASA,GAEjB0B,EAAAkK,KAAOrH,EAAczC,GACtBxF,EAAQ+C,aACHqC,EAAAtC,SAAW9C,EAAQ+C,WAAWW,IAGX,KAAxB7E,EAAQyI,aACEnD,EAAAqB,EAAWgB,EAAkBG,4BAA6B9H,EAAQiH,aAAc,EAAGpC,EAAO7E,EAAQ0F,SAAW,IAE3Hc,EAAQD,EAAMI,EAAUE,gBAAiBF,EAAUf,mBAC5CW,CAAA,CAEX,MAAO,CAAE8C,MAAAA,EACb,CAkYmBqH,CAAa5L,GACTuE,MAAMxE,GACzB,OAAKE,GAQDG,GAzUR,SAAkBE,GACd,IAAMqL,EAAOrL,EAAIqL,KACC,IAAdA,EAAKnK,KACLqK,EAAoBF,GAGpBA,EAAKxH,MAAM2H,SAAQ,SAAKC,GAAA,OAAAF,EAAoBE,KAGpD,CAgU0B1L,CAASC,GAE3BJ,GAAgBC,EAAOG,GAEhB,CAAEA,IAAAA,EAAKI,KAAM,MAxV5B,SAAmBJ,OAET0L,EAjDV,SAA2B1L,GACzB,IACQgG,EAAW,CACbhG,IAAAA,EACA2L,YAAaC,KAEXhR,EAAU,WAAM,OAAAoL,CAAA,EAKf,MAAA,CAAEpL,QAAAA,EAASiR,OAJH,SAAC1C,GAEL,OADEnD,EAAA2F,QAAQG,IAAI3C,GACdA,CACX,EAEJ,CAqCwB4C,CAAkB/L,GAC1B0L,EAAAG,OAAO,aAEnB7L,EAAIqL,MAAQW,EAAahM,EAAIqL,KAAMK,GAE7B,IAAA9Q,EAAU8Q,EAAY9Q,UAC5BoF,EAAI2L,QAAUpQ,MAAM0Q,KAAKrR,EAAQ+Q,QACrC,CAqUQO,CAAUlM,EAAKN,GAERyM,EAASnM,EAAKN,GAU7B;;;;;UDlzCgB0M,CAAc1N,EAAS3C,IAAUqD,CAAAA,EAAAA,CAAAA,YAAAA,GACjD,CAkBqCiN,CAAY3N,EAASc,EAAAA,EAAA,CAAA,EAC3C5E,GAAA,CAAA,EAAA,CACHqF,UAAW,EACXN,KAAK,KAHDK,EAAAd,EAAAc,IAAKZ,EAAYF,EAAZE,YAMP0E,EAAMnH,GAAOqD,GAEnB,OAAQZ,EAEF0E,EADC7E,GAAaJ,GAAYiF,CAC1B,CAQN,IAAMjF,EAAWH,EAAQG,SACzB,GAAIA,EAAU,CACJ,IAAAG,EAASC,GAAaJ,GAC5B,OAAIG,IAIIC,GAAaJ,GACjBlC,GAAO+B,GAAO,CAGlB,OAAO/B,GAAO+B,EAG1B,IA+aA,SAAsB4N,EAAKC,GAEnB,IAACC,EAASF,GACH,OAAA,KAGP,IAAAG,EAAMC,GAAMnP,IAAIgP,GACfE,IACDA,EAnIR,SAAeF,GACX,IAIId,EACA5P,EACA8Q,EACAzL,EACA0L,EACAC,EACAC,EAVEC,EAAO,GACTpL,GAAQ,EACRqL,EAAO,EACPC,EAAe,EAQbC,EAAU,GAuChB,SAASC,IACC,IAAAC,EAAWb,EAAK5K,EAAQ,GAC9B,GAAc,IAATqL,GACY,MAAbI,GACU,IAATJ,GACgB,MAAbI,EAIG,OAHPzL,IACAgL,EAAU,KAAOS,EACjBF,EAAQ,MACD,CACX,CAhDJA,EAAQ,GAA0B,gBAClB/N,IAARtD,EACMA,EAAA8Q,EAGC9Q,GAAA8Q,CAEf,EACAO,EAAQ,GAAwB,gBAChB/N,IAARtD,IACAkR,EAAKvJ,KAAK3H,GACJA,OAAAsD,EAEd,EACA+N,EAAQ,GAAsC,WAC1CA,EAAQ,KACRD,GACJ,EACAC,EAAQ,GAAiC,WACrC,GAAID,EAAe,EACfA,IACOD,EAAA,EACPE,EAAQ,SAEP,CAED,GADeD,EAAA,OACH9N,IAARtD,EACO,OAAA,EAGX,GADAA,EAvDZ,SAAuB0Q,GACb,IAAAc,EAAUd,EAAKe,OAEjB,GAAmB,MAAnBf,EAAKrH,OAAO,IAAcqI,MAAMzL,SAASyK,IAClC,OAAA,EAEX,OApDeiB,EAoDEH,EAnDVI,GAAeC,KAAKF,IAKVrJ,EA+CCkJ,EA9CZM,EAAIxJ,EAAImD,WAAW,GACnBsG,EAAIzJ,EAAImD,WAAWnD,EAAI9I,OAAS,GAC/BsS,IAAMC,GAAY,KAAND,GAAoB,KAANA,EAAiCxJ,EAAnBA,EAAI0J,MAAM,GAAG,IA6CtD,IAAmCR,EAhD7C,IAAqBlJ,EACXwJ,EACAC,EARV,IAAmBJ,CAuDnB,CA8CkBM,CAAcjS,IACR,IAARA,EACO,OAAA,EAGPqR,EAAQ,IACZ,CAER,EAaA,KAAgB,OAATF,GAGC,GAFJrL,IAEU,QADV8J,EAAIc,EAAK5K,MACSwL,IAAd,CAOJ,GAJAjM,EAAO6M,GAAgBtC,GAIJ,KAFNmB,GADbE,EAAUkB,GAAiBhB,IACN9L,IAAS4L,EAAyC,GAAA,GAGnE,OAGA,GADJE,EAAOJ,EAAW,QACIzN,IAAlByN,EAAW,KACFC,EAAAK,EAAQN,EAAW,OAEdD,EAAAlB,GACO,IAAboB,KACA,OAKZ,GAAa,IAATG,EACO,OAAAD,CArBP,CAwBZ,CAwCc9I,CAAMsI,GACRE,GACMC,GAAAjP,IAAI8O,EAAME,IAIxB,IAAKA,EACM,OAAA,KAGX,IAAMwB,EAAMxB,EAAIpR,OACZ6S,EAAO5B,EACPzP,EAAI,EACR,KAAOA,EAAIoR,GAAK,CACZ,IAAME,EAAMD,EAAKzB,EAAI5P,IACrB,QAAYsC,IAARgP,EACO,OAAA,KAEP,GAAAC,EAAWF,GACJ,OAAA,KAEJA,EAAAC,EACPtR,GAAA,CAEG,OAAAqR,CACX,QE3eA,SAAkBG,EAAKC,GAEnB,GAAIC,EAAqBF,IAAQE,EAAqBD,GAC5C,MAAI,IAAAE,MAAM,iBAEpB,IAAMC,EAAQ,CAAC,CAAEJ,IAAAA,EAAKC,IAAAA,IAAKI,EAAA,WAEvB,IAAAC,EAAqBF,EAAMG,MAAnBP,EAAAA,EAAAA,IAAKC,EAAIK,EAAJL,IAEbO,OAAO9B,KAAKsB,GAAK7C,SAAQ,SAAO3P,GAChB,cAARA,IAKA2Q,EAAS6B,EAAIxS,MAAU2Q,EAAS8B,EAAIzS,MACpCyS,EAAIzS,GAAON,MAAMuT,QAAQT,EAAIxS,IAAQ,GAAKkT,KAE1CR,EAAqBD,EAAIzS,KAAS0S,EAAqBF,EAAIxS,IAI3DyS,EAAIzS,GAAOwS,EAAIxS,GAIT4S,EAAAjL,KAAK,CAAE6K,IAAKA,EAAIxS,GAAMyS,IAAKA,EAAIzS,KACzC,GACH,EAtBL,KAAO4S,EAAMpT,QAAQqT,GAwBzB,QFsjBA,WAA2B,IAAA3S,EAAUX,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA,GAAAA,UAAA,GAAA,GAE3BH,EAASmT,EAAWrS,EAAQd,QAAUc,EAAQd,OAAS+T,EACvDC,EAAUzS,EAAST,EAAQkT,SAAWlT,EAAQkT,QAAUC,GACxD7S,EAASG,EAAST,EAAQM,SAAW+R,EAAWrS,EAAQM,QACxDN,EAAQM,OACR8S,GACAC,EAAUhB,EAAW/R,GAAU8S,GAAiB9S,EAChDtB,EAAiB+T,EAAQ/S,EAAQhB,iBACnC+B,EAAcf,EAAQhB,iBACtByB,EAAST,EAAQhB,kBACU,IAA3BgB,EAAQhB,eACNgB,EAAQhB,eACRqU,EACAC,EAAWvS,EAAcf,EAAQsT,UACjCtT,EAAQsT,SACRC,GAAgBF,GAChBvU,EAAkBiC,EAAcf,EAAQlB,iBACpCkB,EAAQlB,gBACRyU,GAAgBF,GAEpBzR,EAAgBb,EAAcf,EAAQ4B,eAClC5B,EAAQ4B,cACR2R,GAAgBF,GAEpBG,EAAY/R,EAAOuR,IAAUhT,EAAQwT,UA7FpC,CACHC,MAAO,SAACrB,EAAKjN,GAET,MAAgB,SAATA,GAAmB1E,EAAS2R,GAC7BA,EAAIsB,cACK,UAATvO,GAAoBsL,EAAS2B,IAAQ,gBAAiBA,EAClDA,EAAIuB,SAASD,cACbtB,CACd,EACAwB,MAAO,SAACxB,EAAKjN,GAET,MAAgB,SAATA,GAAmB1E,EAAS2R,GAC7BA,EAAIyB,cACK,UAAT1O,GAAoBsL,EAAS2B,IAAQ,gBAAiBA,EAClDA,EAAIuB,SAASE,cACbzB,CACd,EACA0B,WAAY,SAAC1B,EAAKjN,GAEd,MAAiB,SAATA,GAAmB1E,EAAS2R,GAC9B0B,GAAW1B,GACF,UAATjN,GAAoBsL,EAAS2B,IAAQ,gBAAiBA,EAClD0B,GAAW1B,EAAIuB,UACfvB,CAAA,IAuEZ2B,EAAc/T,EAAQ+T,aAAef,IACrCgB,EAAU3B,EAAWrS,EAAQgU,SAAWhU,EAAQgU,QAAU,KAC1D9T,GAAcC,EAAUH,EAAQE,eAAgB+T,EAASjU,EAAQE,cACjEF,EAAQE,YAERE,GAAeD,EAAUH,EAAQI,gBAAiB6T,EAASjU,EAAQI,eACnEJ,EAAQI,aAER8T,IAAmBlU,EAAQkU,eAC3BnV,IAAgBiB,EAAQjB,YACxBoV,EAAkB9B,EAAWrS,EAAQmU,iBACrCnU,EAAQmU,gBACR,KACAC,EAAYrT,EAAcf,EAAQoU,WAAapU,EAAQoU,UAAY,KACnEvR,GAAkB1C,EAAUH,EAAQ6C,kBACpC7C,EAAQ6C,gBAERwR,IAAoBrU,EAAQqU,gBAC5BC,EAAkBjC,EAAWrS,EAAQsU,iBACrCtU,EAAQsU,gBACRlS,GAOAmS,EAAkBlC,EAAWrS,EAAQuU,iBACrCvU,EAAQuU,gBACRjS,IAAakS,GACbvV,EAAmBoT,EAAWrS,EAAQf,kBACtCe,EAAQf,iBACRuD,IAAeiS,GACfC,EAAkBjE,EAASzQ,EAAQ0U,iBACnC1U,EAAQ0U,qBACRtR,EAEAuR,EAAkB3U,EAClBb,EAAuBsR,EAASkE,EAAgBxV,sBAC5CwV,EAAgBxV,yBACZyV,IAER/S,EAAqB4O,EAASkE,EAAgB9S,oBAC1C8S,EAAgB9S,uBACZ+S,IAERC,EAASpE,EAASkE,EAAgBE,QAAUF,EAAgBE,OAAS,CAAC,EAC5EC,KACA,IAAMjW,EAAU,CACZqU,QAAAA,EACA6B,IAAKD,GACLxU,OAAAA,EACAtB,eAAAA,EACAsU,SAAAA,EACAE,UAAAA,EACAO,YAAAA,EACAC,QAAAA,EACA9T,YAAAA,EACAE,aAAAA,EACA8T,eAAAA,EACAnV,YAAAA,EACAoV,gBAAAA,EACAC,UAAAA,EACAvR,gBAAAA,EACAwR,gBAAAA,EACAC,gBAAAA,EACAC,gBAAAA,EACAtV,iBAAAA,EACAyV,gBAAAA,EACAxV,OAAAA,EACA2V,OAAAA,GAGAhW,EAAQC,gBAAkBA,EAC1BD,EAAQ+C,cAAgBA,EACxB/C,EAAQM,qBAAuBA,EAC/BN,EAAQgD,mBAAqBA,EAUcmT,2BAhqBnD,SAA0BC,EAAM/B,EAASgC,GAGjCxS,IAAAA,GAASyS,KAAK,YAAa,CACvBC,UAAWC,KAAKC,MAChBL,KAAAA,EACA/B,QAAAA,EACAgC,KAAAA,GAEZ,CAwpByBK,CAAA1W,EAASqU,EAAS2B,GAEhC,OAAAhW,CACX,IAyOA,SAA6ByL,EAAKhK,EAAQM,GACtC,IAAM/B,EAAUyL,EAChB,IAAA,IAAWxK,KAAOc,EAAQ,CACtB,IAAMM,EAAK,GAAAC,OAAGb,EAAMa,MAAAA,OAAKrB,GACpBjB,EAAQM,qBAAqBqW,IAAItU,IAG9BrC,EAAAM,qBAAqBsW,OAAOvU,EAAE,CAE9C,IAsIA,SAA2BoJ,EAAKhK,EAAQM,GACpC,IAAM/B,EAAUyL,EAChB,IAAA,IAAWxK,KAAOc,EAAQ,CACtB,IAAMM,EAAK,GAAAC,OAAGb,QAAMa,OAAKrB,GACpBjB,EAAQgD,mBAAmB2T,IAAItU,IAG5BrC,EAAAgD,mBAAmB4T,OAAOvU,EAAE,CAE5C,IA5VA,SAA8BoJ,EAAKhK,EAAQoV,GACvBpL,EACRqL,uBAAyBf,IAC7BtK,EAAArL,iBAAiBqL,EAAKoL,EAAUpV,EACxC,IAtlBA,SAAiCgK,EAAKoL,EAAUpR,GAC5C,IAAMsR,EAAcnV,EAAS6D,GAASA,EAAQ8O,GACxCvU,EAAUyL,EACXzL,EAAQ8W,qBACD9W,EAAA8W,uBAAyBf,KAErC,IAAIiB,EAAQhX,EAAQ8W,mBAAmBnU,IAAIoU,GAC3C,IAAKC,EAAO,CACRA,EAAQ,GAID,IAFH,IAAAC,EAAQ,CAACxR,GAENyO,EAAQ+C,IACHA,EAAAC,GAAmBF,EAAOC,EAAOJ,GAI7C,IAAMM,EAAWjD,EAAQ2C,KAAc3U,EAAc2U,GAC/CA,EACAA,EAAkB,QACdA,EAAkB,QAClB,KAEVI,EAAQrV,EAASuV,GAAY,CAACA,GAAYA,EACtCjD,EAAQ+C,IACWC,GAAAF,EAAOC,GAAO,GAE7BjX,EAAA8W,mBAAmBjU,IAAIkU,EAAaC,EAAK,CAE9C,OAAAA,CACX,SAuhCA,SAAmBhX,GACqF,IAApG,IAAQqV,EAA4FrV,EAA5FqV,eAAgBC,EAA4EtV,EAA5EsV,gBAAiBpV,EAA2DF,EAA3DE,YAAauV,EAA8CzV,EAA9CyV,gBAAiBtV,EAA6BH,EAA7BG,eAAgBsU,EAAazU,EAAbyU,SAAa2C,EAAA5W,UAAAC,OADzEC,EAAMC,IAAAA,MAAAyW,EAAAA,EAAAA,EAAAC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAD,EAAAC,IAAN3W,EAAM2W,EAAA7W,GAAAA,UAAA6W,GAEjC,IAAiDC,EAAAxW,EAA1ByW,GAAAvW,WAAA,EAAsBN,GAAtCO,GAAAA,EAAKqW,EAAAnW,GAAAA,EAAOmW,EACnB,GAAMjW,EAAcC,EAAUH,EAAQE,aAChCF,EAAQE,YACRrB,EAAQqB,YACRE,EAAeD,EAAUH,EAAQI,cACjCJ,EAAQI,aACRvB,EAAQuB,aACRiU,EAAkBlU,EAAUH,EAAQqU,iBACpCrU,EAAQqU,gBACRxV,EAAQwV,gBACRgC,IAAoBrW,EAAQqW,gBAE5BC,EAAkB7V,EAAST,EAAQuW,UAAYpW,EAAUH,EAAQuW,SAChEpW,EAAUH,EAAQuW,SAEbjC,EAA8BxU,EAAZ,WAAM,OAAAA,CAAA,EAD1BE,EAAQuW,QAEZrC,EACMI,EAA8BxU,EAAZ,WAAA,OAAMA,CAAMA,EAChC,KACJ0W,EAAmBtC,GACD,MAAnBoC,IACI7V,EAAS6V,IAAoBjE,EAAWiE,IAC3ChW,EAASC,GAAU1B,EAASmB,GAElCqU,GAyFJ,SAAsBrU,GACd+S,EAAQ/S,EAAQyW,MACRzW,EAAAyW,KAAOzW,EAAQyW,KAAKC,KAAI,SAAAC,GAAA,OAAQlW,EAASkW,GAAQC,EAAWD,GAAQA,CAAI,IAE3ElG,EAASzQ,EAAQ6W,QACtB/D,OAAO9B,KAAKhR,EAAQ6W,OAAOpH,SAAQ,SAAO3P,GAClCW,EAAST,EAAQ6W,MAAM/W,MACvBE,EAAQ6W,MAAM/W,GAAO8W,EAAW5W,EAAQ6W,MAAM/W,IAClD,GAGZ,CApGuBgX,CAAa9W,GAGhC,IAMI+W,EAAApX,EANwC0W,EAEtC,CACEvW,EACAQ,EACAgT,EAAShT,IAAW0S,KAJtBgE,GAAqBnY,EAASiB,EAAKQ,EAAQtB,EAAgBoB,EAAcF,GAD1E+W,GAAAA,EAAAF,EAAalW,GAAAA,EAAckW,EAAApU,GAAAA,EAAOoU,KAYnCnW,EAASqW,EAETC,EAAepX,EACduW,GACC5V,EAASG,IACPuW,GAAavW,IACbwW,GAAkBxW,IAClB4V,IAEe5V,EADfA,EAAS0V,GAKjB,KAAKD,IACE5V,EAASG,IACRuW,GAAavW,IACbwW,GAAkBxW,KACjBH,EAASI,IACd,OAAO9B,EAAckC,GAAenB,EAWxC,IAAIuX,GAAW,EAKTtP,EAAOqP,GAAkBxW,GAEzBA,EADA0W,GAAqBzY,EAASiB,EAAKe,EAAcD,EAAQsW,GAL/C,WACDG,GAAA,CACf,IAMA,GAAIA,EACOzW,OAAAA,EAGX,IACM2W,EAlLV,eAA8BvX,EAAUX,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA+D,GAAA/D,UAAA,GAAA,GAC9BiB,EAASN,EAAQM,OACjBkX,EAxBV,SAAwBxX,GAEpB,IAAM4F,EAAQ6R,EAASzX,EAAQwX,aACzBxX,EAAQwX,aACR,EAEN,OAAOxX,EAAQ6W,QAAUY,EAASzX,EAAQ6W,MAAMa,QAAUD,EAASzX,EAAQ6W,MAAMc,IAC3EF,EAASzX,EAAQ6W,MAAMa,OACnB1X,EAAQ6W,MAAMa,MACdD,EAASzX,EAAQ6W,MAAMc,GACnB3X,EAAQ6W,MAAMc,EACd/R,EACRA,CACV,CAWwBgS,CAAe5X,GAC7B6X,EAAapH,EAASzQ,EAAQ+T,cAChCtT,EAASH,IACT+R,EAAWrS,EAAQ+T,YAAYzT,IAC7BN,EAAQ+T,YAAYzT,GACpBwX,GACAC,EAAgBtH,EAASzQ,EAAQ+T,cACnCtT,EAASH,IACT+R,EAAWrS,EAAQ+T,YAAYzT,IAC7BwX,QACA1U,EACAqL,EAAS,SAAC6E,GACZ,OAAOA,EAASuE,EAAWL,EAAalE,EAAShU,OAAQyY,GAC7D,EACMC,EAAQhY,EAAQyW,MAAQ,GACxBA,EAAO,SAAC7Q,UAAUoS,EAAMpS,IAExBqS,EAASjY,EAAQ6W,OAAS7D,IAChCyE,EAASzX,EAAQwX,cA5BrB,SAAwBA,EAAaU,GAC5BA,EAAMR,QACPQ,EAAMR,MAAQF,GAEbU,EAAMP,IACPO,EAAMP,EAAIH,EAElB,CAqBqCW,CAAeX,EAAaS,GAC7D,IAAMpB,EAAQ,SAAC/W,GAAQ,OAAAmY,EAAOnY,EAAG,EACxB,SAAA6C,EAAQ7C,EAAKsY,GAElB,IAAMrQ,EAAMsK,EAAWrS,EAAQsT,UACzBtT,EAAQsT,SAASxT,IAAOsY,KACxB3H,EAASzQ,EAAQsT,WACbtT,EAAQsT,SAASxT,GAEpB,OAACiI,IACF/H,EAAQqY,OACJrY,EAAQqY,OAAO1V,QAAQ7C,GACvBwY,GACJ,CAEJ,IAAAC,EAAY,SAACnL,GAAS,OAAApN,EAAQwT,UAC9BxT,EAAQwT,UAAUpG,GAClBoL,EAAA,EACAC,EAAY1X,EAAcf,EAAQoU,YAAc/B,EAAWrS,EAAQoU,UAAUqE,WAC7EzY,EAAQoU,UAAUqE,UAClBC,GACAC,EAAc5X,EAAcf,EAAQoU,YACtC/B,EAAWrS,EAAQoU,UAAUuE,aAC3B3Y,EAAQoU,UAAUuE,YAClBC,GACAzT,EAAOpE,EAAcf,EAAQoU,YAAc3T,EAAST,EAAQoU,UAAUjP,MACtEnF,EAAQoU,UAAUjP,KAClB0T,GACAC,EAAS,SAAChZ,GAAiBiZ,IAAAA,IAAAA,EAAA1Z,UAAAC,OAATC,EAASC,IAAAA,MAAAuZ,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAAA,EAAAA,EAAAD,EAAAC,IAATzZ,EAASyZ,KAAA3Z,UAAA2Z,GACvB,IAACC,EAAc1Z,KAAR2Z,EAAQ3Z,EAAA,GACjB4F,EAAO,OACP8B,EAAW,GACK,IAAhB1H,EAAKD,OACDmR,EAASwI,IACThS,EAAWgS,EAAKhS,UAAYA,EAC5B9B,EAAO8T,EAAK9T,MAAQA,GAEf1E,EAASwY,KACdhS,EAAWgS,GAAQhS,GAGF,IAAhB1H,EAAKD,SACNmB,EAASwY,KACThS,EAAWgS,GAAQhS,GAEnBxG,EAASyY,KACT/T,EAAO+T,GAAQ/T,IAGvB,IAAMuG,EAAM/I,EAAQ7C,GAAK,EAAb6C,CAAmB2H,GACzBvC,EAEG,UAAT5C,GAAoB4N,EAAQrH,IAAQzE,EAC9ByE,EAAI,GACJA,EACN,OAAOzE,EAAWsR,EAAUtR,EAAVsR,CAAoBxQ,EAAK5C,GAAQ4C,CACvD,EACMuC,EAAM6O,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EACP,CAAA,EAAA,OAAkC1C,GAClC,QAAoCI,GACpC,SAAsCpI,GACtC,SAAsCqK,GACtC,UAAwCnW,GACxC,OAAkCwC,GAClC,cAAgDwT,GAChD,YAA4CF,GAC5C,SAAsChX,EAAOuR,IAAUgF,EAAOC,IAE5D,OAAA3N,CACX,CAyFuB8O,CA2RvB,SAAkCva,EAASyB,EAAQqC,EAAS3C,GAClD,IAAEwT,EAAsH3U,EAAtH2U,UAAWO,EAA2GlV,EAA3GkV,YAA8BsF,EAA6Exa,EAA9F0V,gBAA+BvV,EAA+DH,EAA/DG,eAAgBoB,EAA+CvB,EAA/CuB,aAAcF,EAAiCrB,EAAjCqB,YAAawU,EAAoB7V,EAApB6V,gBACpG4E,EAAiB,SAACxZ,EAAKsY,GACrB,IAAAhG,EAAMiH,EAAa1W,EAAS7C,GAE5B,GAAO,MAAPsS,IAAgBsC,GAAmB0D,GAAY,CAC/C,IAAWzV,EAC2ChD,EADhCqX,GAAqBtC,GAAmB7V,EAC9DiB,EAAKQ,EAAQtB,EAAgBoB,EAAcF,GAAW,GAChDmZ,GAAAA,EAAAA,EAAa1W,EAAS7C,EAAG,CAEnC,GAAIW,EAAS2R,IAAQ+E,GAAa/E,GAAM,CACpC,IAAIiF,GAAW,EAITtP,EAAMuP,GAAqBzY,EAASiB,EAAKQ,EAAQ8R,EAAKtS,GAH5C,WACDuX,GAAA,CACf,IAEO,OAACA,EAEFkC,GADAxR,CACA,QAEDqP,GAAkBhF,GAChBA,EAIAmH,EAEf,EACMC,EAAa,CACflZ,OAAAA,EACAkT,UAAAA,EACAO,YAAAA,EACAT,SAAUgG,GAEVza,EAAQuV,YACRoF,EAAWpF,UAAYvV,EAAQuV,WAE/BpU,EAAQyW,OACR+C,EAAW/C,KAAOzW,EAAQyW,MAE1BzW,EAAQ6W,QACR2C,EAAW3C,MAAQ7W,EAAQ6W,OAE3BY,EAASzX,EAAQyO,UACjB+K,EAAWhC,YAAcxX,EAAQyO,QAE9B,OAAA+K,CACX,CA3UuBC,CAAyB5a,EAASgC,EAAc8B,EAAS3C,IAEtE0Z,EA0KV,SAAyB7a,EAASkJ,EAAK4R,GAW7B,IAAAD,EAAW3R,EAAI4R,GAkBd,OAAAD,CACX,CAxMqBE,CAAgB/a,EAASkJ,EAAKwP,GAEzC7L,EAAMyI,EACNA,EAAgBuF,EAAU5Z,GAC1B4Z,EAEN,GAA+C1E,0BAA2B,CAEtE,IAAM6E,EAAW,CACbzE,UAAWC,KAAKC,MAChBxV,IAAKW,EAASX,GACRA,EACAsX,GAAkBxW,GACdA,EAAOd,IACP,GACVQ,OAAQO,IAAiBuW,GAAkBxW,GACrCA,EAAON,OACP,IACNM,OAAQH,EAASG,GACXA,EACAwW,GAAkBxW,GACdA,EAAO8C,OACP,GACVf,QAAS+I,GAEJmO,EAAA3E,KAAOzT,EAAO,CAAC,EAAG5C,EAAQgW,OAAQiF,MAAuB,IAClEC,GAAkBF,EAAQ,CAEvB,OAAAnO,CACX;;;;;;AE1gDMsO,EAAA,IAA8B,oBAAXC,eAkCN,SAAC7M,GAA4B,OAAtB/N,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,IAAA/D,UAAY,GAAsC6a,OAAOC,IAAI/M,GAA1B8M,OAAO9M,EAAuB,IAlCrF,IA+CFgN,EAZEC,EAAyB,SAAC/Z,EAAQR,EAAK4D,GAAW,OAAA4W,EAAsB,CAAEC,EAAGja,EAAQka,EAAG1a,EAAK2a,EAAG/W,GAAQ,EACxG4W,EAAwB,SAACI,GAAA,OAASrZ,KAAKC,UAAUoZ,GAClDvU,QAAQ,UAAW,WACnBA,QAAQ,UAAW,WACnBA,QAAQ,UAAW,UAAS,EAC3BsR,SAAW,SAACrF,GAAA,MAAuB,iBAARA,GAAoBuI,SAASvI,EAAG,IAC3DwI,EAAS,SAACxI,SAA8B,kBAAtByI,EAAazI,EAAS,EACxC6B,SAAW,SAAC7B,GAAQ,MAAsB,oBAAtByI,EAAazI,EAAS,IAC1ChR,EAAgB4Y,EAAA,KAAA,SAAC5H,GAAA,OAAQrR,EAAcqR,IAAoC,IAA5BU,OAAO9B,KAAKoB,GAAK9S,MAAW,IAC3EmC,EAASuY,EAAA,IAAAlH,OAAOrR,QAChBqZ,EAAUhI,OAAOE,OACjBA,SAAS,WAAO,OAAS8H,EAATzb,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA,GAAAA,UAAA,GAAA,KAAoB,IAEpC0b,SAAgB,WAElB,OAAQX,IACHA,EACyB,oBAAfY,WACDA,WACgB,oBAATC,KACHA,KACkB,oBAAXhB,QAEe,oBAAXA,OADPA,OAGIjH,IAC9B,IACA,SAAS4D,EAAWsE,GAChB,OAAOA,EACF/U,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACvB,CACA,IAAMgV,EAAiBrI,OAAOsI,UAAUD,eACxC,SAASE,EAAO9K,EAAKzQ,GACV,OAAAqb,EAAeG,KAAK/K,EAAKzQ,EACpC,CASM,IAAAiT,EAAUiH,EAAA,IAAAxa,MAAMuT,SAChBV,EAAa2H,EAAA,KAAA,SAAC5H,GAAQ,MAAe,mBAARA,CAAQ,IACrC3R,EAAWuZ,EAAA,KAAA,SAAC5H,GAAQ,MAAe,iBAARA,CAAQ,IACnCjS,EAAY6Z,EAAA,KAAA,SAAC5H,GAAQ,MAAe,kBAARA,CAAQ,IAGpC3B,EAAWuJ,EAAA,KAAA,SAAC5H,UAAgB,OAARA,GAA+B,WAAfmJ,EAAOnJ,EAAQ,IAEnDoJ,EAAY,SAACpJ,GACR,OAAA3B,EAAS2B,IAAQC,EAAWD,EAAIqJ,OAASpJ,EAAWD,EAAIsJ,MACnE,EACMC,EAAiB7I,OAAOsI,UAAUQ,SAClCf,EAAe,SAAC9a,UAAU4b,EAAeL,KAAKvb,EAAK,EACnDgB,SAAgB,SAACqR,GAAQ,MAAsB,oBAAtByI,EAAazI,EAAS,IASrD,SAASyJ,EAAKrU,GAAuB,IAAhBsU,EAAAzc,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA,GAAAA,UAAA,GAAY,GAC7B,OAAOmI,EAAMuU,QAAO,SAAC3T,EAAKuO,EAAM/Q,GAAW,OAAU,IAAVA,EAAcwC,EAAMuO,EAAOvO,EAAM0T,EAAYnF,CAAO,GAAA,GACnG,CAmCA,SAAS1D,EAAKlL,EAAKvE,GACQ,oBAAZwY,UACCA,QAAA/I,KAAK,aAAelL,GAExBvE,GACQwY,QAAA/I,KAAKzP,EAAIkP,OAG7B,CAkDA,IAAMF,EAAuB,SAACJ,GAAQ,OAAC3B,EAAS2B,IAAQW,EAAQX,EAEhE,EDnMA,SAASxN,EAAeN,EAAOE,EAAKd,GAKzB,MAJK,CAAEY,MAAAA,EAAOE,IAAAA,EAKzB,CAEA,IAAMgC,EAAoB,CAEtBuE,eAAgB,EAChBmE,6BAA8B,EAC9BtB,yCAA0C,EAC1CE,wBAAyB,EACzBI,gCAAiC,EACjCkB,yBAA0B,EAC1B/B,2BAA4B,EAC5BuB,kBAAmB,EACnBD,2BAA4B,EAC5BQ,sBAAuB,GAEvBnH,6BAA8B,GAC9BvB,iCAAkC,GAClCS,4BAA6B,GAC7BP,4BAA6B,IAiCjC,SAAS5B,EAAmBV,EAAMM,GAAK,IAAA3E,EAAAX,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,GAAA/D,UAAA,GAAU,CAAA,EACrC2F,EAA2BhF,EAA3BgF,OAIFiX,GAJ6Bjc,EAAnBsT,SAAmBtT,EAATT,KAIZ,IAAI2c,YAAYC,OADxB9X,KAOC,OALP4X,EAAM5X,KAAOA,EACTM,IACAsX,EAAM/X,SAAWS,GAErBsX,EAAMjX,OAASA,EACRiX,CACX,CAEA,SAAS1Y,EAAe0Y,GACd,MAAAA,CACV,CAMA,IAAM/Q,EAAU,IACVvC,EAAU,KACVC,EAAU,KACVK,EAAUkT,OAAOC,aAAa,MAC9BrT,EAAUoT,OAAOC,aAAa,MAuEpC,IAAM/Q,OAAMjI,EAENyI,EAAoB,IACpBpB,EAAiB,YA2oBvB,IAAMxF,EAAiB,SAEjBmB,EAAgB,wDACtB,SAASC,EAAmBgW,EAAOC,EAAYC,GAC3C,OAAQF,GACJ,WACW,MAAA,KAEX,IAAA,MAEW,MACX,IAAA,QACI,IAAMG,EAAYzW,SAASuW,GAAcC,EAAY,IACjD,OAAAC,GAAa,OAAUA,GAAa,MAC7BL,OAAOM,cAAcD,GAIzB,IAGnB,CA+QA,SAAS5V,EAAgBL,GACjB,GAAe,KAAfA,EAAMpB,KACC,MAAA,MAEX,IAAMiI,GAAQ7G,EAAMxG,OAAS,IAAIoG,QAAQ,SAAW,OAC7C,OAAAiH,EAAK9N,OAAS,GAAK8N,EAAK0E,MAAM,EAAG,GAAK,IAAM1E,CACvD,CAeA,SAASsP,EAAcC,EAAOhN,GAC1B,IAAA,IAAS7O,EAAI,EAAGA,EAAI6b,EAAMrd,OAAQwB,IACjBmP,EAAA0M,EAAM7b,GAAI6O,EAE/B,CACA,SAASM,EAAa7K,EAAMuK,GAExB,OAAQvK,EAAKD,MACT,KAAK,EACauX,EAAAtX,EAAK0C,MAAO6H,GACdA,EAAAG,OAAO,UACnB,MACJ,KAAK,EACa4M,EAAAtX,EAAKoC,MAAOmI,GAC1B,MACJ,OAEiBM,EADE7K,EACKtF,IAAK6P,GACbA,EAAAG,OAAO,UACPH,EAAAG,OAAO,QACnB,MAEJ,KAAK,EACWH,EAAAG,OAAO,eACPH,EAAAG,OAAO,QACnB,MACJ,KAAK,EACWH,EAAAG,OAAO,eACPH,EAAAG,OAAO,SAI/B,CAuBA,SAASN,EAAoB7M,GACrB,GAAyB,IAAzBA,EAAQ6E,MAAMlI,OAAc,CACtB,IAAAqX,EAAOhU,EAAQ6E,MAAM,GACT,IAAdmP,EAAKxR,MAAiD,IAAdwR,EAAKxR,OAC7CxC,EAAQia,OAASjG,EAAK5W,aACf4W,EAAK5W,MAChB,KAEC,CAED,IADA,IAAM8c,EAAS,GACN/b,EAAI,EAAGA,EAAI6B,EAAQ6E,MAAMlI,OAAQwB,IAAK,CACrC,IAAA6V,EAAOhU,EAAQ6E,MAAM1G,GAC3B,GAAoB,IAAd6V,EAAKxR,MAAiD,IAAdwR,EAAKxR,KAC/C,MAEA,GAAc,MAAdwR,EAAK5W,MACL,MAEG8c,EAAApV,KAAKkP,EAAK5W,MAAK,CAE1B,GAAI8c,EAAOvd,SAAWqD,EAAQ6E,MAAMlI,OAAQ,CAChCqD,EAAAia,OAASf,EAAKgB,GACtB,IAAA,IAAS/b,EAAI,EAAGA,EAAI6B,EAAQ6E,MAAMlI,OAAQwB,IAAK,CACrC,IAAA6V,EAAOhU,EAAQ6E,MAAM1G,GACT,IAAd6V,EAAKxR,MAAiD,IAAdwR,EAAKxR,aACtCwR,EAAK5W,KAChB,CACJ,CACJ,CAER,CAIA,SAAS+D,EAAOsB,GAEZ,OADAA,EAAK0X,EAAI1X,EAAKD,KACNC,EAAKD,MACT,KAAK,EACD,IAAM4X,EAAW3X,EACjBtB,EAAOiZ,EAASzN,MAChByN,EAASlL,EAAIkL,EAASzN,YACfyN,EAASzN,KAChB,MAEJ,KAA+B,EAG3B,IAFA,IAAMb,EAASrJ,EACT0C,EAAQ2G,EAAO3G,MACZhH,EAAI,EAAGA,EAAIgH,EAAMxI,OAAQwB,IACvBgD,EAAAgE,EAAMhH,IAEjB2N,EAAOiB,EAAI5H,SACJ2G,EAAO3G,MACd,MAEJ,KAAgC,EAG5B,IAFA,IAAMnF,EAAUyC,EACVoC,EAAQ7E,EAAQ6E,MACb1G,EAAI,EAAGA,EAAI0G,EAAMlI,OAAQwB,IACvBgD,EAAA0D,EAAM1G,IAEjB6B,EAAQ7B,EAAI0G,SACL7E,EAAQ6E,MACX7E,EAAQia,SACRja,EAAQ8X,EAAI9X,EAAQia,cACbja,EAAQia,QAEnB,MAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,OACI,IAAMI,EAAY5X,EACd4X,EAAUjd,QACVid,EAAUC,EAAID,EAAUjd,aACjBid,EAAUjd,OAErB,MAEJ,OACI,IAAM+Y,EAAS1T,EACftB,EAAOgV,EAAOhZ,KACdgZ,EAAO0B,EAAI1B,EAAOhZ,WACXgZ,EAAOhZ,IACVgZ,EAAO7R,WACPnD,EAAOgV,EAAO7R,UACd6R,EAAOoE,EAAIpE,EAAO7R,gBACX6R,EAAO7R,UAElB,MAEJ,KAA6B,EACzB,IAAMwP,EAAOrR,EACbqR,EAAK3V,EAAI2V,EAAK7Q,aACP6Q,EAAK7Q,MACZ,MAEJ,KAA8B,EAC1B,IAAMiR,EAAQzR,EACdyR,EAAM2D,EAAI3D,EAAM/W,WACT+W,EAAM/W,WAWdsF,EAAKD,IAChB,CA4GA,SAASgY,EAAaC,EAAWhY,GACvB,IAAE0K,EAAWsN,EAAXtN,OACR,OAAQ1K,EAAKD,MACT,KAAK,GAXb,SAA0BiY,EAAWhY,GAC7BA,EAAKkK,KACQ6N,EAAAC,EAAWhY,EAAKkK,MAG7B8N,EAAU3V,KAAK,OAEvB,CAKY4V,CAAiBD,EAAWhY,GAC5B,MACJ,KAAK,GA/Bb,SAA4BgY,EAAWhY,GAC7B,IAAE0K,EAAuBsN,EAAvBtN,OAAQwN,EAAeF,EAAfE,WACZ,GAAAlY,EAAK0C,MAAMxI,OAAS,EAAG,CACvB8d,EAAU3V,eAAQqI,EAAO,UAAoC,OACnDsN,EAAAG,OAAOD,KAEjB,IADM,IAAAhe,EAAS8F,EAAK0C,MAAMxI,OACjBwB,EAAI,EAAGA,EAAIxB,IAChB6d,EAAaC,EAAWhY,EAAK0C,MAAMhH,IAC/BA,IAAMxB,EAAS,GAFKwB,IAKxBsc,EAAU3V,KAAK,MAET2V,EAAAI,SAASF,KACnBF,EAAU3V,KAAS,KAAA,CAE3B,CAgBYgW,CAAmBL,EAAWhY,GAC9B,MACJ,KAAK,GAjDb,SAA6BgY,EAAWhY,GAC9B,IAAE0K,EAAuBsN,EAAvBtN,OAAQwN,EAAeF,EAAfE,WAChBF,EAAU3V,eAAQqI,EAAO,aAA0C,OACzDsN,EAAAG,OAAOD,KAEjB,IADM,IAAAhe,EAAS8F,EAAKoC,MAAMlI,OACjBwB,EAAI,EAAGA,EAAIxB,IAChB6d,EAAaC,EAAWhY,EAAKoC,MAAM1G,IAC/BA,IAAMxB,EAAS,GAFKwB,IAKxBsc,EAAU3V,KAAK,MAET2V,EAAAI,SAASF,KACnBF,EAAU3V,KAAK,KACnB,CAoCYiW,CAAoBN,EAAWhY,GAC/B,MACJ,KAAK,GAlEb,SAA4BgY,EAAWhY,GAC7B,IAAE0K,EAAWsN,EAAXtN,OACRsN,EAAU3V,eAAQqI,EAAO,UAAuC,MACnDqN,EAAAC,EAAWhY,EAAKtF,KACzBsF,EAAK6B,UACLmW,EAAU3V,KAAS,MACN0V,EAAAC,EAAWhY,EAAK6B,UAC7BmW,EAAU3V,KAAc,YAGxB2V,EAAU3V,2BAEd2V,EAAU3V,KAAQ,IACtB,CAsDYkW,CAAmBP,EAAWhY,GAC9B,MACJ,KAAK,EAGL,KAAK,EASL,KAAK,EAGL,KAAK,EACDgY,EAAU3V,KAAKpG,KAAKC,UAAU8D,EAAKrF,OAAQqF,GAC3C,MAXJ,KAAK,EACDgY,EAAU3V,eAAQqI,EAAO,eAA8C3O,KAAAA,OAAI2O,EAAO,QAAgC,KAAA3O,OAAIiE,EAAKQ,MAAK,MAAMR,GACtI,MACJ,KAAK,EACDgY,EAAU3V,eAAQqI,EAAO,eAA8C,KAAA3O,OAAI2O,EAAO,SAAkC3O,KAAAA,OAAIE,KAAKC,UAAU8D,EAAKtF,KAAI,MAAMsF,GAgBlK,CAEA,IAAMgL,EAAW,SAACnM,GAAsB,IAAjBjE,EAAAX,UAAAC,OAAAD,QAAA+D,IAAA/D,UAAA+D,GAAA/D,UAAU,GAAA,GACvB4R,EAAOxQ,EAAST,EAAQiR,MAAQjR,EAAQiR,KAAO,SAC/C2M,EAAWnd,EAAST,EAAQ4d,UAC5B5d,EAAQ4d,SACR,eACc5d,EAAQ6d,UAEtB,IAAAC,EAAyC,MAAzB9d,EAAQ8d,cACxB9d,EAAQ8d,cACC,UAAT7M,EACI,IACA,KACJqM,EAAatd,EAAQsd,WAAatd,EAAQsd,WAAsB,UAATrM,EACvDrB,EAAU3L,EAAI2L,SAAW,GACzBwN,EA/JV,SAA6BnZ,EAAKjE,GAC9B,IAAmB4d,EAAqD5d,EAArD4d,SAAUE,EAA2C9d,EAA3C8d,cAA2BC,EAAgB/d,EAA5Bsd,WACtCpZ,GAAgC,IAArBlE,EAAQkE,SACnB+F,EAAW,CACb2T,SAAAA,EACAvZ,KAAM,GACNK,OAAQ,EACRkF,KAAM,EACNrF,OAAQ,EACRmS,SAAKtT,EACL0a,cAAAA,EACAR,WAAYS,EACZC,YAAa,GAMR,SAAAvW,EAAKpD,EAAMe,GAChB6E,EAAS5F,MAAQA,CAAA,CAEZ,SAAA4Z,EAAStG,GAAG,IACXuG,EADW7e,UAAAC,OAAA,QAAA8D,IAAA/D,UAAA,KAAAA,UAAA,GACsC,GAAhBye,EACvCrW,EAAKsW,EAAcG,EAAiB,KAAKC,OAAOxG,GAAKuG,EAAc,CAehE,OAxBHha,GAAYD,EAAIU,MACPsF,EAAAvG,OAASO,EAAIU,IAAIjB,QAuBvB,CACH7E,QAtBY,kBAAMoL,CACb,EAsBLxC,KAAAA,EACA8V,OAhBK,eAAOa,0DAAc,GACpBC,IAAUpU,EAAS+T,YACzBI,GAAeH,EAASI,EAAK,EAe7Bb,SAbK,WAAS,IAAAY,0DAAc,GACtBC,IAAUpU,EAAS+T,YACzBI,GAAeH,EAASI,EAAK,EAY7BC,QAVJ,WACIL,EAAShU,EAAS+T,YAAW,EAU7BlO,OARW,SAAChQ,GAAQqB,MAAAA,IAAAA,OAAIrB,EAAG,EAS3Bwd,WARe,WAAb,OAAmBrT,EAASqT,UAC3B,EASX,CAgHsBiB,CAAoBta,EAAK,CAEvC2Z,SAAAA,EAEAE,cAAAA,EACAR,WAAAA,IAEJF,EAAU3V,KAAc,WAATwJ,EAA6D,2BAAA,cAC5EmM,EAAUG,OAAOD,GACb1N,EAAQtQ,OAAS,IACjB8d,EAAU3V,KAAK,WAAAtG,OAAW0a,EAAKjM,EAAQ8G,KAAI,SAAK+D,GAAA,MAAA,GAAAtZ,OAAGsZ,EAAC,OAAAtZ,OAAMsZ,EAAC,IAAK,MAAK,aACrE2C,EAAUkB,WAEdlB,EAAU3V,KAAc,WACxB0V,EAAaC,EAAWnZ,GACxBmZ,EAAUI,SAASF,GACnBF,EAAU3V,iBACHxD,EAAI2L,QACX,IAAA4O,EAAsBpB,EAAUve,UAAxBwF,EAAAma,EAAAna,KAAMqS,EAAI8H,EAAJ9H,IACP,MAAA,CACHzS,IAAAA,EACAI,KAAAA,EACAqS,IAAKA,EAAMA,EAAI+H,cAAWrb,EAElC,ED77CA,SAASxC,GAAOqD,GAEL,OADK,SAACqG,GAAQ,OAGzB,SAAqBA,EAAKrG,GAChB,IAAAqL,GAkBWlK,EAlBQnB,EAmBlBya,GAAatZ,EAAMuZ,KAD9B,IAAqBvZ,EAjBjB,GAAY,MAARkK,EACM,MAAAsP,GAAwB,GAGlC,GAAa,IADAC,GAAYvP,GACc,CACnC,IACMxH,EAed,SAAsB1C,GAClB,OAAOsZ,GAAatZ,EAAM0Z,GAAa,GAC3C,CAjBsBC,CADCzP,GAEf,OAAOhF,EAAImE,OAAO3G,EAAMiU,QAAO,SAACzI,EAAU5D,GAAM,MAAA,GAAAvO,OAAA6d,EACzC1L,GAAA,CACH2L,GAAmB3U,EAAKoF,OACzB,IAAG,CAGC,OAAAuP,GAAmB3U,EAAKgF,EAEvC,CApByB4P,CAAY5U,EAAKrG,EAAG,CAE7C,CAmBA,IAAM0a,GAAa,CAAC,IAAK,QAIzB,IAAMG,GAAc,CAAC,IAAK,SAI1B,SAASG,GAAmB3U,EAAKlF,GACvB,IAAA+Z,EAYV,SAAuB/Z,GACZ,OAAAsZ,GAAatZ,EAAMga,GAC9B,CAdoBC,CAAcja,GAC9B,GAAe,MAAX+Z,EACO,MAAa,SAAb7U,EAAInF,KACLga,EACA7U,EAAImO,UAAU,CAAC0G,IAGrB,IAAM7L,EASd,SAAsBlO,GAClB,OAAOsZ,GAAatZ,EAAMka,GAAa,GAC3C,CAXyBC,CAAana,GAAM2W,QAAO,SAACyD,EAAK9P,GAAAvO,MAAAA,GAAAA,OAAA6d,EAAUQ,GAAKC,CAAAA,GAAkBnV,EAAKoF,IAAE,GAAG,IACrF,OAAApF,EAAImO,UAAUnF,EAE7B,CACA,IAAM8L,GAAe,CAAC,IAAK,UAI3B,IAAME,GAAc,CAAC,IAAK,SAI1B,SAASG,GAAkBnV,EAAKlF,GACtB,IAAAD,EAAO0Z,GAAYzZ,GACzB,OAAQD,GACJ,KAAK,EAGL,KAAK,EA6BL,KAAK,EAGL,KAAuC,EAC5B,OAAAua,GAAeta,EAAMD,GA9BhC,KAA8B,EAC1B,IAAM0R,EAAQzR,EACd,GAAIiW,EAAOxE,EAAO,MAAQA,EAAM2D,EAC5B,OAAOlQ,EAAIqO,YAAYrO,EAAIuM,MAAMA,EAAM2D,IAE3C,GAAIa,EAAOxE,EAAO,QAAUA,EAAM/W,IAC9B,OAAOwK,EAAIqO,YAAYrO,EAAIuM,MAAMA,EAAM/W,MAE3C,MAAM8e,GAAwBzZ,GAElC,KAAK,EACD,IAAMsR,EAAOrR,EACb,GAAIiW,EAAO5E,EAAM,MAAQgB,EAAShB,EAAK3V,GACnC,OAAOwJ,EAAIqO,YAAYrO,EAAImM,KAAKA,EAAK3V,IAEzC,GAAIua,EAAO5E,EAAM,UAAYgB,EAAShB,EAAK7Q,OACvC,OAAO0E,EAAIqO,YAAYrO,EAAImM,KAAKA,EAAK7Q,QAEzC,MAAMgZ,GAAwBzZ,GAElC,OACI,IAAM2T,EAAS1T,EACT6B,EA6BlB,SAA+B7B,GACpB,OAAAsZ,GAAatZ,EAAMua,GAC9B,CA/B6BC,CAAsB9G,GACjChZ,EAgClB,SAA0BsF,GAChB,IAAAya,EAAWnB,GAAatZ,EAAM0a,IACpC,GAAID,EACO,OAAAA,EAGD,MAAAjB,GAAwB,EAEtC,CAxCwBmB,CAAiBjH,GAC7B,OAAOxO,EAAIwO,OAAO2G,GAAkBnV,EAAKxK,GAAMmH,EAAWwY,GAAkBnV,EAAKrD,QAAY7D,EAAWkH,EAAInF,MAQhH,QACI,MAAM,IAAIsN,MAAAtR,0CAAAA,OAAgDgE,IAEtE,CACA,IAAM6a,GAAa,CAAC,IAAK,QACzB,SAASnB,GAAYzZ,GACV,OAAAsZ,GAAatZ,EAAM4a,GAC9B,CACA,IAAMC,GAAc,CAAC,IAAK,SAC1B,SAASP,GAAeta,EAAMD,GACpB,IAAA0a,EAAWnB,GAAatZ,EAAM6a,IACpC,GAAIJ,EACO,OAAAA,EAGP,MAAMjB,GAAwBzZ,EAEtC,CACA,IAAMwa,GAAiB,CAAC,IAAK,YAI7B,IAAMG,GAAY,CAAC,IAAK,OAUxB,SAASpB,GAAatZ,EAAM8S,EAAOgI,GAC/B,IAAA,IAASpf,EAAI,EAAGA,EAAIoX,EAAM5Y,OAAQwB,IAAK,CAC7B,IAAAqf,EAAOjI,EAAMpX,GAEnB,GAAIua,EAAOjW,EAAM+a,IAAuB,MAAd/a,EAAK+a,GAE3B,OAAO/a,EAAK+a,EAChB,CAEG,OAAAD,CACX,CACA,SAAStB,GAAwBzZ,GAC7B,OAAW,IAAAsN,MAAA,wBAAAtR,OAA8BgE,GAC7C,CAQA,IAAMnC,GAAoB,SAACL,GAAY,OAAAA,CACvC,EAAIO,GAAe8P,IAInB,SAASmE,GAAa/E,GAClB,OAAQ3B,EAAS2B,IACQ,IAArByM,GAAYzM,KACXiJ,EAAOjJ,EAAK,MAAQiJ,EAAOjJ,EAAK,QACzC,CA+DA,IAAI1P,GAAW,KAiBf,IAAMqX,MAC4B,sBAClC,SAASqG,GAAmB3d,GACxB,OAAQoX,SAAAA,GAAa,OAAAnX,IAAYA,GAASyS,KAAK1S,EAAMoX,EACzD,CAAA,CAEA,IA+BIwG,GA/BEC,GAAiB,CACnBC,iBCvNqC,GDwNrCC,sBAAuB,GACvBC,0BAA2B,GAE3BC,iCAAkC,GAClCC,kCAAmC,GACnCC,wBAAyB,IAES5G,EAAA,IAAA,IACtC,SAAS6G,GAAgBxc,GACd,OAAAU,EAAmBV,EAAM,UAA8EjB,EAClH,CAcA,SAAS7C,GAAU1B,EAASmB,GACjB,OAAkB,MAAlBA,EAAQM,OACTwgB,GAAc9gB,EAAQM,QACtBwgB,GAAcjiB,EAAQyB,OAChC,CAGA,SAASwgB,GAAcxgB,GACf,GAAAG,EAASH,GACF,OAAAA,EAGH,GAAA+R,EAAW/R,GAAS,CAChB,GAAAA,EAAOygB,cAAkC,MAAlBV,GAChB,OAAAA,GAEF,GAA4B,aAA5B/f,EAAO0gB,YAAY5T,KAAqB,CAC7C,IAAM6T,EAAU3gB,IACZ,GAAAkb,EAAUyF,GACJ,MAAAJ,GAAgBP,GAAeI,kCAEzC,OAAQL,GAAiBY,CAAA,CAGnB,MAAAJ,GAAgBP,GAAeK,kCACzC,CAGM,MAAAE,GAAgBP,GAAeM,wBAGjD,CAiBA,SAASnM,GAAmBnK,EAAKoL,EAAUpR,GAEhC,OAAA0a,EAAI,IAAInP,IAAI,CACXvL,GAAAnD,OAAA6d,EACIjM,EAAQ2C,GACNA,EACAjF,EAASiF,GACL5C,OAAO9B,KAAK0E,GACZjV,EAASiV,GACL,CAACA,GACD,CAACpR,MAE3B,CAgDA,SAASyR,GAAmBF,EAAOC,EAAOoL,GAE7B,IADT,IAAIC,GAAS,EACJrgB,EAAI,EAAGA,EAAIgV,EAAMxW,QAAUa,EAAUghB,GAASrgB,IAAK,CAClD,IAAAR,EAASwV,EAAMhV,GACjBL,EAASH,KACT6gB,EAASC,GAAoBvL,EAAOC,EAAMhV,GAAIogB,GAClD,CAEG,OAAAC,CACX,CACA,SAASC,GAAoBvL,EAAOvV,EAAQ4gB,GACpC,IAAAC,EACEE,EAAS/gB,EAAOghB,MAAM,KACzB,EAAA,CAEUH,EAAAI,GAAkB1L,EADZwL,EAAOxF,KAAK,KACeqF,GACnCG,EAAAG,UAAW,EAAC,OACdH,EAAO/hB,SAAqB,IAAX6hB,GACnB,OAAAA,CACX,CACA,SAASI,GAAkB1L,EAAOlM,EAAQuX,GACtC,IAAIC,GAAS,EACb,IAAKtL,EAAM4L,SAAS9X,KACPwX,GAAA,EACLxX,GAAQ,CACRwX,EAAuC,MAA9BxX,EAAOA,EAAOrK,OAAS,GAChC,IAAMgB,EAASqJ,EAAOxD,QAAQ,KAAM,IACpC0P,EAAMpO,KAAKnH,IACNyS,EAAQmO,IAAWngB,EAAcmgB,KAClCA,EAAO5gB,KAGP6gB,EAASD,EAAO5gB,GACpB,CAGD,OAAA6gB,CACX,CAEA,IAAMlP,GAAmB,GACzBA,GAAiB,GAA8BkH,EAAAA,EAAAA,EAAAA,EAAA,CAAA,EAC1C,IAAoC,CAAC,IACrC,IAAgC,CAAC,EAAyB,IAC1D,IAAuC,CAAC,IACxC,IAAsC,CAAC,IAE5ClH,GAAiB,GAA0BkH,EAAAA,EAAAA,EAAAA,EACtC,CAAA,EAAA,IAAoC,CAAC,IACrC,IAA8B,CAAC,IAC/B,IAAuC,CAAC,IACxC,IAAsC,CAAC,IAE5ClH,GAAiB,GAA+BkH,EAAAA,EAAAA,EAAA,CAAA,EAC3C,IAAoC,CAAC,IACrC,IAAgC,CAAC,EAAyB,IAC1D,IAA+B,CAAC,EAAyB,IAE9DlH,GAAiB,GAA2BkH,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAA,CAAA,EACvC,IAAgC,CAAC,EAAyB,IAC1D,IAA+B,CAAC,EAAyB,IACzD,IAAoC,CAAC,EAAwB,IAC7D,IAA8B,CAAC,EAA6B,IAC5D,IAAuC,CAAC,EAA4B,IACpE,IAAsC,CAAC,EAA2B,IAEvElH,GAAiB,GAA8BkH,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAC1C,CAAA,EAAA,IAAuC,CAAC,EAAgC,IACxE,IAAwC,CAAC,EAAgC,IACzE,IAAuC,CACpC,EACA,IAEH,IAAwC,CAAC,EAAwB,IACjE,IAAsC,GACtC,IAA+B,CAAC,EAA4B,IAEjElH,GAAiB,GAAkCkH,EAAAA,EAAAA,EAC9C,CAAA,EAAA,IAAuC,CAAC,EAA4B,IACpE,IAAsC,GACtC,IAA+B,CAAC,EAAgC,IAErElH,GAAiB,GAAkCkH,EAAAA,EAAAA,EAC9C,CAAA,EAAA,IAAwC,CAAC,EAA4B,IACrE,IAAsC,GACtC,IAA+B,CAAC,EAAgC,IAKrE,IAAMzH,GAAiB,kDAevB,SAASM,GAAgBlH,GACjB,GAAAA,QACO,MAAA,IAGX,OADaA,EAAGS,WAAW,IAEvB,QACA,QACA,QACA,QACA,KAAK,GACM,OAAAT,EACX,QACA,QACA,QACW,MAAA,IACX,OACA,QACA,QACA,SACA,WACA,UACA,KAAK,KACM,MAAA,IAER,MAAA,GACX,CAgHA,IAAM6F,OAAYiE,IAclB,SAASJ,GAAoBjE,EAAKC,GAC9B,OAAOC,EAASF,GAAOA,EAAIC,GAAQ,IACvC,CA8EA,IAiCIpO,GAIAE,GAWAE,GAhDE2Q,GAAU,SACVlS,GAAe+Y,EAAA,KAAA,GACf5G,GAAiB4G,EAAA,IAAA,SAEjBlG,IADwBkG,EAAA,IAAA,IACX,SAAC5R,GAAQjH,MAAAA,GAAAA,OAAGiH,EAAIe,OAAO,GAAGuY,qBAAmBvgB,OAAGiH,EAAIuZ,OAAO,GAAE,GAwDhF,IAAIC,GAAkB,KAMhB9H,IAJAE,EAAA,KAAoB,SAAC9E,GACL0M,GAAA1M,CACtB,IAE0B,WAAM,OAAA0M,EAAA,GAC5BC,GAAmB,KAMnB/M,IALEkF,EAAA,KAAqB,SAACnb,GACLgjB,GAAAhjB,CACvB,WAC2B,WAAM,OAAAgjB,EAAA,IAEtB,GAsHX,IAAMtO,GAAkB,SAACjT,GAAY6Y,OAAAA,EAAG7Y,CAAAA,EAAAA,EAAS0S,IAAS,EAU1D,SAAShS,GAAcnC,EAASiB,EAAKQ,EAAQJ,EAAaiF,GAChD,IAAE6O,EAAoBnV,EAApBmV,QAAoBnV,EAAXK,OAajB,GAAgB,OAAZ8U,EAAkB,CAClB,IAAMtI,EAAMsI,EAAQnV,EAASyB,EAAQR,EAAKqF,GACnC,OAAA1E,EAASiL,GAAOA,EAAM5L,CAAA,CAMtB,OAAAA,CAEf,CAcA,SAASgiB,GAAmBjhB,EAAcL,GAChC,IAPkBF,EAAQyhB,EAO1Bnc,EAAQpF,EAAQwhB,QAAQnhB,GAC9B,IAAc,IAAV+E,EACO,OAAA,EAEX,IAAA,IAAS9E,EAAI8E,EAAQ,EAAG9E,EAAIN,EAAQlB,OAAQwB,IACxC,GAZoBR,EAYGO,EAZKkhB,EAYSvhB,EAAQM,GAX7CR,IAAWyhB,GAERzhB,EAAOghB,MAAM,KAAK,KAAOS,EAAcT,MAAM,KAAK,GAU1C,OAAA,EAGR,OAAA,CACX,CAqFA,IAAMW,GAA+BjI,EAAA,IAAA,CACjC,gBACA,UACA,MACA,OACA,QACA,MACA,OACA,SACA,SACA,eACA,gBACA,SACA,WACA,YACA,YACA,WACA,YACA,kBACA,YACA,2BAGJ,SAASpa,KAA2BsiB,IAAAA,IAAAA,EAAA7iB,UAAAC,OAANC,EAAM,IAAAC,MAAA0iB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN5iB,EAAM4iB,GAAA9iB,UAAA8iB,GAChC,IAGIpiB,EAHGkZ,EAA0B1Z,EAAA,GAApB2Z,EAAoB3Z,EAAA,GAAd6iB,EAAc7iB,EAAA,GAAR8iB,EAAQ9iB,EAAA,GAC3BS,EAAUgT,IACZ/S,EAAY+S,IAEZ,GAAAvS,EAASwY,GAAO,CAGV,IAAAqJ,EAAUrJ,EAAKoD,MAAM,kCAC3B,IAAKiG,EACK,MAAAzB,GAAgBP,GAAeG,2BAIzC,IAAM8B,EAAWD,EAAQ,GACnBA,EAAQ,GAAG/Q,OAAOiR,WAAW,eACtBF,EAAQ,GAAG/Q,QAAMpQ,OAAGmhB,EAAQ,GAAG/Q,QAAMpQ,GAAAA,OACrCmhB,EAAQ,GAAG/Q,OAAMpQ,KAAAA,OAAImhB,EAAQ,GAAG/Q,QACvC+Q,EAAQ,GAAG/Q,OACTxR,EAAA,IAAIsV,KAAKkN,GACb,IAEAxiB,EAAM0iB,aAAY,CAEhB,MAAAC,GACI,MAAA7B,GAAgBP,GAAeG,0BAAyB,CAClE,MAEK7F,GAAAA,EAAO3B,GAAO,CACnB,GAAIzH,MAAMyH,EAAK0J,WACL,MAAA9B,GAAgBP,GAAeE,uBAEjCzgB,EAAAkZ,CAAA,KACZ,KACSxB,EAASwB,GAIR,MAAA4H,GAAgBP,GAAeC,kBAH7BxgB,EAAAkZ,CAG6C,CAwBzD,OAtBIxY,EAASyY,GACTlZ,EAAQF,IAAMoZ,EAETnY,EAAcmY,IACnBpG,OAAO9B,KAAKkI,GAAMzJ,SAAQ,SAAO3P,GACzBmiB,GAA6BR,SAAS3hB,GAC5BG,EAAAH,GAAOoZ,EAAKpZ,GAGdE,EAAAF,GAAOoZ,EAAKpZ,EACxB,IAGJW,EAAS2hB,GACTpiB,EAAQM,OAAS8hB,EAEZrhB,EAAcqhB,KACPniB,EAAAmiB,GAEZrhB,EAAcshB,KACFpiB,EAAAoiB,GAET,CAACriB,EAAQF,KAAO,GAAIC,EAAOC,EAASC,EAC/C,CAyFA,IAAM2iB,GAA6B5I,EAAA,IAAA,CAC/B,gBACA,QACA,WACA,kBACA,eACA,cACA,uBACA,wBACA,wBACA,2BACA,2BACA,iBACA,WACA,cACA,OACA,cACA,eACA,mBACA,oBACA,wBAGJ,SAAS/X,KAAyB,IAAA,IAAA4gB,EAAAxjB,UAAAC,OAANC,EAAM,IAAAC,MAAAqjB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvjB,EAAMujB,GAAAzjB,UAAAyjB,GAC9B,IAAO7J,EAA0B1Z,KAApB2Z,EAAoB3Z,EAAA,GAAd6iB,EAAc7iB,EAAR8iB,GAAAA,EAAQ9iB,EAAA,GAC3BS,EAAUgT,IACZ/S,EAAY+S,IACZ,IAACyE,EAASwB,GACJ,MAAA4H,GAAgBP,GAAeC,kBAEzC,IAAMxgB,EAAQkZ,EAuBd,OAtBIxY,EAASyY,GACTlZ,EAAQF,IAAMoZ,EAETnY,EAAcmY,IACnBpG,OAAO9B,KAAKkI,GAAMzJ,SAAQ,SAAO3P,GACzB8iB,GAA2BnB,SAAS3hB,GAC1BG,EAAAH,GAAOoZ,EAAKpZ,GAGdE,EAAAF,GAAOoZ,EAAKpZ,EACxB,IAGJW,EAAS2hB,GACTpiB,EAAQM,OAAS8hB,EAEZrhB,EAAcqhB,KACPniB,EAAAmiB,GAEZrhB,EAAcshB,KACFpiB,EAAAoiB,GAET,CAACriB,EAAQF,KAAO,GAAIC,EAAOC,EAASC,EAC/C,CAaA,IAAMuY,GAAmB,SAACpQ,UAAQA,GAC5BkQ,GAAkB,SAAChO,SAAQ,EAAA,EAC3BuO,GAA4B,OAC5BH,GAAoB,SAACmE,GAAW,OAAkB,IAAlBA,EAAOvd,OAAe,GAAKuc,EAAKgB,EAAM,EACtEjE,GEvrCkB,SAACxG,GACrB,OAAc,MAAPA,EACD,GACAW,EAAQX,IAASrR,EAAcqR,IAAQA,EAAIwJ,WAAaD,EACpDta,KAAKC,UAAU8Q,EAAK,KAAM,GAC1B+J,OAAO/J,EACrB,EFkrCA,SAAS0F,GAAciL,EAAQC,GAE3B,OADSD,EAAAE,KAAKC,IAAIH,GACI,IAAlBC,EAEOD,EACDA,EAAS,EACL,EACA,EACJ,EAEHA,EAASE,KAAKE,IAAIJ,EAAQ,GAAK,CAC1C,CAkHA,IAAMxJ,GAAwB,WAAM,MAAA,EACpC,EAAMnC,GAAoB4C,EAAA,KAAA,SAAC5H,GAAQ,OAAAC,EAAWD,EAAG,IAiIjD,SAAS4E,GAAqBnY,EAASiB,EAAKQ,EAAQtB,EAAgBoB,EAAcF,GAS9E,IARA,IAGIW,EAHIyS,EAAsEzU,EAAtEyU,SAAmC+F,GAAmCxa,EAA5DK,OAA4DL,EAApD0V,iBACpB/T,GAAUvB,EAD8DJ,EAArBI,kBACxBJ,EAASG,EAAgBsB,GACtDqC,EAAUqQ,IAEVpS,EAAS,KAIJE,EAAI,EAAGA,EAAIN,EAAQlB,SAoCsB,QAAzCsB,EAASyY,EAXV1W,EAAA2Q,EAxBWzS,EAAKL,EAAQM,KAwBEkS,IAWMlT,MAEhCc,EAAS+B,EAAQ7C,MAoBjBW,EAASG,IAAWuW,GAAavW,IAAWwW,GAAkBxW,KA1DlCE,IA6DhC,IAAKghB,GAAmBjhB,EAAcL,GAAU,CAC5C,IAAM4iB,EAAapiB,GAAcnC,EACjCiB,EAAKe,EAAcX,EAhEd,aAiEDkjB,IAAetjB,IACfc,EAASwiB,EACb,CAID,MAAA,CAACxiB,EAAQC,EAAc8B,EAClC,CACA,SAAS2U,GAAqBzY,EAASiB,EAAKe,EAAcD,EAAQsW,EAAc5T,GACtE,IAAEgR,EAAqCzV,EAArCyV,gBAAiBzR,EAAoBhE,EAApBgE,gBACrB,GAAAuU,GAAkBxW,GAAS,CAC3B,IAAMmH,EAAMnH,EAGLmH,OAFPA,EAAIzH,OAASyH,EAAIzH,QAAUO,EAC3BkH,EAAIjI,IAAMiI,EAAIjI,KAAOA,EACdiI,CAAA,CAEX,GAAuB,MAAnBuM,EAAyB,CACzB,IAAMvM,EAAO,WAAMnH,OAAAA,CAAAA,EAGZmH,OAFPA,EAAIzH,OAASO,EACbkH,EAAIjI,IAAMA,EACHiI,CAAA,CAYL,IAAAA,EAAMuM,EAAgB1T,EA6FhC,SAA2B/B,EAASyB,EAAQR,EAAK4D,EAAQb,EAAiBS,GAC/D,MAAA,CACHhD,OAAAA,EACAR,IAAAA,EACA+C,gBAAAA,EACAS,QAAS,SAACE,GAqBI,MApBVF,GAAWA,EAAQE,GAoBTA,CAEd,EACAT,WAAY,SAACW,GAAAA,OAAW2W,EAAuB/Z,EAAQR,EAAK4D,IAEpE,CA5HwC2f,CAAkBxkB,EAASgC,EAAcqW,EAActW,EAAQiC,EAAiBS,IAqB7G,OAHPyE,EAAIzH,OAASO,EACbkH,EAAIjI,IAAMA,EACViI,EAAIrE,OAAS9C,EACNmH,CACX,CAiCA,SAASqO,aAA4BkN,EAAAjkB,UAAAC,OAANC,EAAMC,IAAAA,MAAA8jB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANhkB,EAAMgkB,GAAAlkB,UAAAkkB,GACjC,IAAOtK,EAAoB1Z,KAAd2Z,EAAc3Z,EAAA,GAAR6iB,EAAQ7iB,EAC3B,GAAMS,EAAUgT,IAChB,KAAKvS,EAASwY,IACTxB,EAASwB,IACT7B,GAAkB6B,IAClB9B,GAAa8B,IACR,MAAA4H,GAAgBP,GAAeC,kBAGnC,IAAAzgB,EAAM2X,EAASwB,GACfkD,OAAOlD,IACP7B,GAAkB6B,GACdA,GAuBH,OArBHxB,EAASyB,GACTlZ,EAAQyO,OAASyK,EAEZzY,EAASyY,GACdlZ,EAAQuW,QAAU2C,EAEbnY,EAAcmY,KAAU9X,EAAc8X,GAC3ClZ,EAAQ6W,MAAQqC,EAEXnG,EAAQmG,KACblZ,EAAQyW,KAAOyC,GAEfzB,EAAS2K,GACTpiB,EAAQyO,OAAS2T,EAEZ3hB,EAAS2hB,GACdpiB,EAAQuW,QAAU6L,EAEbrhB,EAAcqhB,IACnB3gB,EAAOzB,EAASoiB,GAEb,CAACtiB,EAAKE,EACjB,CAvtD6C,kBAA9BgV,4BACP+F,IAAgB/F,2BAA4B,GAEC,kBAAtCpS,oCACPmY,IAAgBnY,mCAAoC","x_google_ignoreList":[0,1,2]}